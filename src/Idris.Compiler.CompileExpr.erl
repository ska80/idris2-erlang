-module('Idris.Compiler.CompileExpr').

-compile(no_auto_import).

-export(['case--case block in mkForgetDef-9072'/6, 'case--mkForgetDef-9060'/4, 'case--compileDef-9002'/4, 'case--toCDef-8822'/6, 'case--toCDef-8750'/7, 'case--toCDef-8690'/5, 'case--case block in nfToCFType-8314'/14, 'case--nfToCFType-8238'/11, 'case--getNArgs-8001'/5, 'case--case block in case block in getFieldArgs-7837'/13, 'case--case block in getFieldArgs-7797'/8, 'case--getFieldArgs-7782'/3, 'case--case block in case block in getPArgs-7676'/12, 'case--case block in getPArgs-7642'/9, 'case--getPArgs-7626'/3, 'case--mkArgList-7586'/3, 'case--toCExpTree\'-7432'/15, 'case--case block in toCExpTree\'-7256'/19, 'case--toCExpTree\'-7200'/15, 'case--getNewType-6991'/12, 'case--getNewType,mkSubst-6888'/17, 'case--case block in case block in case block in conCases-6647'/18, 'case--case block in case block in conCases-6599'/14, 'case--case block in conCases-6533'/12, 'case--conCases-6510'/10, 'case--case block in toCExp-6375'/10, 'case--toCExp-6325'/5, 'case--toCExpTm-6261'/7, 'case--boolHackTree-5852'/6, 'case--natHackTree-5683'/6, 'case--case block in mkDropSubst-5331'/8, 'case--mkDropSubst-5310'/6, 'case--dropPos,drop-5216'/10, 'case--applyNewType,keep-5118'/10, 'case--case block in numArgs-4713'/8, 'case--numArgs-4698'/6, 'nested--8642-5744--in--un--toBool'/6, 'nested--11791-8770--in--un--toArgExp'/7, 'nested--11791-8640--in--un--toArgExp'/6, 'nested--9395-6862--in--un--mkSubst'/15, 'nested--7714-4917--in--un--mkLocal'/6, 'nested--7714-4918--in--un--mkApp'/6, 'nested--7913-5097--in--un--keepArg'/7, 'nested--7913-5096--in--un--keep'/8, 'nested--11791-8771--in--un--getVars'/8, 'nested--11791-8641--in--un--getVars'/7, 'nested--8031-5202--in--un--drop'/8, 'nested--9389-6482--in--un--dcon'/9, 'nested--7810-5015--in--un--applyAll'/5, 'nested--7810-5037--in--un--addArg'/7, 'un--weakenVar'/3, 'un--tryZBranch'/2, 'un--trySBranch'/3, 'un--toCExpTree\''/4, 'un--toCExpTree'/4, 'un--toCExpTm'/4, 'un--toCExp'/4, 'un--toCDef'/4, 'un--numArgs'/3, 'un--nfToCFType'/4, 'un--natHackTree'/2, 'un--natHack'/2, 'un--natBranch'/2, 'un--mkForgetDef'/3, 'un--mkDropSubst'/4, 'un--mkArgList'/2, 'un--isNatCon'/1, 'un--getZBranch'/2, 'un--getSBranch'/3, 'un--getPArgs'/3, 'un--getNewType'/6, 'un--getNArgs'/3, 'un--getFieldArgs'/3, 'un--getDef'/4, 'un--getCFTypes'/3, 'un--expandToArity'/4, 'un--etaExpand'/5, 'un--eraseConArgs'/5, 'un--dropPos'/3, 'un--constCases'/4, 'un--conCases'/4, 'un--compileExp'/3, 'un--compileDef'/3, 'un--boolHackTree'/2, 'un--applyNewType'/5]).

'case--case block in mkForgetDef-9072'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Prelude.Nothing'} -> fun () -> fun (V6) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkUnit'}} end end();
      {'Idris.Prelude.Just', E0} -> fun (V7) -> begin V8 = 'Idris.Core.CompileExpr':'un--forgetDef'(V7), fun (V9) -> 'Idris.Core.Context':'un--setNamedCompiled'(V1, V0, V8, V9) end end end(E0);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--mkForgetDef-9060'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Prelude.Just', E0} ->
	  fun (V4) ->
		  begin
		    V5 = {'Idris.Prelude.Just', V4},
		    'case--case block in mkForgetDef-9072'(V0, V1, V2, V4, V5,
							   case V4 of
							     {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21);
							     _ -> erlang:throw("Error: Unreachable branch")
							   end)
		  end
	  end(E0);
      {'Idris.Prelude.Nothing'} -> fun () -> fun (V27) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.InternalError', 'Idris.Prelude.Strings':'un--++'(<<"Trying to compile unknown name "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V0))}, V27) end end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--compileDef-9002'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Prelude.Just', E0} ->
	  fun (V4) ->
		  fun (V5) ->
			  begin
			    V55 = begin
				    V31 = 'Idris.Core.Context':'un--toFullNames'(erased, V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6) -> fun (V7) -> 'Idris.Core.Context':'dn--un--full_HasNames__Def'(V6, V7) end end, fun (V8) -> fun (V9) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Def'(V8, V9) end end},
										 case V4 of
										   {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> V27 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21);
										   _ -> erlang:throw("Error: Unreachable branch")
										 end,
										 V5),
				    case V31 of
				      {'Idris.Prelude.Left', E22} -> fun (V32) -> {'Idris.Prelude.Left', V32} end(E22);
				      {'Idris.Prelude.Right', E23} ->
					  fun (V33) ->
						  ('un--toCDef'(V1, V0,
								case V4 of
								  {'Idris.Core.Context.MkGlobalDef', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44} -> fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54) -> V36 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44);
								  _ -> erlang:throw("Error: Unreachable branch")
								end,
								V33))(V5)
					  end(E23);
				      _ -> erlang:throw("Error: Unreachable branch")
				    end
				  end,
			    case V55 of
			      {'Idris.Prelude.Left', E45} -> fun (V56) -> {'Idris.Prelude.Left', V56} end(E45);
			      {'Idris.Prelude.Right', E46} -> fun (V57) -> 'Idris.Core.Context':'un--setCompiled'(V1, V0, V57, V5) end(E46);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0);
      {'Idris.Prelude.Nothing'} -> fun () -> fun (V58) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.InternalError', 'Idris.Prelude.Strings':'un--++'(<<"Trying to compile unknown name "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V0))}, V58) end end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCDef-8822'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Builtin.DPair.MkDPair', E0, E1} -> fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkFun', V6, {'Idris.Core.CompileExpr.COp', V0, 'Idris.Core.FC':'un--emptyFC'(), V1, 'Idris.Data.Vect':'dn--un--map_Functor__(Vect $n)'(erased, erased, erased, fun (V9) -> 'nested--11791-8770--in--un--toArgExp'(V0, V1, V2, V3, V4, erased, V9) end, 'nested--11791-8771--in--un--getVars'(V0, V1, V2, V3, V4, erased, erased, V7))}}} end end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCDef-8750'(V0, V1, V2, V3, V4, V5, V6) ->
    case V6 of
      {'Idris.Builtin.MkPair', E0, E1} -> fun (V7, V8) -> fun (V9) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkForeign', V0, V7, V8}} end end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCDef-8690'(V0, V1, V2, V3, V4) ->
    case V4 of
      {'Idris.Builtin.DPair.MkDPair', E0, E1} ->
	  fun (V5, V6) ->
		  fun (V7) ->
			  begin
			    V8 = ('Idris.Core.Context':'un--getFullName'(V3, V2))(V7),
			    case V8 of
			      {'Idris.Prelude.Left', E2} -> fun (V9) -> {'Idris.Prelude.Left', V9} end(E2);
			      {'Idris.Prelude.Right', E3} -> fun (V10) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkFun', V5, {'Idris.Core.CompileExpr.CExtPrim', 'Idris.Core.FC':'un--emptyFC'(), V10, 'Idris.Prelude':'dn--un--map_Functor__List'(erased, erased, fun (V11) -> 'nested--11791-8640--in--un--toArgExp'(V0, V1, V2, V3, erased, V11) end, 'nested--11791-8641--in--un--getVars'(V0, V1, V2, V3, erased, erased, V6))}}} end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in nfToCFType-8314'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) ->
    case V13 of
      {'Idris.Builtin.MkPair', E0, E1} ->
	  fun (V14, V15) ->
		  fun (V16) ->
			  begin
			    V17 = ('Idris.Core.Normalise':'un--evalClosure'([], V8, V15))(V16),
			    case V17 of
			      {'Idris.Prelude.Left', E2} -> fun (V18) -> {'Idris.Prelude.Left', V18} end(E2);
			      {'Idris.Prelude.Right', E3} ->
				  fun (V19) ->
					  begin
					    V20 = ('un--nfToCFType'(V7, V5, 0, V19))(V16),
					    case V20 of
					      {'Idris.Prelude.Left', E4} -> fun (V21) -> {'Idris.Prelude.Left', V21} end(E4);
					      {'Idris.Prelude.Right', E5} -> fun (V22) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V14, V22}} end(E5);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--nfToCFType-8238'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) ->
    case V10 of
      {'Idris.Compiler.CompileExpr.User', E0, E1} ->
	  fun (V11, V12) ->
		  fun (V13) ->
			  begin
			    V15 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V14) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8, V14) end, V12))(V13),
			    case V15 of
			      {'Idris.Prelude.Left', E2} -> fun (V16) -> {'Idris.Prelude.Left', V16} end(E2);
			      {'Idris.Prelude.Right', E3} ->
				  fun (V17) ->
					  begin
					    V19 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V18) -> 'un--nfToCFType'(V7, V5, V6, V18) end, V17))(V13),
					    case V19 of
					      {'Idris.Prelude.Left', E4} -> fun (V20) -> {'Idris.Prelude.Left', V20} end(E4);
					      {'Idris.Prelude.Right', E5} -> fun (V21) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9, V21}} end(E5);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0, E1);
      {'Idris.Compiler.CompileExpr.Struct', E6, E7} ->
	  fun (V22, V23) ->
		  fun (V24) ->
			  begin
			    V35 = ('Idris.Core.Core':'un--traverse'(erased, erased,
								    fun (V25) ->
									    case V25 of
									      {'Idris.Builtin.MkPair', E8, E9} ->
										  fun (V26, V27) ->
											  fun (V28) ->
												  begin
												    V29 = ('Idris.Core.Normalise':'un--evalClosure'([], V8, V27))(V28),
												    case V29 of
												      {'Idris.Prelude.Left', E10} -> fun (V30) -> {'Idris.Prelude.Left', V30} end(E10);
												      {'Idris.Prelude.Right', E11} ->
													  fun (V31) ->
														  begin
														    V32 = ('un--nfToCFType'(V7, V5, 0, V31))(V28),
														    case V32 of
														      {'Idris.Prelude.Left', E12} -> fun (V33) -> {'Idris.Prelude.Left', V33} end(E12);
														      {'Idris.Prelude.Right', E13} -> fun (V34) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V26, V34}} end(E13);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E11);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E8, E9);
									      _ -> erlang:throw("Error: Unreachable branch")
									    end
								    end,
								    V23))(V24),
			    case V35 of
			      {'Idris.Prelude.Left', E14} -> fun (V36) -> {'Idris.Prelude.Left', V36} end(E14);
			      {'Idris.Prelude.Right', E15} -> fun (V37) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V22, V37}} end(E15);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E6, E7);
      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> fun (V38) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end end();
      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> fun (V39) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end end();
      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> fun (V40) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end end();
      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> fun (V41) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end end();
      {'Idris.Compiler.CompileExpr.NIORes', E16} ->
	  fun (V42) ->
		  fun (V43) ->
			  begin
			    V44 = ('Idris.Core.Normalise':'un--evalClosure'([], V8, V42))(V43),
			    case V44 of
			      {'Idris.Prelude.Left', E17} -> fun (V45) -> {'Idris.Prelude.Left', V45} end(E17);
			      {'Idris.Prelude.Right', E18} ->
				  fun (V46) ->
					  begin
					    V47 = ('un--nfToCFType'(V7, V5, V6, V46))(V43),
					    case V47 of
					      {'Idris.Prelude.Left', E19} -> fun (V48) -> {'Idris.Prelude.Left', V48} end(E19);
					      {'Idris.Prelude.Right', E20} -> fun (V49) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V49}} end(E20);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E18);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E16);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--getNArgs-8001'(V0, V1, V2, V3, V4) ->
    case V4 of
      {'Idris.Core.Value.NPrimVal', E0, E1} ->
	  fun (V5, V6) ->
		  case V6 of
		    {'Idris.Core.TT.Str', E2} ->
			fun (V7) ->
				fun (V8) ->
					begin
					  V9 = 'un--getFieldArgs'(V3, V2, V8),
					  case V9 of
					    {'Idris.Prelude.Left', E3} -> fun (V10) -> {'Idris.Prelude.Left', V10} end(E3);
					    {'Idris.Prelude.Right', E4} -> fun (V11) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Struct', V7, V11}} end(E4);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E2);
		    _ -> fun (V12) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V4), <<"Unknown name for struct"/utf8>>}, V12) end
		  end
	  end(E0, E1);
      _ -> fun (V13) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V4), <<"Unknown name for struct"/utf8>>}, V13) end
    end.

'case--case block in case block in getFieldArgs-7837'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) ->
    case V12 of
      {'Idris.Builtin.MkPair', E0, E1} -> fun (V13, V14) -> fun (V15) -> {'Idris.Prelude.Right', [{'Idris.Builtin.MkPair', V13, V14} | V11]} end end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in getFieldArgs-7797'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V5 of
      [E0 | E1] ->
	  fun (V8, V9) ->
		  case V9 of
		    [E2 | E3] ->
			fun (V10, V11) ->
				case V11 of
				  [E4 | E5] ->
				      fun (V12, V13) ->
					      case V13 of
						[] ->
						    fun (V14) ->
							    begin
							      V15 = 'un--getFieldArgs'(V1, V12, V14),
							      case V15 of
								{'Idris.Prelude.Left', E6} -> fun (V16) -> {'Idris.Prelude.Left', V16} end(E6);
								{'Idris.Prelude.Right', E7} ->
								    fun (V17) ->
									    begin
									      V18 = 'un--getPArgs'(V1, V10, V14),
									      case V18 of
										{'Idris.Prelude.Left', E8} -> fun (V19) -> {'Idris.Prelude.Left', V19} end(E8);
										{'Idris.Prelude.Right', E9} ->
										    fun (V20) ->
											    case V20 of
											      {'Idris.Builtin.MkPair', E10, E11} -> fun (V21, V22) -> {'Idris.Prelude.Right', [{'Idris.Builtin.MkPair', V21, V22} | V17]} end(E10, E11);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
										    end(E9);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end(E7);
								_ -> erlang:throw("Error: Unreachable branch")
							      end
							    end
						    end;
						_ -> fun (V23) -> {'Idris.Prelude.Right', []} end
					      end
				      end(E4, E5);
				  _ -> fun (V24) -> {'Idris.Prelude.Right', []} end
				end
			end(E2, E3);
		    _ -> fun (V25) -> {'Idris.Prelude.Right', []} end
		  end
	  end(E0, E1);
      _ -> fun (V26) -> {'Idris.Prelude.Right', []} end
    end.

'case--getFieldArgs-7782'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} ->
	  fun (V3, V4, V5, V6, V7) ->
		  case V7 of
		    [E5 | E6] ->
			fun (V8, V9) ->
				case V9 of
				  [E7 | E8] ->
				      fun (V10, V11) ->
					      case V11 of
						[E9 | E10] ->
						    fun (V12, V13) ->
							    case V13 of
							      [] ->
								  fun (V14) ->
									  begin
									    V15 = 'un--getFieldArgs'(V1, V12, V14),
									    case V15 of
									      {'Idris.Prelude.Left', E11} -> fun (V16) -> {'Idris.Prelude.Left', V16} end(E11);
									      {'Idris.Prelude.Right', E12} ->
										  fun (V17) ->
											  begin
											    V18 = 'un--getPArgs'(V1, V10, V14),
											    case V18 of
											      {'Idris.Prelude.Left', E13} -> fun (V19) -> {'Idris.Prelude.Left', V19} end(E13);
											      {'Idris.Prelude.Right', E14} ->
												  fun (V20) ->
													  case V20 of
													    {'Idris.Builtin.MkPair', E15, E16} -> fun (V21, V22) -> {'Idris.Prelude.Right', [{'Idris.Builtin.MkPair', V21, V22} | V17]} end(E15, E16);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
												  end(E14);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end(E12);
									      _ -> erlang:throw("Error: Unreachable branch")
									    end
									  end
								  end;
							      _ -> fun (V23) -> {'Idris.Prelude.Right', []} end
							    end
						    end(E9, E10);
						_ -> fun (V24) -> {'Idris.Prelude.Right', []} end
					      end
				      end(E7, E8);
				  _ -> fun (V25) -> {'Idris.Prelude.Right', []} end
				end
			end(E5, E6);
		    _ -> fun (V26) -> {'Idris.Prelude.Right', []} end
		  end
	  end(E0, E1, E2, E3, E4);
      _ -> fun (V27) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V2), <<"Badly formed struct type"/utf8>>}, V27) end
    end.

'case--case block in case block in getPArgs-7676'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) ->
    case V11 of
      {'Idris.Core.Value.NPrimVal', E0, E1} ->
	  fun (V12, V13) ->
		  case V13 of
		    {'Idris.Core.TT.Str', E2} -> fun (V14) -> fun (V15) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V14, V9}} end end(E2);
		    _ -> fun (V16) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V11), <<"Unknown field name"/utf8>>}, V16) end
		  end
	  end(E0, E1);
      _ -> fun (V17) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V11), <<"Unknown field name"/utf8>>}, V17) end
    end.

'case--case block in getPArgs-7642'(V0, V1, V2, V3, V4, V5, V6, V7, V8) ->
    case V8 of
      [E0 | E1] ->
	  fun (V9, V10) ->
		  case V10 of
		    [E2 | E3] ->
			fun (V11, V12) ->
				fun (V13) ->
					begin
					  V14 = ('Idris.Core.Normalise':'un--evalClosure'([], V1, V11))(V13),
					  case V14 of
					    {'Idris.Prelude.Left', E4} -> fun (V15) -> {'Idris.Prelude.Left', V15} end(E4);
					    {'Idris.Prelude.Right', E5} ->
						fun (V16) ->
							case V16 of
							  {'Idris.Core.Value.NPrimVal', E6, E7} ->
							      fun (V17, V18) ->
								      case V18 of
									{'Idris.Core.TT.Str', E8} -> fun (V19) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V19, V9}} end(E8);
									_ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V16), <<"Unknown field name"/utf8>>}, V13)
								      end
							      end(E6, E7);
							  _ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V16), <<"Unknown field name"/utf8>>}, V13)
							end
						end(E5);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E2, E3);
		    _ -> fun (V20) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V6, <<"Badly formed struct type"/utf8>>}, V20) end
		  end
	  end(E0, E1);
      _ -> fun (V21) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V6, <<"Badly formed struct type"/utf8>>}, V21) end
    end.

'case--getPArgs-7626'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> fun (V3, V4, V5, V6, V7) -> begin V8 = {'Idris.Core.Value.NDCon', V3, V4, V5, V6, V7}, 'case--case block in getPArgs-7642'(V0, V1, V4, V5, V6, V7, V3, V8, 'Idris.Data.List':'un--reverse'(erased, V7)) end end(E0, E1, E2, E3, E4);
      _ -> fun (V9) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V2), <<"Badly formed struct type"/utf8>>}, V9) end
    end.

'case--mkArgList-7586'(V0, V1, V2) ->
    case V2 of
      {'Idris.Builtin.DPair.MkDPair', E0, E1} -> fun (V3, V4) -> {'Idris.Builtin.DPair.MkDPair', [{'Idris.Core.Name.MN', <<"arg"/utf8>>, V1} | V3], {'Idris.Compiler.CompileExpr.ConsArg', {'Idris.Core.Name.MN', <<"arg"/utf8>>, V1}, V4}} end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCExpTree\'-7432'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) ->
    case V14 of
      0 -> fun (V15) -> {'Idris.Prelude.Right', 'Idris.Data.Maybe':'un--fromMaybe'(erased, fun () -> {'Idris.Core.CompileExpr.CErased', V11} end, V13)} end;
      1 -> fun (V16) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CConstCase', V11, {'Idris.Core.CompileExpr.CLocal', V7, V11}, V12, V13}} end;
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in toCExpTree\'-7256'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) ->
    case V18 of
      0 -> fun (V19) -> {'Idris.Prelude.Right', 'Idris.Data.Maybe':'un--fromMaybe'(erased, fun () -> {'Idris.Core.CompileExpr.CErased', V13} end, V17)} end;
      1 -> fun (V20) -> {'Idris.Prelude.Right', 'un--boolHackTree'(erased, 'un--natHackTree'(erased, {'Idris.Core.CompileExpr.CConCase', V13, {'Idris.Core.CompileExpr.CLocal', V2, V13}, V16, V17}))} end;
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCExpTree\'-7200'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) ->
    case V14 of
      {'Idris.Prelude.Nothing'} ->
	  fun () ->
		  fun (V15) ->
			  begin
			    V44 = begin V43 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V18, V19, V20) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin V29 = V26(V28), begin V30 = V27(V28), V29(V30) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin V36 = V33(V35), (V34(V36))(V35) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin V40 = V38(V39), V40(V39) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, V12))(V15), {'Idris.Prelude.Right', V43} end,
			    case V44 of
			      {'Idris.Prelude.Left', E0} -> fun (V45) -> {'Idris.Prelude.Left', V45} end(E0);
			      {'Idris.Prelude.Right', E1} ->
				  fun (V46) ->
					  begin
					    V47 = ('un--conCases'(V0, V12, V11, V8))(V15),
					    case V47 of
					      {'Idris.Prelude.Left', E2} -> fun (V48) -> {'Idris.Prelude.Left', V48} end(E2);
					      {'Idris.Prelude.Right', E3} ->
						  fun (V49) ->
							  begin
							    V50 = ('un--getDef'(V0, V12, V11, V8))(V15),
							    case V50 of
							      {'Idris.Prelude.Left', E4} -> fun (V51) -> {'Idris.Prelude.Left', V51} end(E4);
							      {'Idris.Prelude.Right', E5} -> fun (V52) -> begin V53 = {'Idris.Prelude.Nothing'}, ('case--case block in toCExpTree\'-7256'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, erased, V11, V12, V13, V53, V46, V49, V52, 'Idris.Data.List':'un--isNil'(erased, V49)))(V15) end end(E5);
							      _ -> erlang:throw("Error: Unreachable branch")
							    end
							  end
						  end(E3);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E1);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end();
      {'Idris.Prelude.Just', E6} -> fun (V54) -> fun (V55) -> {'Idris.Prelude.Right', V54} end end(E6);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--getNewType-6991'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) ->
    case V11 of
      {'Idris.Prelude.Just', E0} ->
	  fun (V12) ->
		  case V12 of
		    {'Idris.Core.Context.DCon', E1, E2, E3} ->
			fun (V13, V14, V15) ->
				case V15 of
				  {'Idris.Prelude.Just', E4} ->
				      fun (V16) ->
					      case V16 of
						{'Idris.Builtin.MkPair', E5, E6} ->
						    fun (V17, V18) ->
							    begin
							      V19 = 'nested--9395-6862--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, erased, 0, V7, V18, V0),
							      fun (V20) ->
								      begin
									V21 = ('un--toCExpTree'('Idris.Prelude.List':'un--++'(erased, V0, V1), V9, V6, V2))(V20),
									case V21 of
									  {'Idris.Prelude.Left', E7} -> fun (V22) -> {'Idris.Prelude.Left', V22} end(E7);
									  {'Idris.Prelude.Right', E8} -> fun (V23) -> {'Idris.Prelude.Right', {'Idris.Prelude.Just', 'Idris.Core.CompileExpr':'un--substs'(V0, V1, V19, V23)}} end(E8);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
							    end
						    end(E5, E6);
						_ -> fun (V24) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end
					      end
				      end(E4);
				  _ -> fun (V25) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end
				end
			end(E1, E2, E3);
		    _ -> fun (V26) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end
		  end
	  end(E0);
      _ -> fun (V27) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end
    end.

'case--getNewType,mkSubst-6888'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) ->
    case V16 of
      0 -> {'Idris.Core.CompileExpr.SubstCEnv.::', V14, 'nested--9395-6862--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, erased, 'Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V15), V14, V13, V12)};
      1 -> {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CErased', V8}, 'nested--9395-6862--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, erased, 'Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V15), V14, V13, V12)};
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in case block in case block in conCases-6647'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) ->
    case V17 of
      0 -> fun (V18) -> {'Idris.Prelude.Right', [{'Idris.Core.CompileExpr.MkConAlt', V12, {'Idris.Prelude.Just', V3}, V13, 'Idris.Core.CompileExpr':'un--shrinkCExp'(erased, erased, V14, V15)} | V16]} end;
      1 -> fun (V19) -> {'Idris.Prelude.Right', [{'Idris.Core.CompileExpr.MkConAlt', V12, {'Idris.Prelude.Nothing'}, V13, 'Idris.Core.CompileExpr':'un--shrinkCExp'(erased, erased, V14, V15)} | V16]} end;
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in case block in conCases-6599'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) ->
    case V13 of
      {'Idris.Builtin.DPair.MkDPair', E0, E1} ->
	  fun (V14, V15) ->
		  fun (V16) ->
			  begin
			    V17 = ('un--toCExpTree'('Idris.Prelude.List':'un--++'(erased, V0, V1), V7, V6, V2))(V16),
			    case V17 of
			      {'Idris.Prelude.Left', E2} -> fun (V18) -> {'Idris.Prelude.Left', V18} end(E2);
			      {'Idris.Prelude.Right', E3} ->
				  fun (V19) ->
					  begin
					    V20 = ('un--conCases'(V1, V7, V6, V5))(V16),
					    case V20 of
					      {'Idris.Prelude.Left', E4} -> fun (V21) -> {'Idris.Prelude.Left', V21} end(E4);
					      {'Idris.Prelude.Right', E5} ->
						  fun (V22) ->
							  ('case--case block in case block in case block in conCases-6647'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V14, V15, V19, V22,
															   'nested--9389-6482--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7,
																			     case V9 of
																			       {'Idris.Core.Context.MkGlobalDef', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V40 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26);
																			       _ -> erlang:throw("Error: Unreachable branch")
																			     end)))(V16)
						  end(E5);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in conCases-6533'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) ->
    case V11 of
      {'Idris.Core.Context.DCon', E23, E24, E25} ->
	  fun (V12, V13, V14) ->
		  case V14 of
		    {'Idris.Prelude.Just', E49} -> fun (V15) -> 'un--conCases'(V1, V7, V6, V5) end(E49);
		    _ ->
			fun (V16) ->
				begin
				  V17 = ('Idris.Core.Context':'un--getFullName'(V7, V4))(V16),
				  case V17 of
				    {'Idris.Prelude.Left', E26} -> fun (V18) -> {'Idris.Prelude.Left', V18} end(E26);
				    {'Idris.Prelude.Right', E27} ->
					fun (V19) ->
						('case--case block in case block in conCases-6599'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V19,
												   'un--mkDropSubst'(0,
														     case V9 of
														       {'Idris.Core.Context.MkGlobalDef', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48} -> fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V23 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48);
														       _ -> erlang:throw("Error: Unreachable branch")
														     end,
														     V1, V0)))(V16)
					end(E27);
				    _ -> erlang:throw("Error: Unreachable branch")
				  end
				end
			end
		  end
	  end(E23, E24, E25);
      _ ->
	  fun (V41) ->
		  begin
		    V42 = ('Idris.Core.Context':'un--getFullName'(V7, V4))(V41),
		    case V42 of
		      {'Idris.Prelude.Left', E0} -> fun (V43) -> {'Idris.Prelude.Left', V43} end(E0);
		      {'Idris.Prelude.Right', E1} ->
			  fun (V44) ->
				  ('case--case block in case block in conCases-6599'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V44,
										     'un--mkDropSubst'(0,
												       case V9 of
													 {'Idris.Core.Context.MkGlobalDef', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V48 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22);
													 _ -> erlang:throw("Error: Unreachable branch")
												       end,
												       V1, V0)))(V41)
			  end(E1);
		      _ -> erlang:throw("Error: Unreachable branch")
		    end
		  end
	  end
    end.

'case--conCases-6510'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) ->
    case V9 of
      {'Idris.Prelude.Just', E0} ->
	  fun (V10) ->
		  begin
		    V11 = {'Idris.Prelude.Just', V10},
		    'case--case block in conCases-6533'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, V11,
							case V10 of
							  {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V29 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21);
							  _ -> erlang:throw("Error: Unreachable branch")
							end)
		  end
	  end(E0);
      {'Idris.Prelude.Nothing'} ->
	  fun () ->
		  fun (V33) ->
			  begin
			    V34 = ('Idris.Core.Context':'un--getFullName'(V7, V4))(V33),
			    case V34 of
			      {'Idris.Prelude.Left', E22} -> fun (V35) -> {'Idris.Prelude.Left', V35} end(E22);
			      {'Idris.Prelude.Right', E23} ->
				  fun (V36) ->
					  begin
					    V37 = ('un--toCExpTree'('Idris.Prelude.List':'un--++'(erased, V0, V1), V7, V6, V2))(V33),
					    case V37 of
					      {'Idris.Prelude.Left', E24} -> fun (V38) -> {'Idris.Prelude.Left', V38} end(E24);
					      {'Idris.Prelude.Right', E25} ->
						  fun (V39) ->
							  begin
							    V40 = ('un--conCases'(V1, V7, V6, V5))(V33),
							    case V40 of
							      {'Idris.Prelude.Left', E26} -> fun (V41) -> {'Idris.Prelude.Left', V41} end(E26);
							      {'Idris.Prelude.Right', E27} -> fun (V42) -> {'Idris.Prelude.Right', [{'Idris.Core.CompileExpr.MkConAlt', V36, {'Idris.Prelude.Nothing'}, V0, V39} | V42]} end(E27);
							      _ -> erlang:throw("Error: Unreachable branch")
							    end
							  end
						  end(E25);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E23);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in toCExp-6375'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) ->
    case V9 of
      {'Idris.Compiler.CompileExpr.Arity', E0} -> fun (V10) -> begin V11 = 'un--expandToArity'(V0, V10, V8, V6), fun (V12) -> {'Idris.Prelude.Right', 'un--natHack'(erased, V11)} end end end(E0);
      {'Idris.Compiler.CompileExpr.NewTypeBy', E1, E2} -> fun (V13, V14) -> begin V15 = 'un--applyNewType'(V0, V13, V14, V8, V6), fun (V16) -> {'Idris.Prelude.Right', 'un--natHack'(erased, V15)} end end end(E1, E2);
      {'Idris.Compiler.CompileExpr.EraseArgs', E3, E4} -> fun (V17, V18) -> begin V19 = 'un--eraseConArgs'(V0, V17, V18, V8, V6), fun (V20) -> {'Idris.Prelude.Right', 'un--natHack'(erased, V19)} end end end(E3, E4);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCExp-6325'(V0, V1, V2, V3, V4) ->
    case V4 of
      {'Idris.Builtin.MkPair', E0, E1} ->
	  fun (V5, V6) ->
		  fun (V7) ->
			  begin
			    V9 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8) -> 'un--toCExp'(V0, V3, V2, V8) end, V6))(V7),
			    case V9 of
			      {'Idris.Prelude.Left', E2} -> fun (V10) -> {'Idris.Prelude.Left', V10} end(E2);
			      {'Idris.Prelude.Right', E3} ->
				  fun (V11) ->
					  begin
					    V40 = begin V39 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V14, V15, V16) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin V25 = V22(V24), begin V26 = V23(V24), V25(V26) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin V32 = V29(V31), (V30(V32))(V31) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin V36 = V34(V35), V36(V35) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, V3))(V7), {'Idris.Prelude.Right', V39} end,
					    case V40 of
					      {'Idris.Prelude.Left', E4} -> fun (V41) -> {'Idris.Prelude.Left', V41} end(E4);
					      {'Idris.Prelude.Right', E5} ->
						  fun (V42) ->
							  begin
							    V43 = ('un--toCExpTm'(V0, V3, V2, V5))(V7),
							    case V43 of
							      {'Idris.Prelude.Left', E6} -> fun (V44) -> {'Idris.Prelude.Left', V44} end(E6);
							      {'Idris.Prelude.Right', E7} ->
								  fun (V45) ->
									  begin
									    V46 = ('un--numArgs'(erased, V42, V5))(V7),
									    case V46 of
									      {'Idris.Prelude.Left', E8} -> fun (V47) -> {'Idris.Prelude.Left', V47} end(E8);
									      {'Idris.Prelude.Right', E9} ->
										  fun (V48) ->
											  case V48 of
											    {'Idris.Compiler.CompileExpr.Arity', E10} -> fun (V49) -> begin V50 = 'un--expandToArity'(V0, V49, V45, V11), {'Idris.Prelude.Right', 'un--natHack'(erased, V50)} end end(E10);
											    {'Idris.Compiler.CompileExpr.NewTypeBy', E11, E12} -> fun (V51, V52) -> begin V53 = 'un--applyNewType'(V0, V51, V52, V45, V11), {'Idris.Prelude.Right', 'un--natHack'(erased, V53)} end end(E11, E12);
											    {'Idris.Compiler.CompileExpr.EraseArgs', E13, E14} -> fun (V54, V55) -> begin V56 = 'un--eraseConArgs'(V0, V54, V55, V45, V11), {'Idris.Prelude.Right', 'un--natHack'(erased, V56)} end end(E13, E14);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
										  end(E9);
									      _ -> erlang:throw("Error: Unreachable branch")
									    end
									  end
								  end(E7);
							      _ -> erlang:throw("Error: Unreachable branch")
							    end
							  end
						  end(E5);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--toCExpTm-6261'(V0, V1, V2, V3, V4, V5, V6) ->
    case V6 of
      0 -> fun (V7) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V3, V2}} end;
      1 -> fun (V8) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V3, {'Idris.Core.Name.UN', 'Idris.Core.TT':'dn--un--show_Show__Constant'(V2)}, {'Idris.Prelude.Nothing'}, []}} end;
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--boolHackTree-5852'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Prelude.Just', E0} -> fun (V6) -> {'Idris.Core.CompileExpr.CConstCase', V4, V3, V6, V1} end(E0);
      {'Idris.Prelude.Nothing'} -> fun () -> {'Idris.Core.CompileExpr.CConCase', V4, V3, V2, V1} end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--natHackTree-5683'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      0 -> begin V7 = 'Idris.Prelude':'un--maybe'(erased, erased, fun () -> {'Idris.Core.CompileExpr.CCrash', V4, <<"Nat case not covered"/utf8>>} end, fun () -> fun (V6) -> V6 end end, V1), begin V9 = 'Idris.Prelude':'un--maybe'(erased, erased, fun () -> V7 end, fun () -> fun (V8) -> V8 end end, 'un--getSBranch'(erased, V3, V2)), begin V11 = 'Idris.Prelude':'un--maybe'(erased, erased, fun () -> V7 end, fun () -> fun (V10) -> V10 end end, 'un--getZBranch'(erased, V2)), {'Idris.Core.CompileExpr.CConstCase', V4, V3, [{'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.BI', 0}, V11}], {'Idris.Prelude.Just', V9}} end end end;
      1 -> {'Idris.Core.CompileExpr.CConCase', V4, V3, V2, V1};
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in mkDropSubst-5331'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V7 of
      0 -> {'Idris.Builtin.DPair.MkDPair', V5, {'Idris.Core.TT.DropCons', V6}};
      1 -> {'Idris.Builtin.DPair.MkDPair', [V0 | V5], {'Idris.Core.TT.KeepCons', V6}};
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--mkDropSubst-5310'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Builtin.DPair.MkDPair', E0, E1} -> fun (V6, V7) -> 'case--case block in mkDropSubst-5331'(V0, V1, V2, V3, V4, V6, V7, 'Idris.Prelude':'un--elem'(erased, {'Idris.Prelude.dn--un--__mkEq', fun (V8) -> fun (V9) -> 'Idris.Prelude':'dn--un--==_Eq__Nat'(V8, V9) end end, fun (V10) -> fun (V11) -> 'Idris.Prelude':'dn--un--/=_Eq__Nat'(V10, V11) end end}, V4, V3)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--dropPos,drop-5216'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) ->
    case V9 of
      0 -> 'nested--8031-5202--in--un--drop'(erased, V1, V2, V3, V4, V5, 'Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V8), V7);
      1 -> [V6 | 'nested--8031-5202--in--un--drop'(erased, V1, V2, V3, V4, V5, 'Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V8), V7)];
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--applyNewType,keep-5118'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) ->
    case V9 of
      0 -> V6;
      1 -> 'nested--7913-5096--in--un--keep'(V0, V1, V2, V3, V4, erased, 'Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V8), V7);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'case--case block in numArgs-4713'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V7 of
      {'Idris.Core.Context.DCon', E0, E1, E2} ->
	  fun (V8, V9, V10) ->
		  case V10 of
		    {'Idris.Prelude.Nothing'} ->
			fun () ->
				fun (V11) ->
					{'Idris.Prelude.Right',
					 {'Idris.Compiler.CompileExpr.EraseArgs', V9,
					  case V5 of
					    {'Idris.Core.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V15 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end}}
				end
			end();
		    {'Idris.Prelude.Just', E24} ->
			fun (V33) ->
				case V33 of
				  {'Idris.Builtin.MkPair', E25, E26} -> fun (V34, V35) -> fun (V36) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NewTypeBy', V9, V35}} end end(E25, E26);
				  _ -> fun (V37) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end
				end
			end(E24);
		    _ -> fun (V38) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end
		  end
	  end(E0, E1, E2);
      {'Idris.Core.Context.PMDef', E27, E28, E29, E30, E31} -> fun (V39, V40, V41, V42, V43) -> fun (V44) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 'Idris.Data.List':'un--length'(erased, V40)}} end end(E27, E28, E29, E30, E31);
      {'Idris.Core.Context.ExternDef', E32} -> fun (V45) -> fun (V46) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', V45}} end end(E32);
      {'Idris.Core.Context.ForeignDef', E33, E34} -> fun (V47, V48) -> fun (V49) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', V47}} end end(E33, E34);
      {'Idris.Core.Context.Builtin', E35, E36} -> fun (V50, V51) -> fun (V52) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', V50}} end end(E35, E36);
      _ -> fun (V53) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end
    end.

'case--numArgs-4698'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Prelude.Just', E0} ->
	  fun (V6) ->
		  begin
		    V7 = {'Idris.Prelude.Just', V6},
		    'case--case block in numArgs-4713'(erased, V1, V2, V3, V4, V6, V7,
						       case V6 of
							 {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21);
							 _ -> erlang:throw("Error: Unreachable branch")
						       end)
		  end
	  end(E0);
      {'Idris.Prelude.Nothing'} -> fun () -> fun (V29) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--8642-5744--in--un--toBool'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} ->
	  fun (V6, V7, V8, V9) ->
		  case V6 of
		    {'Idris.Core.Name.NS', E4, E5} ->
			fun (V10, V11) ->
				case V10 of
				  [E6 | E7] ->
				      fun (V12, V13) ->
					      case unicode:characters_to_binary(V12) of
						<<"Prelude"/utf8>> ->
						    case V13 of
						      [] ->
							  case V11 of
							    {'Idris.Core.Name.UN', E8} ->
								fun (V14) ->
									case unicode:characters_to_binary(V14) of
									  <<"True"/utf8>> ->
									      case V7 of
										{'Idris.Prelude.Just', E9} ->
										    fun (V15) ->
											    case V8 of
											      [] -> {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V15}, V9}};
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E9);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  <<"False"/utf8>> ->
									      case V7 of
										{'Idris.Prelude.Just', E10} ->
										    fun (V16) ->
											    case V8 of
											      [] -> {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V16}, V9}};
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E10);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  <<"LT"/utf8>> ->
									      case V7 of
										{'Idris.Prelude.Just', E11} ->
										    fun (V17) ->
											    case V8 of
											      [] -> {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V17}, V9}};
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E11);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  <<"EQ"/utf8>> ->
									      case V7 of
										{'Idris.Prelude.Just', E12} ->
										    fun (V18) ->
											    case V8 of
											      [] -> {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V18}, V9}};
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E12);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  <<"GT"/utf8>> ->
									      case V7 of
										{'Idris.Prelude.Just', E13} ->
										    fun (V19) ->
											    case V8 of
											      [] -> {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V19}, V9}};
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E13);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  _ -> {'Idris.Prelude.Nothing'}
									end
								end(E8);
							    _ -> {'Idris.Prelude.Nothing'}
							  end;
						      _ -> {'Idris.Prelude.Nothing'}
						    end;
						_ -> {'Idris.Prelude.Nothing'}
					      end
				      end(E6, E7);
				  _ -> {'Idris.Prelude.Nothing'}
				end
			end(E4, E5);
		    _ -> {'Idris.Prelude.Nothing'}
		  end
	  end(E0, E1, E2, E3);
      _ -> {'Idris.Prelude.Nothing'}
    end.

'nested--11791-8770--in--un--toArgExp'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Core.CompileExpr.CLocal', V6, 'Idris.Core.FC':'un--emptyFC'()}.

'nested--11791-8640--in--un--toArgExp'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, 'Idris.Core.FC':'un--emptyFC'()}.

'nested--9395-6862--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) ->
    case V14 of
      [] -> {'Idris.Core.CompileExpr.SubstCEnv.Nil'};
      [E0 | E1] -> fun (V15, V16) -> 'case--getNewType,mkSubst-6888'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, erased, V15, V16, V13, V12, V11, 'Idris.Prelude':'dn--un--==_Eq__Nat'(V11, V13)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--7714-4917--in--un--mkLocal'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, V4}.

'nested--7714-4918--in--un--mkApp'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      [] -> V4;
      _ ->
	  case V4 of
	    {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CApp', V6, V7, 'Idris.Prelude.List':'un--++'(erased, V8, V5)} end(E0, E1, E2);
	    {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> fun (V9, V10, V11, V12) -> {'Idris.Core.CompileExpr.CCon', V9, V10, V11, 'Idris.Prelude.List':'un--++'(erased, V12, V5)} end(E3, E4, E5, E6);
	    {'Idris.Core.CompileExpr.CExtPrim', E7, E8, E9} -> fun (V13, V14, V15) -> {'Idris.Core.CompileExpr.CExtPrim', V13, V14, 'Idris.Prelude.List':'un--++'(erased, V15, V5)} end(E7, E8, E9);
	    _ -> {'Idris.Core.CompileExpr.CApp', 'Idris.Core.CompileExpr':'un--getFC'(erased, V4), V4, V5}
	  end
    end.

'nested--7913-5097--in--un--keepArg'(V0, V1, V2, V3, V4, V5, V6) ->
    case V6 of
      {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CLam', V7, V8, 'nested--7913-5097--in--un--keepArg'(V0, V1, V2, V3, V4, erased, V9)} end(E0, E1, E2);
      {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> fun (V10, V11, V12, V13) -> 'nested--7913-5096--in--un--keep'(V0, V1, V2, V3, V4, erased, 0, V13) end(E3, E4, E5, E6);
      _ -> {'Idris.Core.CompileExpr.CErased', 'Idris.Core.CompileExpr':'un--getFC'(erased, V2)}
    end.

'nested--7913-5096--in--un--keep'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V7 of
      [] -> {'Idris.Core.CompileExpr.CErased', 'Idris.Core.CompileExpr':'un--getFC'(erased, V2)};
      [E0 | E1] -> fun (V8, V9) -> 'case--applyNewType,keep-5118'(V0, V1, V2, V3, V4, erased, V8, V9, V6, 'Idris.Prelude':'dn--un--==_Eq__Nat'(V6, V3)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--11791-8771--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V7 of
      {'Idris.Compiler.CompileExpr.NoArgs'} -> fun () -> {'Idris.Data.Vect.Nil'} end();
      {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> fun (V8, V9) -> {'Idris.Data.Vect.::', 0, 'Idris.Data.Vect':'dn--un--map_Functor__(Vect $n)'(erased, erased, erased, fun (V10) -> 'un--weakenVar'(erased, erased, V10) end, 'nested--11791-8771--in--un--getVars'(V0, V1, V2, V3, V4, erased, erased, V9))} end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--11791-8641--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6) ->
    case V6 of
      {'Idris.Compiler.CompileExpr.NoArgs'} -> fun () -> [] end();
      {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> fun (V7, V8) -> [0 | 'Idris.Prelude':'dn--un--map_Functor__List'(erased, erased, fun (V9) -> 'un--weakenVar'(erased, erased, V9) end, 'nested--11791-8641--in--un--getVars'(V0, V1, V2, V3, erased, erased, V8))] end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--8031-5202--in--un--drop'(V0, V1, V2, V3, V4, V5, V6, V7) ->
    case V7 of
      [] -> [];
      [E0 | E1] -> fun (V8, V9) -> 'case--dropPos,drop-5216'(erased, V1, V2, V3, V4, V5, V8, V9, V6, 'Idris.Prelude':'un--elem'(erased, {'Idris.Prelude.dn--un--__mkEq', fun (V10) -> fun (V11) -> 'Idris.Prelude':'dn--un--==_Eq__Nat'(V10, V11) end end, fun (V12) -> fun (V13) -> 'Idris.Prelude':'dn--un--/=_Eq__Nat'(V12, V13) end end}, V6, V5)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--9389-6482--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8) ->
    case V8 of
      {'Idris.Core.Context.DCon', E0, E1, E2} -> fun (V9, V10, V11) -> 0 end(E0, E1, E2);
      _ -> 1
    end.

'nested--7810-5015--in--un--applyAll'(V0, V1, V2, V3, V4) ->
    case V4 of
      [] -> V3;
      [E0 | E1] -> fun (V5, V6) -> 'nested--7810-5015--in--un--applyAll'(V0, V1, V2, {'Idris.Core.CompileExpr.CApp', 'Idris.Core.CompileExpr':'un--getFC'(erased, V3), V3, [V5]}, V6) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'nested--7810-5037--in--un--addArg'(V0, V1, V2, V3, V4, V5, V6) ->
    case V5 of
      {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CApp', V7, V8, 'Idris.Prelude.List':'un--++'(erased, V9, [V6])} end(E0, E1, E2);
      {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> fun (V10, V11, V12, V13) -> {'Idris.Core.CompileExpr.CCon', V10, V11, V12, 'Idris.Prelude.List':'un--++'(erased, V13, [V6])} end(E3, E4, E5, E6);
      {'Idris.Core.CompileExpr.CExtPrim', E7, E8, E9} -> fun (V14, V15, V16) -> {'Idris.Core.CompileExpr.CExtPrim', V14, V15, 'Idris.Prelude.List':'un--++'(erased, V16, [V6])} end(E7, E8, E9);
      _ -> {'Idris.Core.CompileExpr.CApp', 'Idris.Core.CompileExpr':'un--getFC'(erased, V5), V5, [V6]}
    end.

'un--weakenVar'(V0, V1, V2) -> 1 + V2.

'un--tryZBranch'(V0, V1) ->
    case V1 of
      {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} ->
	  fun (V2, V3, V4, V5) ->
		  case V2 of
		    {'Idris.Core.Name.NS', E4, E5} ->
			fun (V6, V7) ->
				case V6 of
				  [E6 | E7] ->
				      fun (V8, V9) ->
					      case unicode:characters_to_binary(V8) of
						<<"Prelude"/utf8>> ->
						    case V9 of
						      [] ->
							  case V7 of
							    {'Idris.Core.Name.UN', E8} ->
								fun (V10) ->
									case unicode:characters_to_binary(V10) of
									  <<"Z"/utf8>> ->
									      case V4 of
										[] -> {'Idris.Prelude.Just', V5};
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  _ -> {'Idris.Prelude.Nothing'}
									end
								end(E8);
							    _ -> {'Idris.Prelude.Nothing'}
							  end;
						      _ -> {'Idris.Prelude.Nothing'}
						    end;
						_ -> {'Idris.Prelude.Nothing'}
					      end
				      end(E6, E7);
				  _ -> {'Idris.Prelude.Nothing'}
				end
			end(E4, E5);
		    _ -> {'Idris.Prelude.Nothing'}
		  end
	  end(E0, E1, E2, E3);
      _ -> {'Idris.Prelude.Nothing'}
    end.

'un--trySBranch'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} ->
	  fun (V3, V4, V5, V6) ->
		  case V3 of
		    {'Idris.Core.Name.NS', E4, E5} ->
			fun (V7, V8) ->
				case V7 of
				  [E6 | E7] ->
				      fun (V9, V10) ->
					      case unicode:characters_to_binary(V9) of
						<<"Prelude"/utf8>> ->
						    case V10 of
						      [] ->
							  case V8 of
							    {'Idris.Core.Name.UN', E8} ->
								fun (V11) ->
									case unicode:characters_to_binary(V11) of
									  <<"S"/utf8>> ->
									      case V5 of
										[E9 | E10] ->
										    fun (V12, V13) ->
											    case V13 of
											      [] -> begin V14 = 'Idris.Core.CompileExpr':'un--getFC'(erased, V1), {'Idris.Prelude.Just', {'Idris.Core.CompileExpr.CLet', V14, V12, 0, {'Idris.Core.CompileExpr.CApp', V14, {'Idris.Core.CompileExpr.CRef', V14, {'Idris.Core.Name.UN', <<"prim__sub_Integer"/utf8>>}}, [V1, {'Idris.Core.CompileExpr.CPrimVal', V14, {'Idris.Core.TT.BI', 1}}]}, V6}} end;
											      _ -> {'Idris.Prelude.Nothing'}
											    end
										    end(E9, E10);
										_ -> {'Idris.Prelude.Nothing'}
									      end;
									  _ -> {'Idris.Prelude.Nothing'}
									end
								end(E8);
							    _ -> {'Idris.Prelude.Nothing'}
							  end;
						      _ -> {'Idris.Prelude.Nothing'}
						    end;
						_ -> {'Idris.Prelude.Nothing'}
					      end
				      end(E6, E7);
				  _ -> {'Idris.Prelude.Nothing'}
				end
			end(E4, E5);
		    _ -> {'Idris.Prelude.Nothing'}
		  end
	  end(E0, E1, E2, E3);
      _ -> {'Idris.Prelude.Nothing'}
    end.

'un--toCExpTree\''(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Core.CaseTree.Case', E0, E1, E2, E3, E4} ->
	  fun (V4, V5, V6, V7, V8) ->
		  case V8 of
		    [E5 | E6] ->
			fun (V9, V10) ->
				case V9 of
				  {'Idris.Core.CaseTree.ConCase', E7, E8, E9, E10} ->
				      fun (V11, V12, V13, V14) ->
					      begin
						V15 = 'Idris.Core.TT':'un--getLoc'(erased, V7),
						fun (V16) ->
							begin
							  V17 = ('un--getNewType'(V0, V1, V15, {'Idris.Core.CompileExpr.CLocal', V6, V15}, V2, V8))(V16),
							  case V17 of
							    {'Idris.Prelude.Left', E11} -> fun (V18) -> {'Idris.Prelude.Left', V18} end(E11);
							    {'Idris.Prelude.Right', E12} ->
								fun (V19) ->
									begin
									  V20 = [{'Idris.Core.CaseTree.ConCase', V11, V12, V13, V14} | V10],
									  case V19 of
									    {'Idris.Prelude.Nothing'} ->
										fun () ->
											begin
											  V49 = begin V48 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V23, V24, V25) end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> V27 end end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin V34 = V31(V33), begin V35 = V32(V33), V34(V35) end end end end end end end}, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> begin V41 = V38(V40), (V39(V41))(V40) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> begin V45 = V43(V44), V45(V44) end end end end}, fun (V46) -> fun (V47) -> V47 end end}, V1))(V16), {'Idris.Prelude.Right', V48} end,
											  case V49 of
											    {'Idris.Prelude.Left', E13} -> fun (V50) -> {'Idris.Prelude.Left', V50} end(E13);
											    {'Idris.Prelude.Right', E14} ->
												fun (V51) ->
													begin
													  V52 = ('un--conCases'(V0, V1, V2, V20))(V16),
													  case V52 of
													    {'Idris.Prelude.Left', E15} -> fun (V53) -> {'Idris.Prelude.Left', V53} end(E15);
													    {'Idris.Prelude.Right', E16} ->
														fun (V54) ->
															begin
															  V55 = ('un--getDef'(V0, V1, V2, V20))(V16),
															  case V55 of
															    {'Idris.Prelude.Left', E17} -> fun (V56) -> {'Idris.Prelude.Left', V56} end(E17);
															    {'Idris.Prelude.Right', E18} -> fun (V57) -> begin V58 = {'Idris.Prelude.Nothing'}, ('case--case block in toCExpTree\'-7256'(V0, V4, V6, V10, V11, V12, V13, V14, V20, V7, erased, V2, V1, V15, V58, V51, V54, V57, 'Idris.Data.List':'un--isNil'(erased, V54)))(V16) end end(E18);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E16);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end(E14);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end();
									    {'Idris.Prelude.Just', E19} -> fun (V59) -> {'Idris.Prelude.Right', V59} end(E19);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E12);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					      end
				      end(E7, E8, E9, E10);
				  {'Idris.Core.CaseTree.DelayCase', E20, E21, E22} -> fun (V60, V61, V62) -> fun (V63) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.InternalError', <<"Unexpected DelayCase"/utf8>>}, V63) end end(E20, E21, E22);
				  {'Idris.Core.CaseTree.ConstCase', E23, E24} ->
				      fun (V64, V65) ->
					      begin
						V66 = 'Idris.Core.TT':'un--getLoc'(erased, V7),
						fun (V67) ->
							begin
							  V68 = ('un--constCases'(V0, V1, V2, V8))(V67),
							  case V68 of
							    {'Idris.Prelude.Left', E25} -> fun (V69) -> {'Idris.Prelude.Left', V69} end(E25);
							    {'Idris.Prelude.Right', E26} ->
								fun (V70) ->
									begin
									  V71 = ('un--getDef'(V0, V1, V2, V8))(V67),
									  case V71 of
									    {'Idris.Prelude.Left', E27} -> fun (V72) -> {'Idris.Prelude.Left', V72} end(E27);
									    {'Idris.Prelude.Right', E28} -> fun (V73) -> begin V74 = [{'Idris.Core.CaseTree.ConstCase', V64, V65} | V10], ('case--toCExpTree\'-7432'(V0, V4, V10, V64, V65, V74, V7, V6, erased, V2, V1, V66, V70, V73, 'Idris.Data.List':'un--isNil'(erased, V70)))(V67) end end(E28);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E26);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					      end
				      end(E23, E24);
				  {'Idris.Core.CaseTree.DefaultCase', E29} -> fun (V75) -> 'un--toCExpTree'(V0, V1, V2, V75) end(E29);
				  _ -> erlang:throw("Error: Unreachable branch")
				end
			end(E5, E6);
		    [] -> fun (V76) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.TT':'un--getLoc'(erased, V7), 'Idris.Prelude.Strings':'un--++'(<<"Missing case tree in "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V2))}} end;
		    _ -> erlang:throw("Error: Unreachable branch")
		  end
	  end(E0, E1, E2, E3, E4);
      {'Idris.Core.CaseTree.STerm', E30, E31} -> fun (V77, V78) -> 'un--toCExp'(V0, V1, V2, V78) end(E30, E31);
      {'Idris.Core.CaseTree.Unmatched', E32} -> fun (V79) -> fun (V80) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), V79}} end end(E32);
      {'Idris.Core.CaseTree.Impossible'} -> fun () -> fun (V81) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Impossible case encountered in "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V2))}} end end();
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--toCExpTree'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Core.CaseTree.Case', E0, E1, E2, E3, E4} ->
	  fun (V4, V5, V6, V7, V8) ->
		  case V8 of
		    [E5 | E6] ->
			fun (V9, V10) ->
				case V9 of
				  {'Idris.Core.CaseTree.DelayCase', E7, E8, E9} ->
				      fun (V11, V12, V13) ->
					      begin
						V14 = 'Idris.Core.TT':'un--getLoc'(erased, V7),
						fun (V15) ->
							begin
							  V16 = ('un--toCExpTree'([V11, V12 | V0], V1, V2, V13))(V15),
							  case V16 of
							    {'Idris.Prelude.Left', E10} -> fun (V17) -> {'Idris.Prelude.Left', V17} end(E10);
							    {'Idris.Prelude.Right', E11} -> fun (V18) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CLet', V14, V12, 0, {'Idris.Core.CompileExpr.CForce', V14, {'Idris.Core.CompileExpr.CLocal', V6, 'Idris.Core.TT':'un--getLoc'(erased, V7)}}, {'Idris.Core.CompileExpr.CLet', V14, V11, 0, {'Idris.Core.CompileExpr.CErased', V14}, V18}}} end(E11);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					      end
				      end(E7, E8, E9);
				  _ -> 'un--toCExpTree\''(V0, V1, V2, V3)
				end
			end(E5, E6);
		    _ -> 'un--toCExpTree\''(V0, V1, V2, V3)
		  end
	  end(E0, E1, E2, E3, E4);
      _ -> 'un--toCExpTree\''(V0, V1, V2, V3)
    end.

'un--toCExpTm'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Core.TT.Local', E0, E1, E2} -> fun (V4, V5, V6) -> fun (V7) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CLocal', V6, V4}} end end(E0, E1, E2);
      {'Idris.Core.TT.Ref', E3, E4, E5} ->
	  fun (V8, V9, V10) ->
		  case V9 of
		    {'Idris.Core.TT.DataCon', E8, E9} ->
			fun (V11, V12) ->
				case V12 of
				  0 ->
				      case V10 of
					{'Idris.Core.Name.NS', E14, E15} ->
					    fun (V13, V14) ->
						    case V13 of
						      [E18 | E19] ->
							  fun (V15, V16) ->
								  case unicode:characters_to_binary(V15) of
								    <<"Prelude"/utf8>> ->
									case V16 of
									  [] ->
									      case V14 of
										{'Idris.Core.Name.UN', E26} ->
										    fun (V17) ->
											    case unicode:characters_to_binary(V17) of
											      <<"True"/utf8>> -> fun (V18) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V8, {'Idris.Core.TT.I', V11}}} end;
											      <<"False"/utf8>> -> fun (V19) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V8, {'Idris.Core.TT.I', V11}}} end;
											      <<"LT"/utf8>> -> fun (V20) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V8, {'Idris.Core.TT.I', V11}}} end;
											      <<"EQ"/utf8>> -> fun (V21) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V8, {'Idris.Core.TT.I', V11}}} end;
											      <<"GT"/utf8>> -> fun (V22) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CPrimVal', V8, {'Idris.Core.TT.I', V11}}} end;
											      _ ->
												  fun (V23) ->
													  begin
													    V24 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V23),
													    case V24 of
													      {'Idris.Prelude.Left', E27} -> fun (V25) -> {'Idris.Prelude.Left', V25} end(E27);
													      {'Idris.Prelude.Right', E28} -> fun (V26) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V26, {'Idris.Prelude.Just', V11}, []}} end(E28);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end
											    end
										    end(E26);
										_ ->
										    fun (V27) ->
											    begin
											      V28 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V27),
											      case V28 of
												{'Idris.Prelude.Left', E24} -> fun (V29) -> {'Idris.Prelude.Left', V29} end(E24);
												{'Idris.Prelude.Right', E25} -> fun (V30) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V30, {'Idris.Prelude.Just', V11}, []}} end(E25);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end
									      end;
									  _ ->
									      fun (V31) ->
										      begin
											V32 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V31),
											case V32 of
											  {'Idris.Prelude.Left', E22} -> fun (V33) -> {'Idris.Prelude.Left', V33} end(E22);
											  {'Idris.Prelude.Right', E23} -> fun (V34) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V34, {'Idris.Prelude.Just', V11}, []}} end(E23);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end
									end;
								    _ ->
									fun (V35) ->
										begin
										  V36 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V35),
										  case V36 of
										    {'Idris.Prelude.Left', E20} -> fun (V37) -> {'Idris.Prelude.Left', V37} end(E20);
										    {'Idris.Prelude.Right', E21} -> fun (V38) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V38, {'Idris.Prelude.Just', V11}, []}} end(E21);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end
								  end
							  end(E18, E19);
						      _ ->
							  fun (V39) ->
								  begin
								    V40 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V39),
								    case V40 of
								      {'Idris.Prelude.Left', E16} -> fun (V41) -> {'Idris.Prelude.Left', V41} end(E16);
								      {'Idris.Prelude.Right', E17} -> fun (V42) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V42, {'Idris.Prelude.Just', V11}, []}} end(E17);
								      _ -> erlang:throw("Error: Unreachable branch")
								    end
								  end
							  end
						    end
					    end(E14, E15);
					_ ->
					    fun (V43) ->
						    begin
						      V44 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V43),
						      case V44 of
							{'Idris.Prelude.Left', E12} -> fun (V45) -> {'Idris.Prelude.Left', V45} end(E12);
							{'Idris.Prelude.Right', E13} -> fun (V46) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V46, {'Idris.Prelude.Just', V11}, []}} end(E13);
							_ -> erlang:throw("Error: Unreachable branch")
						      end
						    end
					    end
				      end;
				  _ ->
				      fun (V47) ->
					      begin
						V48 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V47),
						case V48 of
						  {'Idris.Prelude.Left', E10} -> fun (V49) -> {'Idris.Prelude.Left', V49} end(E10);
						  {'Idris.Prelude.Right', E11} -> fun (V50) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V50, {'Idris.Prelude.Just', V11}, []}} end(E11);
						  _ -> erlang:throw("Error: Unreachable branch")
						end
					      end
				      end
				end
			end(E8, E9);
		    {'Idris.Core.TT.TyCon', E29, E30} -> fun (V51, V52) -> fun (V53) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V8, V10, {'Idris.Prelude.Nothing'}, []}} end end(E29, E30);
		    _ ->
			fun (V54) ->
				begin
				  V55 = ('Idris.Core.Context':'un--getFullName'(V1, V10))(V54),
				  case V55 of
				    {'Idris.Prelude.Left', E6} -> fun (V56) -> {'Idris.Prelude.Left', V56} end(E6);
				    {'Idris.Prelude.Right', E7} -> fun (V57) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CApp', V8, {'Idris.Core.CompileExpr.CRef', V8, V57}, []}} end(E7);
				    _ -> erlang:throw("Error: Unreachable branch")
				  end
				end
			end
		  end
	  end(E3, E4, E5);
      {'Idris.Core.TT.Meta', E31, E32, E33, E34} ->
	  fun (V58, V59, V60, V61) ->
		  fun (V62) ->
			  begin
			    V64 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V63) -> 'un--toCExp'(V0, V1, V2, V63) end, V61))(V62),
			    case V64 of
			      {'Idris.Prelude.Left', E35} -> fun (V65) -> {'Idris.Prelude.Left', V65} end(E35);
			      {'Idris.Prelude.Right', E36} -> fun (V66) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CApp', V58, {'Idris.Core.CompileExpr.CRef', V58, V59}, V66}} end(E36);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E31, E32, E33, E34);
      {'Idris.Core.TT.Bind', E37, E38, E39, E40} ->
	  fun (V67, V68, V69, V70) ->
		  case V69 of
		    {'Idris.Core.TT.Lam', E41, E42, E43} ->
			fun (V71, V72, V73) ->
				fun (V74) ->
					begin
					  V75 = ('un--toCExp'([V68 | V0], V1, V2, V70))(V74),
					  case V75 of
					    {'Idris.Prelude.Left', E44} -> fun (V76) -> {'Idris.Prelude.Left', V76} end(E44);
					    {'Idris.Prelude.Right', E45} -> fun (V77) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CLam', V67, V68, V77}} end(E45);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E41, E42, E43);
		    {'Idris.Core.TT.Let', E46, E47, E48} ->
			fun (V78, V79, V80) ->
				fun (V81) ->
					begin
					  V82 = ('un--toCExp'([V68 | V0], V1, V2, V70))(V81),
					  case V82 of
					    {'Idris.Prelude.Left', E49} -> fun (V83) -> {'Idris.Prelude.Left', V83} end(E49);
					    {'Idris.Prelude.Right', E50} ->
						fun (V84) ->
							begin
							  V85 = ('un--toCExp'(V0, V1, V2, V79))(V81),
							  case V85 of
							    {'Idris.Prelude.Left', E51} -> fun (V86) -> {'Idris.Prelude.Left', V86} end(E51);
							    {'Idris.Prelude.Right', E52} -> fun (V87) -> {'Idris.Prelude.Right', 'Idris.Algebra.Semiring':'un--branchZero'(erased, erased, {'Idris.Builtin.MkPair', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V88) -> fun (V89) -> 'Idris.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V88, V89) end end, 'Idris.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'(), fun (V90) -> fun (V91) -> 'Idris.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V90, V91) end end, 'Idris.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'()}, {'Idris.Prelude.dn--un--__mkEq', fun (V92) -> fun (V93) -> 'Idris.Algebra.ZeroOneOmega':'dn--un--==_Eq__ZeroOneOmega'(V92, V93) end end, fun (V94) -> fun (V95) -> 'Idris.Algebra.ZeroOneOmega':'dn--un--/=_Eq__ZeroOneOmega'(V94, V95) end end}}, fun () -> 'Idris.Core.CompileExpr':'un--shrinkCExp'(erased, erased, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}}, V84) end, fun () -> {'Idris.Core.CompileExpr.CLet', V67, V68, 0, V87, V84} end, V78)} end(E52);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end(E50);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E46, E47, E48);
		    {'Idris.Core.TT.Pi', E53, E54, E55} ->
			fun (V96, V97, V98) ->
				fun (V99) ->
					begin
					  V100 = ('un--toCExp'(V0, V1, V2, V98))(V99),
					  case V100 of
					    {'Idris.Prelude.Left', E56} -> fun (V101) -> {'Idris.Prelude.Left', V101} end(E56);
					    {'Idris.Prelude.Right', E57} ->
						fun (V102) ->
							begin
							  V103 = ('un--toCExp'([V68 | V0], V1, V2, V70))(V99),
							  case V103 of
							    {'Idris.Prelude.Left', E58} -> fun (V104) -> {'Idris.Prelude.Left', V104} end(E58);
							    {'Idris.Prelude.Right', E59} -> fun (V105) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V67, {'Idris.Core.Name.UN', <<"->"/utf8>>}, {'Idris.Prelude.Nothing'}, [V102, {'Idris.Core.CompileExpr.CLam', V67, V68, V105}]}} end(E59);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end(E57);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E53, E54, E55);
		    _ -> fun (V106) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CErased', V67}} end
		  end
	  end(E37, E38, E39, E40);
      {'Idris.Core.TT.App', E60, E61, E62} ->
	  fun (V107, V108, V109) ->
		  fun (V110) ->
			  begin
			    V111 = ('un--toCExp'(V0, V1, V2, V108))(V110),
			    case V111 of
			      {'Idris.Prelude.Left', E63} -> fun (V112) -> {'Idris.Prelude.Left', V112} end(E63);
			      {'Idris.Prelude.Right', E64} ->
				  fun (V113) ->
					  begin
					    V114 = ('un--toCExp'(V0, V1, V2, V109))(V110),
					    case V114 of
					      {'Idris.Prelude.Left', E65} -> fun (V115) -> {'Idris.Prelude.Left', V115} end(E65);
					      {'Idris.Prelude.Right', E66} -> fun (V116) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CApp', V107, V113, [V116]}} end(E66);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E64);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E60, E61, E62);
      {'Idris.Core.TT.As', E67, E68, E69, E70} -> fun (V117, V118, V119, V120) -> 'un--toCExpTm'(V0, V1, V2, V120) end(E67, E68, E69, E70);
      {'Idris.Core.TT.TDelayed', E71, E72, E73} -> fun (V121, V122, V123) -> fun (V124) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CErased', V121}} end end(E71, E72, E73);
      {'Idris.Core.TT.TDelay', E74, E75, E76, E77} ->
	  fun (V125, V126, V127, V128) ->
		  fun (V129) ->
			  begin
			    V130 = ('un--toCExp'(V0, V1, V2, V128))(V129),
			    case V130 of
			      {'Idris.Prelude.Left', E78} -> fun (V131) -> {'Idris.Prelude.Left', V131} end(E78);
			      {'Idris.Prelude.Right', E79} -> fun (V132) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CDelay', V125, V132}} end(E79);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E74, E75, E76, E77);
      {'Idris.Core.TT.TForce', E80, E81, E82} ->
	  fun (V133, V134, V135) ->
		  fun (V136) ->
			  begin
			    V137 = ('un--toCExp'(V0, V1, V2, V135))(V136),
			    case V137 of
			      {'Idris.Prelude.Left', E83} -> fun (V138) -> {'Idris.Prelude.Left', V138} end(E83);
			      {'Idris.Prelude.Right', E84} -> fun (V139) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CForce', V133, V139}} end(E84);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E80, E81, E82);
      {'Idris.Core.TT.PrimVal', E85, E86} -> fun (V140, V141) -> begin V142 = 'Idris.Core.TT':'un--constTag'(V141), 'case--toCExpTm-6261'(V0, V1, V141, V140, V2, V142, 'Idris.Prelude':'dn--un--==_Eq__Int'(V142, 0)) end end(E85, E86);
      {'Idris.Core.TT.Erased', E87, E88} -> fun (V143, V144) -> fun (V145) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CErased', V143}} end end(E87, E88);
      {'Idris.Core.TT.TType', E89} -> fun (V146) -> fun (V147) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CCon', V146, {'Idris.Core.Name.UN', <<"Type"/utf8>>}, {'Idris.Prelude.Nothing'}, []}} end end(E89);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--toCExp'(V0, V1, V2, V3) -> 'case--toCExp-6325'(V0, V3, V2, V1, 'Idris.Core.TT':'un--getFnArgs'(erased, V3)).

'un--toCDef'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Core.Context.None'} ->
	  fun () ->
		  fun (V4) ->
			  begin
			    V5 = ('Idris.Core.Context':'un--getFullName'(V0, V1))(V4),
			    case V5 of
			      {'Idris.Prelude.Left', E2} -> fun (V6) -> {'Idris.Prelude.Left', V6} end(E2);
			      {'Idris.Prelude.Right', E3} -> fun (V7) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Encountered undefined name "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V7))}}} end(E3);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end();
      {'Idris.Core.Context.PMDef', E4, E5, E6, E7, E8} ->
	  fun (V8, V9, V10, V11, V12) ->
		  fun (V13) ->
			  begin
			    V14 = ('un--toCExpTree'(V9, V0, V1, V11))(V13),
			    case V14 of
			      {'Idris.Prelude.Left', E9} -> fun (V15) -> {'Idris.Prelude.Left', V15} end(E9);
			      {'Idris.Prelude.Right', E10} -> fun (V16) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkFun', V9, V16}} end(E10);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E4, E5, E6, E7, E8);
      {'Idris.Core.Context.ExternDef', E11} -> fun (V17) -> 'case--toCDef-8690'(V17, V2, V1, V0, 'un--mkArgList'(0, V17)) end(E11);
      {'Idris.Core.Context.ForeignDef', E12, E13} ->
	  fun (V18, V19) ->
		  fun (V20) ->
			  begin
			    V49 = begin V48 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V23, V24, V25) end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> V27 end end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin V34 = V31(V33), begin V35 = V32(V33), V34(V35) end end end end end end end}, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> begin V41 = V38(V40), (V39(V41))(V40) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> begin V45 = V43(V44), V45(V44) end end end end}, fun (V46) -> fun (V47) -> V47 end end}, V0))(V20), {'Idris.Prelude.Right', V48} end,
			    case V49 of
			      {'Idris.Prelude.Left', E14} -> fun (V50) -> {'Idris.Prelude.Left', V50} end(E14);
			      {'Idris.Prelude.Right', E15} ->
				  fun (V51) ->
					  begin
					    V55 = begin
						    V52 = ('Idris.Core.Normalise':'un--nf'([], V51, {'Idris.Core.Env.Nil'}, V2))(V20),
						    case V52 of
						      {'Idris.Prelude.Left', E16} -> fun (V53) -> {'Idris.Prelude.Left', V53} end(E16);
						      {'Idris.Prelude.Right', E17} -> fun (V54) -> ('un--getCFTypes'(V0, [], V54))(V20) end(E17);
						      _ -> erlang:throw("Error: Unreachable branch")
						    end
						  end,
					    case V55 of
					      {'Idris.Prelude.Left', E18} -> fun (V56) -> {'Idris.Prelude.Left', V56} end(E18);
					      {'Idris.Prelude.Right', E19} ->
						  fun (V57) ->
							  case V57 of
							    {'Idris.Builtin.MkPair', E20, E21} -> fun (V58, V59) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkForeign', V19, V58, V59}} end(E20, E21);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
						  end(E19);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end(E15);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E12, E13);
      {'Idris.Core.Context.Builtin', E22, E23} -> fun (V60, V61) -> 'case--toCDef-8822'(V60, V61, V2, V1, V0, 'un--mkArgList'(0, V60)) end(E22, E23);
      {'Idris.Core.Context.DCon', E24, E25, E26} -> fun (V62, V63, V64) -> begin V66 = 'Idris.Prelude':'un--maybe'(erased, erased, fun () -> {'Idris.Prelude.Nothing'} end, fun () -> fun (V65) -> {'Idris.Prelude.Just', 'Idris.Builtin':'un--snd'(erased, erased, V65)} end end, V64), fun (V67) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Just', V62}, V63, V66}} end end end(E24, E25, E26);
      {'Idris.Core.Context.TCon', E27, E28, E29, E30, E31, E32, E33, E34} -> fun (V68, V69, V70, V71, V72, V73, V74, V75) -> fun (V76) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Nothing'}, V69, {'Idris.Prelude.Nothing'}}} end end(E27, E28, E29, E30, E31, E32, E33, E34);
      {'Idris.Core.Context.Hole', E35, E36} ->
	  fun (V77, V78) ->
		  fun (V79) ->
			  begin
			    V80 = ('Idris.Core.Context':'un--getFullName'(V0, V1))(V79),
			    case V80 of
			      {'Idris.Prelude.Left', E37} -> fun (V81) -> {'Idris.Prelude.Left', V81} end(E37);
			      {'Idris.Prelude.Right', E38} -> fun (V82) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Encountered unimplemented hole "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V82))}}} end(E38);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E35, E36);
      {'Idris.Core.Context.Guess', E39, E40, E41} ->
	  fun (V83, V84, V85) ->
		  fun (V86) ->
			  begin
			    V87 = ('Idris.Core.Context':'un--getFullName'(V0, V1))(V86),
			    case V87 of
			      {'Idris.Prelude.Left', E42} -> fun (V88) -> {'Idris.Prelude.Left', V88} end(E42);
			      {'Idris.Prelude.Right', E43} -> fun (V89) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Encountered constrained hole "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V89))}}} end(E43);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E39, E40, E41);
      {'Idris.Core.Context.BySearch', E44, E45, E46} ->
	  fun (V90, V91, V92) ->
		  fun (V93) ->
			  begin
			    V94 = ('Idris.Core.Context':'un--getFullName'(V0, V1))(V93),
			    case V94 of
			      {'Idris.Prelude.Left', E47} -> fun (V95) -> {'Idris.Prelude.Left', V95} end(E47);
			      {'Idris.Prelude.Right', E48} -> fun (V96) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Encountered incomplete proof search "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V96))}}} end(E48);
			      _ -> erlang:throw("Error: Unreachable branch")
			    end
			  end
		  end
	  end(E44, E45, E46);
      _ ->
	  fun (V97) ->
		  begin
		    V98 = ('Idris.Core.Context':'un--getFullName'(V0, V1))(V97),
		    case V98 of
		      {'Idris.Prelude.Left', E0} -> fun (V99) -> {'Idris.Prelude.Left', V99} end(E0);
		      {'Idris.Prelude.Right', E1} -> fun (V100) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', 'Idris.Core.FC':'un--emptyFC'(), 'Idris.Prelude.Strings':'un--++'(<<"Encountered uncompilable name "/utf8>>, 'Idris.Prelude':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'(erased, erased, {'Idris.Builtin.MkPair', {'Idris.Prelude.dn--un--__mkShow', fun (V101) -> 'Idris.Core.Name':'dn--un--show_Show__Name'(V101) end, fun (V102) -> fun (V103) -> 'Idris.Core.Name':'dn--un--showPrec_Show__Name'(V102, V103) end end}, {'Idris.Prelude.dn--un--__mkShow', fun (V104) -> 'Idris.Core.Context':'dn--un--show_Show__Def'(V104) end, fun (V105) -> fun (V106) -> 'Idris.Core.Context':'dn--un--showPrec_Show__Def'(V105, V106) end end}}, {'Idris.Builtin.MkPair', V100, V3}))}}} end(E1);
		      _ -> erlang:throw("Error: Unreachable branch")
		    end
		  end
	  end
    end.

'un--numArgs'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.TT.Ref', E0, E1, E2} ->
	  fun (V3, V4, V5) ->
		  case V4 of
		    {'Idris.Core.TT.TyCon', E53, E54} -> fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', V7}} end end(E53, E54);
		    _ ->
			fun (V9) ->
				begin
				  V36 = ('Idris.Core.Context':'un--lookupCtxtExact'(V5,
										    case V1 of
										      {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end))(V9),
				  case V36 of
				    {'Idris.Prelude.Left', E29} -> fun (V37) -> {'Idris.Prelude.Left', V37} end(E29);
				    {'Idris.Prelude.Right', E30} ->
					fun (V38) ->
						case V38 of
						  {'Idris.Prelude.Just', E31} ->
						      fun (V39) ->
							      begin
								V40 = {'Idris.Prelude.Just', V39},
								('case--case block in numArgs-4713'(erased, V3, V4, V5, V1, V39, V40,
												    case V39 of
												      {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V58 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end))(V9)
							      end
						      end(E31);
						  {'Idris.Prelude.Nothing'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end();
						  _ -> erlang:throw("Error: Unreachable branch")
						end
					end(E30);
				    _ -> erlang:throw("Error: Unreachable branch")
				  end
				end
			end
		  end
	  end(E0, E1, E2);
      _ -> fun (V62) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end
    end.

'un--nfToCFType'(V0, V1, V2, V3) ->
    case V3 of
      {'Idris.Core.Value.NPrimVal', E1844, E1845} ->
	  fun (V4, V5) ->
		  case V5 of
		    {'Idris.Core.TT.IntType'} -> fun () -> fun (V6) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFInt'}} end end();
		    {'Idris.Core.TT.Bits8Type'} -> fun () -> fun (V7) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnsigned'}} end end();
		    {'Idris.Core.TT.Bits16Type'} -> fun () -> fun (V8) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnsigned'}} end end();
		    {'Idris.Core.TT.Bits32Type'} -> fun () -> fun (V9) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnsigned'}} end end();
		    {'Idris.Core.TT.Bits64Type'} -> fun () -> fun (V10) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnsigned'}} end end();
		    _ ->
			case V2 of
			  1 ->
			      case V3 of
				{'Idris.Core.Value.NPrimVal', E2582, E2583} ->
				    fun (V11, V12) ->
					    case V12 of
					      {'Idris.Core.TT.StringType'} -> fun () -> fun (V13) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFString'}} end end();
					      _ ->
						  case V3 of
						    {'Idris.Core.Value.NPrimVal', E2767, E2768} ->
							fun (V14, V15) ->
								case V15 of
								  {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V16) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
								  {'Idris.Core.TT.CharType'} -> fun () -> fun (V17) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
								  {'Idris.Core.TT.WorldType'} -> fun () -> fun (V18) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
								  _ ->
								      case V2 of
									1 ->
									    case V3 of
									      {'Idris.Core.Value.NBind', E2851, E2852, E2853, E2854} ->
										  fun (V19, V20, V21, V22) ->
											  case V21 of
											    {'Idris.Core.TT.Pi', E2896, E2897, E2898} ->
												fun (V23, V24, V25) ->
													fun (V26) ->
														begin
														  V55 = begin V54 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V29, V30, V31) end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> V33 end end end, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> begin V40 = V37(V39), begin V41 = V38(V39), V40(V41) end end end end end end end}, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> begin V47 = V44(V46), (V45(V47))(V46) end end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> begin V51 = V49(V50), V51(V50) end end end end}, fun (V52) -> fun (V53) -> V53 end end}, V0))(V26), {'Idris.Prelude.Right', V54} end,
														  case V55 of
														    {'Idris.Prelude.Left', E2899} -> fun (V56) -> {'Idris.Prelude.Left', V56} end(E2899);
														    {'Idris.Prelude.Right', E2900} ->
															fun (V57) ->
																begin
																  V58 = ('un--nfToCFType'(V0, V19, 1, V25))(V26),
																  case V58 of
																    {'Idris.Prelude.Left', E2901} -> fun (V59) -> {'Idris.Prelude.Left', V59} end(E2901);
																    {'Idris.Prelude.Right', E2902} ->
																	fun (V60) ->
																		begin
																		  V61 = ((V22(V57))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V19, 1})))(V26),
																		  case V61 of
																		    {'Idris.Prelude.Left', E2903} -> fun (V62) -> {'Idris.Prelude.Left', V62} end(E2903);
																		    {'Idris.Prelude.Right', E2904} ->
																			fun (V63) ->
																				begin
																				  V64 = ('un--nfToCFType'(V0, V19, 1, V63))(V26),
																				  case V64 of
																				    {'Idris.Prelude.Left', E2905} -> fun (V65) -> {'Idris.Prelude.Left', V65} end(E2905);
																				    {'Idris.Prelude.Right', E2906} -> fun (V66) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V60, V66}} end(E2906);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2904);
																		    _ -> erlang:throw("Error: Unreachable branch")
																		  end
																		end
																	end(E2902);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E2900);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end
												end(E2896, E2897, E2898);
											    _ ->
												case V3 of
												  {'Idris.Core.Value.NTCon', E2861, E2862, E2863, E2864, E2865} ->
												      fun (V67, V68, V69, V70, V71) ->
													      fun (V72) ->
														      begin
															V101 = begin V100 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V75, V76, V77) end end end end end, fun (V78) -> fun (V79) -> fun (V80) -> V79 end end end, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> begin V86 = V83(V85), begin V87 = V84(V85), V86(V87) end end end end end end end}, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> begin V93 = V90(V92), (V91(V93))(V92) end end end end end end, fun (V94) -> fun (V95) -> fun (V96) -> begin V97 = V95(V96), V97(V96) end end end end}, fun (V98) -> fun (V99) -> V99 end end}, V0))(V72), {'Idris.Prelude.Right', V100} end,
															case V101 of
															  {'Idris.Prelude.Left', E2866} -> fun (V102) -> {'Idris.Prelude.Left', V102} end(E2866);
															  {'Idris.Prelude.Right', E2867} ->
															      fun (V103) ->
																      begin
																	V108 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V104) -> fun (V105) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V104, V105) end end, fun (V106) -> fun (V107) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V106, V107) end end}, V68, V72),
																	case V108 of
																	  {'Idris.Prelude.Left', E2868} -> fun (V109) -> {'Idris.Prelude.Left', V109} end(E2868);
																	  {'Idris.Prelude.Right', E2869} ->
																	      fun (V110) ->
																		      begin
																			V111 = ('un--getNArgs'(V103, V110, V71))(V72),
																			case V111 of
																			  {'Idris.Prelude.Left', E2870} -> fun (V112) -> {'Idris.Prelude.Left', V112} end(E2870);
																			  {'Idris.Prelude.Right', E2871} ->
																			      fun (V113) ->
																				      case V113 of
																					{'Idris.Compiler.CompileExpr.User', E2872, E2873} ->
																					    fun (V114, V115) ->
																						    begin
																						      V117 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V116) -> 'Idris.Core.Normalise':'un--evalClosure'([], V103, V116) end, V115))(V72),
																						      case V117 of
																							{'Idris.Prelude.Left', E2874} -> fun (V118) -> {'Idris.Prelude.Left', V118} end(E2874);
																							{'Idris.Prelude.Right', E2875} ->
																							    fun (V119) ->
																								    begin
																								      V121 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V120) -> 'un--nfToCFType'(V0, V67, V2, V120) end, V119))(V72),
																								      case V121 of
																									{'Idris.Prelude.Left', E2876} -> fun (V122) -> {'Idris.Prelude.Left', V122} end(E2876);
																									{'Idris.Prelude.Right', E2877} -> fun (V123) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V110, V123}} end(E2877);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																								    end
																							    end(E2875);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E2872, E2873);
																					{'Idris.Compiler.CompileExpr.Struct', E2878, E2879} ->
																					    fun (V124, V125) ->
																						    begin
																						      V136 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																											       fun (V126) ->
																												       case V126 of
																													 {'Idris.Builtin.MkPair', E2880, E2881} ->
																													     fun (V127, V128) ->
																														     fun (V129) ->
																															     begin
																															       V130 = ('Idris.Core.Normalise':'un--evalClosure'([], V103, V128))(V129),
																															       case V130 of
																																 {'Idris.Prelude.Left', E2882} -> fun (V131) -> {'Idris.Prelude.Left', V131} end(E2882);
																																 {'Idris.Prelude.Right', E2883} ->
																																     fun (V132) ->
																																	     begin
																																	       V133 = ('un--nfToCFType'(V0, V67, 0, V132))(V129),
																																	       case V133 of
																																		 {'Idris.Prelude.Left', E2884} -> fun (V134) -> {'Idris.Prelude.Left', V134} end(E2884);
																																		 {'Idris.Prelude.Right', E2885} -> fun (V135) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V127, V135}} end(E2885);
																																		 _ -> erlang:throw("Error: Unreachable branch")
																																	       end
																																	     end
																																     end(E2883);
																																 _ -> erlang:throw("Error: Unreachable branch")
																															       end
																															     end
																														     end
																													     end(E2880, E2881);
																													 _ -> erlang:throw("Error: Unreachable branch")
																												       end
																											       end,
																											       V125))(V72),
																						      case V136 of
																							{'Idris.Prelude.Left', E2886} -> fun (V137) -> {'Idris.Prelude.Left', V137} end(E2886);
																							{'Idris.Prelude.Right', E2887} -> fun (V138) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V124, V138}} end(E2887);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E2878, E2879);
																					{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																					{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																					{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																					{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																					{'Idris.Compiler.CompileExpr.NIORes', E2888} ->
																					    fun (V139) ->
																						    begin
																						      V140 = ('Idris.Core.Normalise':'un--evalClosure'([], V103, V139))(V72),
																						      case V140 of
																							{'Idris.Prelude.Left', E2889} -> fun (V141) -> {'Idris.Prelude.Left', V141} end(E2889);
																							{'Idris.Prelude.Right', E2890} ->
																							    fun (V142) ->
																								    begin
																								      V143 = ('un--nfToCFType'(V0, V67, V2, V142))(V72),
																								      case V143 of
																									{'Idris.Prelude.Left', E2891} -> fun (V144) -> {'Idris.Prelude.Left', V144} end(E2891);
																									{'Idris.Prelude.Right', E2892} -> fun (V145) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V145}} end(E2892);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																								    end
																							    end(E2890);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E2888);
																					_ -> erlang:throw("Error: Unreachable branch")
																				      end
																			      end(E2871);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		      end
																	      end(E2869);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E2867);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end
												      end(E2861, E2862, E2863, E2864, E2865);
												  {'Idris.Core.Value.NType', E2893} -> fun (V146) -> fun (V147) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2893);
												  {'Idris.Core.Value.NErased', E2894, E2895} -> fun (V148, V149) -> fun (V150) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2894, E2895);
												  _ ->
												      fun (V151) ->
													      begin
														V180 = begin V179 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V154, V155, V156) end end end end end, fun (V157) -> fun (V158) -> fun (V159) -> V158 end end end, fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> begin V165 = V162(V164), begin V166 = V163(V164), V165(V166) end end end end end end end}, fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> begin V172 = V169(V171), (V170(V172))(V171) end end end end end end, fun (V173) -> fun (V174) -> fun (V175) -> begin V176 = V174(V175), V176(V175) end end end end}, fun (V177) -> fun (V178) -> V178 end end}, V0))(V151), {'Idris.Prelude.Right', V179} end,
														case V180 of
														  {'Idris.Prelude.Left', E2855} -> fun (V181) -> {'Idris.Prelude.Left', V181} end(E2855);
														  {'Idris.Prelude.Right', E2856} ->
														      fun (V182) ->
															      begin
																V183 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V182, {'Idris.Core.Env.Nil'}, V3, V151),
																case V183 of
																  {'Idris.Prelude.Left', E2857} -> fun (V184) -> {'Idris.Prelude.Left', V184} end(E2857);
																  {'Idris.Prelude.Right', E2858} ->
																      fun (V185) ->
																	      begin
																		V190 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V186) -> fun (V187) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V186, V187) end end, fun (V188) -> fun (V189) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V188, V189) end end}, V185, V151),
																		case V190 of
																		  {'Idris.Prelude.Left', E2859} -> fun (V191) -> {'Idris.Prelude.Left', V191} end(E2859);
																		  {'Idris.Prelude.Right', E2860} -> fun (V192) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V192))}, V151) end(E2860);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E2858);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E2856);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													      end
												      end
												end
											  end
										  end(E2851, E2852, E2853, E2854);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E2816, E2817, E2818, E2819, E2820} ->
											fun (V193, V194, V195, V196, V197) ->
												fun (V198) ->
													begin
													  V227 = begin V226 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V201, V202, V203) end end end end end, fun (V204) -> fun (V205) -> fun (V206) -> V205 end end end, fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> begin V212 = V209(V211), begin V213 = V210(V211), V212(V213) end end end end end end end}, fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> begin V219 = V216(V218), (V217(V219))(V218) end end end end end end, fun (V220) -> fun (V221) -> fun (V222) -> begin V223 = V221(V222), V223(V222) end end end end}, fun (V224) -> fun (V225) -> V225 end end}, V0))(V198), {'Idris.Prelude.Right', V226} end,
													  case V227 of
													    {'Idris.Prelude.Left', E2821} -> fun (V228) -> {'Idris.Prelude.Left', V228} end(E2821);
													    {'Idris.Prelude.Right', E2822} ->
														fun (V229) ->
															begin
															  V234 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V230) -> fun (V231) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V230, V231) end end, fun (V232) -> fun (V233) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V232, V233) end end}, V194, V198),
															  case V234 of
															    {'Idris.Prelude.Left', E2823} -> fun (V235) -> {'Idris.Prelude.Left', V235} end(E2823);
															    {'Idris.Prelude.Right', E2824} ->
																fun (V236) ->
																	begin
																	  V237 = ('un--getNArgs'(V229, V236, V197))(V198),
																	  case V237 of
																	    {'Idris.Prelude.Left', E2825} -> fun (V238) -> {'Idris.Prelude.Left', V238} end(E2825);
																	    {'Idris.Prelude.Right', E2826} ->
																		fun (V239) ->
																			case V239 of
																			  {'Idris.Compiler.CompileExpr.User', E2827, E2828} ->
																			      fun (V240, V241) ->
																				      begin
																					V243 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V242) -> 'Idris.Core.Normalise':'un--evalClosure'([], V229, V242) end, V241))(V198),
																					case V243 of
																					  {'Idris.Prelude.Left', E2829} -> fun (V244) -> {'Idris.Prelude.Left', V244} end(E2829);
																					  {'Idris.Prelude.Right', E2830} ->
																					      fun (V245) ->
																						      begin
																							V247 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V246) -> 'un--nfToCFType'(V0, V193, V2, V246) end, V245))(V198),
																							case V247 of
																							  {'Idris.Prelude.Left', E2831} -> fun (V248) -> {'Idris.Prelude.Left', V248} end(E2831);
																							  {'Idris.Prelude.Right', E2832} -> fun (V249) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V236, V249}} end(E2832);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2830);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2827, E2828);
																			  {'Idris.Compiler.CompileExpr.Struct', E2833, E2834} ->
																			      fun (V250, V251) ->
																				      begin
																					V262 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										 fun (V252) ->
																											 case V252 of
																											   {'Idris.Builtin.MkPair', E2835, E2836} ->
																											       fun (V253, V254) ->
																												       fun (V255) ->
																													       begin
																														 V256 = ('Idris.Core.Normalise':'un--evalClosure'([], V229, V254))(V255),
																														 case V256 of
																														   {'Idris.Prelude.Left', E2837} -> fun (V257) -> {'Idris.Prelude.Left', V257} end(E2837);
																														   {'Idris.Prelude.Right', E2838} ->
																														       fun (V258) ->
																															       begin
																																 V259 = ('un--nfToCFType'(V0, V193, 0, V258))(V255),
																																 case V259 of
																																   {'Idris.Prelude.Left', E2839} -> fun (V260) -> {'Idris.Prelude.Left', V260} end(E2839);
																																   {'Idris.Prelude.Right', E2840} -> fun (V261) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V253, V261}} end(E2840);
																																   _ -> erlang:throw("Error: Unreachable branch")
																																 end
																															       end
																														       end(E2838);
																														   _ -> erlang:throw("Error: Unreachable branch")
																														 end
																													       end
																												       end
																											       end(E2835, E2836);
																											   _ -> erlang:throw("Error: Unreachable branch")
																											 end
																										 end,
																										 V251))(V198),
																					case V262 of
																					  {'Idris.Prelude.Left', E2841} -> fun (V263) -> {'Idris.Prelude.Left', V263} end(E2841);
																					  {'Idris.Prelude.Right', E2842} -> fun (V264) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V250, V264}} end(E2842);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2833, E2834);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E2843} ->
																			      fun (V265) ->
																				      begin
																					V266 = ('Idris.Core.Normalise':'un--evalClosure'([], V229, V265))(V198),
																					case V266 of
																					  {'Idris.Prelude.Left', E2844} -> fun (V267) -> {'Idris.Prelude.Left', V267} end(E2844);
																					  {'Idris.Prelude.Right', E2845} ->
																					      fun (V268) ->
																						      begin
																							V269 = ('un--nfToCFType'(V0, V193, V2, V268))(V198),
																							case V269 of
																							  {'Idris.Prelude.Left', E2846} -> fun (V270) -> {'Idris.Prelude.Left', V270} end(E2846);
																							  {'Idris.Prelude.Right', E2847} -> fun (V271) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V271}} end(E2847);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2845);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2843);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E2826);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E2824);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E2822);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E2816, E2817, E2818, E2819, E2820);
										    {'Idris.Core.Value.NType', E2848} -> fun (V272) -> fun (V273) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2848);
										    {'Idris.Core.Value.NErased', E2849, E2850} -> fun (V274, V275) -> fun (V276) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2849, E2850);
										    _ ->
											fun (V277) ->
												begin
												  V306 = begin V305 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V280, V281, V282) end end end end end, fun (V283) -> fun (V284) -> fun (V285) -> V284 end end end, fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> begin V291 = V288(V290), begin V292 = V289(V290), V291(V292) end end end end end end end}, fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> fun (V297) -> begin V298 = V295(V297), (V296(V298))(V297) end end end end end end, fun (V299) -> fun (V300) -> fun (V301) -> begin V302 = V300(V301), V302(V301) end end end end}, fun (V303) -> fun (V304) -> V304 end end}, V0))(V277), {'Idris.Prelude.Right', V305} end,
												  case V306 of
												    {'Idris.Prelude.Left', E2810} -> fun (V307) -> {'Idris.Prelude.Left', V307} end(E2810);
												    {'Idris.Prelude.Right', E2811} ->
													fun (V308) ->
														begin
														  V309 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V308, {'Idris.Core.Env.Nil'}, V3, V277),
														  case V309 of
														    {'Idris.Prelude.Left', E2812} -> fun (V310) -> {'Idris.Prelude.Left', V310} end(E2812);
														    {'Idris.Prelude.Right', E2813} ->
															fun (V311) ->
																begin
																  V316 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V312) -> fun (V313) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V312, V313) end end, fun (V314) -> fun (V315) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V314, V315) end end}, V311, V277),
																  case V316 of
																    {'Idris.Prelude.Left', E2814} -> fun (V317) -> {'Idris.Prelude.Left', V317} end(E2814);
																    {'Idris.Prelude.Right', E2815} -> fun (V318) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V318))}, V277) end(E2815);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E2813);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E2811);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end;
									0 ->
									    case V3 of
									      {'Idris.Core.Value.NBind', E2948, E2949, E2950, E2951} -> fun (V319, V320, V321, V322) -> fun (V323) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V319, <<"Function types not allowed in a foreign struct"/utf8>>}, V323) end end(E2948, E2949, E2950, E2951);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E2913, E2914, E2915, E2916, E2917} ->
											fun (V324, V325, V326, V327, V328) ->
												fun (V329) ->
													begin
													  V358 = begin V357 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V332, V333, V334) end end end end end, fun (V335) -> fun (V336) -> fun (V337) -> V336 end end end, fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> begin V343 = V340(V342), begin V344 = V341(V342), V343(V344) end end end end end end end}, fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> begin V350 = V347(V349), (V348(V350))(V349) end end end end end end, fun (V351) -> fun (V352) -> fun (V353) -> begin V354 = V352(V353), V354(V353) end end end end}, fun (V355) -> fun (V356) -> V356 end end}, V0))(V329), {'Idris.Prelude.Right', V357} end,
													  case V358 of
													    {'Idris.Prelude.Left', E2918} -> fun (V359) -> {'Idris.Prelude.Left', V359} end(E2918);
													    {'Idris.Prelude.Right', E2919} ->
														fun (V360) ->
															begin
															  V365 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V361) -> fun (V362) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V361, V362) end end, fun (V363) -> fun (V364) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V363, V364) end end}, V325, V329),
															  case V365 of
															    {'Idris.Prelude.Left', E2920} -> fun (V366) -> {'Idris.Prelude.Left', V366} end(E2920);
															    {'Idris.Prelude.Right', E2921} ->
																fun (V367) ->
																	begin
																	  V368 = ('un--getNArgs'(V360, V367, V328))(V329),
																	  case V368 of
																	    {'Idris.Prelude.Left', E2922} -> fun (V369) -> {'Idris.Prelude.Left', V369} end(E2922);
																	    {'Idris.Prelude.Right', E2923} ->
																		fun (V370) ->
																			case V370 of
																			  {'Idris.Compiler.CompileExpr.User', E2924, E2925} ->
																			      fun (V371, V372) ->
																				      begin
																					V374 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V373) -> 'Idris.Core.Normalise':'un--evalClosure'([], V360, V373) end, V372))(V329),
																					case V374 of
																					  {'Idris.Prelude.Left', E2926} -> fun (V375) -> {'Idris.Prelude.Left', V375} end(E2926);
																					  {'Idris.Prelude.Right', E2927} ->
																					      fun (V376) ->
																						      begin
																							V378 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V377) -> 'un--nfToCFType'(V0, V324, V2, V377) end, V376))(V329),
																							case V378 of
																							  {'Idris.Prelude.Left', E2928} -> fun (V379) -> {'Idris.Prelude.Left', V379} end(E2928);
																							  {'Idris.Prelude.Right', E2929} -> fun (V380) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V367, V380}} end(E2929);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2927);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2924, E2925);
																			  {'Idris.Compiler.CompileExpr.Struct', E2930, E2931} ->
																			      fun (V381, V382) ->
																				      begin
																					V393 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										 fun (V383) ->
																											 case V383 of
																											   {'Idris.Builtin.MkPair', E2932, E2933} ->
																											       fun (V384, V385) ->
																												       fun (V386) ->
																													       begin
																														 V387 = ('Idris.Core.Normalise':'un--evalClosure'([], V360, V385))(V386),
																														 case V387 of
																														   {'Idris.Prelude.Left', E2934} -> fun (V388) -> {'Idris.Prelude.Left', V388} end(E2934);
																														   {'Idris.Prelude.Right', E2935} ->
																														       fun (V389) ->
																															       begin
																																 V390 = ('un--nfToCFType'(V0, V324, 0, V389))(V386),
																																 case V390 of
																																   {'Idris.Prelude.Left', E2936} -> fun (V391) -> {'Idris.Prelude.Left', V391} end(E2936);
																																   {'Idris.Prelude.Right', E2937} -> fun (V392) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V384, V392}} end(E2937);
																																   _ -> erlang:throw("Error: Unreachable branch")
																																 end
																															       end
																														       end(E2935);
																														   _ -> erlang:throw("Error: Unreachable branch")
																														 end
																													       end
																												       end
																											       end(E2932, E2933);
																											   _ -> erlang:throw("Error: Unreachable branch")
																											 end
																										 end,
																										 V382))(V329),
																					case V393 of
																					  {'Idris.Prelude.Left', E2938} -> fun (V394) -> {'Idris.Prelude.Left', V394} end(E2938);
																					  {'Idris.Prelude.Right', E2939} -> fun (V395) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V381, V395}} end(E2939);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2930, E2931);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E2940} ->
																			      fun (V396) ->
																				      begin
																					V397 = ('Idris.Core.Normalise':'un--evalClosure'([], V360, V396))(V329),
																					case V397 of
																					  {'Idris.Prelude.Left', E2941} -> fun (V398) -> {'Idris.Prelude.Left', V398} end(E2941);
																					  {'Idris.Prelude.Right', E2942} ->
																					      fun (V399) ->
																						      begin
																							V400 = ('un--nfToCFType'(V0, V324, V2, V399))(V329),
																							case V400 of
																							  {'Idris.Prelude.Left', E2943} -> fun (V401) -> {'Idris.Prelude.Left', V401} end(E2943);
																							  {'Idris.Prelude.Right', E2944} -> fun (V402) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V402}} end(E2944);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2942);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2940);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E2923);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E2921);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E2919);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E2913, E2914, E2915, E2916, E2917);
										    {'Idris.Core.Value.NType', E2945} -> fun (V403) -> fun (V404) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2945);
										    {'Idris.Core.Value.NErased', E2946, E2947} -> fun (V405, V406) -> fun (V407) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2946, E2947);
										    _ ->
											fun (V408) ->
												begin
												  V437 = begin V436 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V411, V412, V413) end end end end end, fun (V414) -> fun (V415) -> fun (V416) -> V415 end end end, fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> begin V422 = V419(V421), begin V423 = V420(V421), V422(V423) end end end end end end end}, fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> begin V429 = V426(V428), (V427(V429))(V428) end end end end end end, fun (V430) -> fun (V431) -> fun (V432) -> begin V433 = V431(V432), V433(V432) end end end end}, fun (V434) -> fun (V435) -> V435 end end}, V0))(V408), {'Idris.Prelude.Right', V436} end,
												  case V437 of
												    {'Idris.Prelude.Left', E2907} -> fun (V438) -> {'Idris.Prelude.Left', V438} end(E2907);
												    {'Idris.Prelude.Right', E2908} ->
													fun (V439) ->
														begin
														  V440 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V439, {'Idris.Core.Env.Nil'}, V3, V408),
														  case V440 of
														    {'Idris.Prelude.Left', E2909} -> fun (V441) -> {'Idris.Prelude.Left', V441} end(E2909);
														    {'Idris.Prelude.Right', E2910} ->
															fun (V442) ->
																begin
																  V447 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V443) -> fun (V444) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V443, V444) end end, fun (V445) -> fun (V446) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V445, V446) end end}, V442, V408),
																  case V447 of
																    {'Idris.Prelude.Left', E2911} -> fun (V448) -> {'Idris.Prelude.Left', V448} end(E2911);
																    {'Idris.Prelude.Right', E2912} -> fun (V449) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V449))}, V408) end(E2912);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E2910);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E2908);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end;
									_ ->
									    case V3 of
									      {'Idris.Core.Value.NTCon', E2775, E2776, E2777, E2778, E2779} ->
										  fun (V450, V451, V452, V453, V454) ->
											  fun (V455) ->
												  begin
												    V484 = begin V483 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V458, V459, V460) end end end end end, fun (V461) -> fun (V462) -> fun (V463) -> V462 end end end, fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> fun (V468) -> begin V469 = V466(V468), begin V470 = V467(V468), V469(V470) end end end end end end end}, fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> begin V476 = V473(V475), (V474(V476))(V475) end end end end end end, fun (V477) -> fun (V478) -> fun (V479) -> begin V480 = V478(V479), V480(V479) end end end end}, fun (V481) -> fun (V482) -> V482 end end}, V0))(V455), {'Idris.Prelude.Right', V483} end,
												    case V484 of
												      {'Idris.Prelude.Left', E2780} -> fun (V485) -> {'Idris.Prelude.Left', V485} end(E2780);
												      {'Idris.Prelude.Right', E2781} ->
													  fun (V486) ->
														  begin
														    V491 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V487) -> fun (V488) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V487, V488) end end, fun (V489) -> fun (V490) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V489, V490) end end}, V451, V455),
														    case V491 of
														      {'Idris.Prelude.Left', E2782} -> fun (V492) -> {'Idris.Prelude.Left', V492} end(E2782);
														      {'Idris.Prelude.Right', E2783} ->
															  fun (V493) ->
																  begin
																    V494 = ('un--getNArgs'(V486, V493, V454))(V455),
																    case V494 of
																      {'Idris.Prelude.Left', E2784} -> fun (V495) -> {'Idris.Prelude.Left', V495} end(E2784);
																      {'Idris.Prelude.Right', E2785} ->
																	  fun (V496) ->
																		  case V496 of
																		    {'Idris.Compiler.CompileExpr.User', E2786, E2787} ->
																			fun (V497, V498) ->
																				begin
																				  V500 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V499) -> 'Idris.Core.Normalise':'un--evalClosure'([], V486, V499) end, V498))(V455),
																				  case V500 of
																				    {'Idris.Prelude.Left', E2788} -> fun (V501) -> {'Idris.Prelude.Left', V501} end(E2788);
																				    {'Idris.Prelude.Right', E2789} ->
																					fun (V502) ->
																						begin
																						  V504 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V503) -> 'un--nfToCFType'(V0, V450, V2, V503) end, V502))(V455),
																						  case V504 of
																						    {'Idris.Prelude.Left', E2790} -> fun (V505) -> {'Idris.Prelude.Left', V505} end(E2790);
																						    {'Idris.Prelude.Right', E2791} -> fun (V506) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V493, V506}} end(E2791);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E2789);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2786, E2787);
																		    {'Idris.Compiler.CompileExpr.Struct', E2792, E2793} ->
																			fun (V507, V508) ->
																				begin
																				  V519 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																									   fun (V509) ->
																										   case V509 of
																										     {'Idris.Builtin.MkPair', E2794, E2795} ->
																											 fun (V510, V511) ->
																												 fun (V512) ->
																													 begin
																													   V513 = ('Idris.Core.Normalise':'un--evalClosure'([], V486, V511))(V512),
																													   case V513 of
																													     {'Idris.Prelude.Left', E2796} -> fun (V514) -> {'Idris.Prelude.Left', V514} end(E2796);
																													     {'Idris.Prelude.Right', E2797} ->
																														 fun (V515) ->
																															 begin
																															   V516 = ('un--nfToCFType'(V0, V450, 0, V515))(V512),
																															   case V516 of
																															     {'Idris.Prelude.Left', E2798} -> fun (V517) -> {'Idris.Prelude.Left', V517} end(E2798);
																															     {'Idris.Prelude.Right', E2799} -> fun (V518) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V510, V518}} end(E2799);
																															     _ -> erlang:throw("Error: Unreachable branch")
																															   end
																															 end
																														 end(E2797);
																													     _ -> erlang:throw("Error: Unreachable branch")
																													   end
																													 end
																												 end
																											 end(E2794, E2795);
																										     _ -> erlang:throw("Error: Unreachable branch")
																										   end
																									   end,
																									   V508))(V455),
																				  case V519 of
																				    {'Idris.Prelude.Left', E2800} -> fun (V520) -> {'Idris.Prelude.Left', V520} end(E2800);
																				    {'Idris.Prelude.Right', E2801} -> fun (V521) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V507, V521}} end(E2801);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2792, E2793);
																		    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																		    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																		    {'Idris.Compiler.CompileExpr.NIORes', E2802} ->
																			fun (V522) ->
																				begin
																				  V523 = ('Idris.Core.Normalise':'un--evalClosure'([], V486, V522))(V455),
																				  case V523 of
																				    {'Idris.Prelude.Left', E2803} -> fun (V524) -> {'Idris.Prelude.Left', V524} end(E2803);
																				    {'Idris.Prelude.Right', E2804} ->
																					fun (V525) ->
																						begin
																						  V526 = ('un--nfToCFType'(V0, V450, V2, V525))(V455),
																						  case V526 of
																						    {'Idris.Prelude.Left', E2805} -> fun (V527) -> {'Idris.Prelude.Left', V527} end(E2805);
																						    {'Idris.Prelude.Right', E2806} -> fun (V528) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V528}} end(E2806);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E2804);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2802);
																		    _ -> erlang:throw("Error: Unreachable branch")
																		  end
																	  end(E2785);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E2783);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2781);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E2775, E2776, E2777, E2778, E2779);
									      {'Idris.Core.Value.NType', E2807} -> fun (V529) -> fun (V530) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2807);
									      {'Idris.Core.Value.NErased', E2808, E2809} -> fun (V531, V532) -> fun (V533) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2808, E2809);
									      _ ->
										  fun (V534) ->
											  begin
											    V563 = begin V562 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> fun (V539) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V537, V538, V539) end end end end end, fun (V540) -> fun (V541) -> fun (V542) -> V541 end end end, fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> begin V548 = V545(V547), begin V549 = V546(V547), V548(V549) end end end end end end end}, fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> fun (V554) -> begin V555 = V552(V554), (V553(V555))(V554) end end end end end end, fun (V556) -> fun (V557) -> fun (V558) -> begin V559 = V557(V558), V559(V558) end end end end}, fun (V560) -> fun (V561) -> V561 end end}, V0))(V534), {'Idris.Prelude.Right', V562} end,
											    case V563 of
											      {'Idris.Prelude.Left', E2769} -> fun (V564) -> {'Idris.Prelude.Left', V564} end(E2769);
											      {'Idris.Prelude.Right', E2770} ->
												  fun (V565) ->
													  begin
													    V566 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V565, {'Idris.Core.Env.Nil'}, V3, V534),
													    case V566 of
													      {'Idris.Prelude.Left', E2771} -> fun (V567) -> {'Idris.Prelude.Left', V567} end(E2771);
													      {'Idris.Prelude.Right', E2772} ->
														  fun (V568) ->
															  begin
															    V573 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V569) -> fun (V570) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V569, V570) end end, fun (V571) -> fun (V572) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V571, V572) end end}, V568, V534),
															    case V573 of
															      {'Idris.Prelude.Left', E2773} -> fun (V574) -> {'Idris.Prelude.Left', V574} end(E2773);
															      {'Idris.Prelude.Right', E2774} -> fun (V575) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V575))}, V534) end(E2774);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2772);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2770);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									    end
								      end
								end
							end(E2767, E2768);
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E2666, E2667, E2668, E2669} ->
								    fun (V576, V577, V578, V579) ->
									    case V578 of
									      {'Idris.Core.TT.Pi', E2711, E2712, E2713} ->
										  fun (V580, V581, V582) ->
											  fun (V583) ->
												  begin
												    V612 = begin V611 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> fun (V588) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V586, V587, V588) end end end end end, fun (V589) -> fun (V590) -> fun (V591) -> V590 end end end, fun (V592) -> fun (V593) -> fun (V594) -> fun (V595) -> fun (V596) -> begin V597 = V594(V596), begin V598 = V595(V596), V597(V598) end end end end end end end}, fun (V599) -> fun (V600) -> fun (V601) -> fun (V602) -> fun (V603) -> begin V604 = V601(V603), (V602(V604))(V603) end end end end end end, fun (V605) -> fun (V606) -> fun (V607) -> begin V608 = V606(V607), V608(V607) end end end end}, fun (V609) -> fun (V610) -> V610 end end}, V0))(V583), {'Idris.Prelude.Right', V611} end,
												    case V612 of
												      {'Idris.Prelude.Left', E2714} -> fun (V613) -> {'Idris.Prelude.Left', V613} end(E2714);
												      {'Idris.Prelude.Right', E2715} ->
													  fun (V614) ->
														  begin
														    V615 = ('un--nfToCFType'(V0, V576, 1, V582))(V583),
														    case V615 of
														      {'Idris.Prelude.Left', E2716} -> fun (V616) -> {'Idris.Prelude.Left', V616} end(E2716);
														      {'Idris.Prelude.Right', E2717} ->
															  fun (V617) ->
																  begin
																    V618 = ((V579(V614))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V576, 1})))(V583),
																    case V618 of
																      {'Idris.Prelude.Left', E2718} -> fun (V619) -> {'Idris.Prelude.Left', V619} end(E2718);
																      {'Idris.Prelude.Right', E2719} ->
																	  fun (V620) ->
																		  begin
																		    V621 = ('un--nfToCFType'(V0, V576, 1, V620))(V583),
																		    case V621 of
																		      {'Idris.Prelude.Left', E2720} -> fun (V622) -> {'Idris.Prelude.Left', V622} end(E2720);
																		      {'Idris.Prelude.Right', E2721} -> fun (V623) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V617, V623}} end(E2721);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2719);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E2717);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2715);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E2711, E2712, E2713);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E2676, E2677, E2678, E2679, E2680} ->
											fun (V624, V625, V626, V627, V628) ->
												fun (V629) ->
													begin
													  V658 = begin V657 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V630) -> fun (V631) -> fun (V632) -> fun (V633) -> fun (V634) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V632, V633, V634) end end end end end, fun (V635) -> fun (V636) -> fun (V637) -> V636 end end end, fun (V638) -> fun (V639) -> fun (V640) -> fun (V641) -> fun (V642) -> begin V643 = V640(V642), begin V644 = V641(V642), V643(V644) end end end end end end end}, fun (V645) -> fun (V646) -> fun (V647) -> fun (V648) -> fun (V649) -> begin V650 = V647(V649), (V648(V650))(V649) end end end end end end, fun (V651) -> fun (V652) -> fun (V653) -> begin V654 = V652(V653), V654(V653) end end end end}, fun (V655) -> fun (V656) -> V656 end end}, V0))(V629), {'Idris.Prelude.Right', V657} end,
													  case V658 of
													    {'Idris.Prelude.Left', E2681} -> fun (V659) -> {'Idris.Prelude.Left', V659} end(E2681);
													    {'Idris.Prelude.Right', E2682} ->
														fun (V660) ->
															begin
															  V665 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V661) -> fun (V662) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V661, V662) end end, fun (V663) -> fun (V664) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V663, V664) end end}, V625, V629),
															  case V665 of
															    {'Idris.Prelude.Left', E2683} -> fun (V666) -> {'Idris.Prelude.Left', V666} end(E2683);
															    {'Idris.Prelude.Right', E2684} ->
																fun (V667) ->
																	begin
																	  V668 = ('un--getNArgs'(V660, V667, V628))(V629),
																	  case V668 of
																	    {'Idris.Prelude.Left', E2685} -> fun (V669) -> {'Idris.Prelude.Left', V669} end(E2685);
																	    {'Idris.Prelude.Right', E2686} ->
																		fun (V670) ->
																			case V670 of
																			  {'Idris.Compiler.CompileExpr.User', E2687, E2688} ->
																			      fun (V671, V672) ->
																				      begin
																					V674 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V673) -> 'Idris.Core.Normalise':'un--evalClosure'([], V660, V673) end, V672))(V629),
																					case V674 of
																					  {'Idris.Prelude.Left', E2689} -> fun (V675) -> {'Idris.Prelude.Left', V675} end(E2689);
																					  {'Idris.Prelude.Right', E2690} ->
																					      fun (V676) ->
																						      begin
																							V678 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V677) -> 'un--nfToCFType'(V0, V624, V2, V677) end, V676))(V629),
																							case V678 of
																							  {'Idris.Prelude.Left', E2691} -> fun (V679) -> {'Idris.Prelude.Left', V679} end(E2691);
																							  {'Idris.Prelude.Right', E2692} -> fun (V680) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V667, V680}} end(E2692);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2690);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2687, E2688);
																			  {'Idris.Compiler.CompileExpr.Struct', E2693, E2694} ->
																			      fun (V681, V682) ->
																				      begin
																					V693 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										 fun (V683) ->
																											 case V683 of
																											   {'Idris.Builtin.MkPair', E2695, E2696} ->
																											       fun (V684, V685) ->
																												       fun (V686) ->
																													       begin
																														 V687 = ('Idris.Core.Normalise':'un--evalClosure'([], V660, V685))(V686),
																														 case V687 of
																														   {'Idris.Prelude.Left', E2697} -> fun (V688) -> {'Idris.Prelude.Left', V688} end(E2697);
																														   {'Idris.Prelude.Right', E2698} ->
																														       fun (V689) ->
																															       begin
																																 V690 = ('un--nfToCFType'(V0, V624, 0, V689))(V686),
																																 case V690 of
																																   {'Idris.Prelude.Left', E2699} -> fun (V691) -> {'Idris.Prelude.Left', V691} end(E2699);
																																   {'Idris.Prelude.Right', E2700} -> fun (V692) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V684, V692}} end(E2700);
																																   _ -> erlang:throw("Error: Unreachable branch")
																																 end
																															       end
																														       end(E2698);
																														   _ -> erlang:throw("Error: Unreachable branch")
																														 end
																													       end
																												       end
																											       end(E2695, E2696);
																											   _ -> erlang:throw("Error: Unreachable branch")
																											 end
																										 end,
																										 V682))(V629),
																					case V693 of
																					  {'Idris.Prelude.Left', E2701} -> fun (V694) -> {'Idris.Prelude.Left', V694} end(E2701);
																					  {'Idris.Prelude.Right', E2702} -> fun (V695) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V681, V695}} end(E2702);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2693, E2694);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E2703} ->
																			      fun (V696) ->
																				      begin
																					V697 = ('Idris.Core.Normalise':'un--evalClosure'([], V660, V696))(V629),
																					case V697 of
																					  {'Idris.Prelude.Left', E2704} -> fun (V698) -> {'Idris.Prelude.Left', V698} end(E2704);
																					  {'Idris.Prelude.Right', E2705} ->
																					      fun (V699) ->
																						      begin
																							V700 = ('un--nfToCFType'(V0, V624, V2, V699))(V629),
																							case V700 of
																							  {'Idris.Prelude.Left', E2706} -> fun (V701) -> {'Idris.Prelude.Left', V701} end(E2706);
																							  {'Idris.Prelude.Right', E2707} -> fun (V702) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V702}} end(E2707);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2705);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2703);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E2686);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E2684);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E2682);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E2676, E2677, E2678, E2679, E2680);
										    {'Idris.Core.Value.NType', E2708} -> fun (V703) -> fun (V704) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2708);
										    {'Idris.Core.Value.NErased', E2709, E2710} -> fun (V705, V706) -> fun (V707) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2709, E2710);
										    _ ->
											fun (V708) ->
												begin
												  V737 = begin V736 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V709) -> fun (V710) -> fun (V711) -> fun (V712) -> fun (V713) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V711, V712, V713) end end end end end, fun (V714) -> fun (V715) -> fun (V716) -> V715 end end end, fun (V717) -> fun (V718) -> fun (V719) -> fun (V720) -> fun (V721) -> begin V722 = V719(V721), begin V723 = V720(V721), V722(V723) end end end end end end end}, fun (V724) -> fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> begin V729 = V726(V728), (V727(V729))(V728) end end end end end end, fun (V730) -> fun (V731) -> fun (V732) -> begin V733 = V731(V732), V733(V732) end end end end}, fun (V734) -> fun (V735) -> V735 end end}, V0))(V708), {'Idris.Prelude.Right', V736} end,
												  case V737 of
												    {'Idris.Prelude.Left', E2670} -> fun (V738) -> {'Idris.Prelude.Left', V738} end(E2670);
												    {'Idris.Prelude.Right', E2671} ->
													fun (V739) ->
														begin
														  V740 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V739, {'Idris.Core.Env.Nil'}, V3, V708),
														  case V740 of
														    {'Idris.Prelude.Left', E2672} -> fun (V741) -> {'Idris.Prelude.Left', V741} end(E2672);
														    {'Idris.Prelude.Right', E2673} ->
															fun (V742) ->
																begin
																  V747 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V743) -> fun (V744) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V743, V744) end end, fun (V745) -> fun (V746) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V745, V746) end end}, V742, V708),
																  case V747 of
																    {'Idris.Prelude.Left', E2674} -> fun (V748) -> {'Idris.Prelude.Left', V748} end(E2674);
																    {'Idris.Prelude.Right', E2675} -> fun (V749) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V749))}, V708) end(E2675);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E2673);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E2671);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E2666, E2667, E2668, E2669);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E2631, E2632, E2633, E2634, E2635} ->
									  fun (V750, V751, V752, V753, V754) ->
										  fun (V755) ->
											  begin
											    V784 = begin V783 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V756) -> fun (V757) -> fun (V758) -> fun (V759) -> fun (V760) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V758, V759, V760) end end end end end, fun (V761) -> fun (V762) -> fun (V763) -> V762 end end end, fun (V764) -> fun (V765) -> fun (V766) -> fun (V767) -> fun (V768) -> begin V769 = V766(V768), begin V770 = V767(V768), V769(V770) end end end end end end end}, fun (V771) -> fun (V772) -> fun (V773) -> fun (V774) -> fun (V775) -> begin V776 = V773(V775), (V774(V776))(V775) end end end end end end, fun (V777) -> fun (V778) -> fun (V779) -> begin V780 = V778(V779), V780(V779) end end end end}, fun (V781) -> fun (V782) -> V782 end end}, V0))(V755), {'Idris.Prelude.Right', V783} end,
											    case V784 of
											      {'Idris.Prelude.Left', E2636} -> fun (V785) -> {'Idris.Prelude.Left', V785} end(E2636);
											      {'Idris.Prelude.Right', E2637} ->
												  fun (V786) ->
													  begin
													    V791 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V787) -> fun (V788) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V787, V788) end end, fun (V789) -> fun (V790) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V789, V790) end end}, V751, V755),
													    case V791 of
													      {'Idris.Prelude.Left', E2638} -> fun (V792) -> {'Idris.Prelude.Left', V792} end(E2638);
													      {'Idris.Prelude.Right', E2639} ->
														  fun (V793) ->
															  begin
															    V794 = ('un--getNArgs'(V786, V793, V754))(V755),
															    case V794 of
															      {'Idris.Prelude.Left', E2640} -> fun (V795) -> {'Idris.Prelude.Left', V795} end(E2640);
															      {'Idris.Prelude.Right', E2641} ->
																  fun (V796) ->
																	  case V796 of
																	    {'Idris.Compiler.CompileExpr.User', E2642, E2643} ->
																		fun (V797, V798) ->
																			begin
																			  V800 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V799) -> 'Idris.Core.Normalise':'un--evalClosure'([], V786, V799) end, V798))(V755),
																			  case V800 of
																			    {'Idris.Prelude.Left', E2644} -> fun (V801) -> {'Idris.Prelude.Left', V801} end(E2644);
																			    {'Idris.Prelude.Right', E2645} ->
																				fun (V802) ->
																					begin
																					  V804 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V803) -> 'un--nfToCFType'(V0, V750, V2, V803) end, V802))(V755),
																					  case V804 of
																					    {'Idris.Prelude.Left', E2646} -> fun (V805) -> {'Idris.Prelude.Left', V805} end(E2646);
																					    {'Idris.Prelude.Right', E2647} -> fun (V806) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V793, V806}} end(E2647);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2645);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2642, E2643);
																	    {'Idris.Compiler.CompileExpr.Struct', E2648, E2649} ->
																		fun (V807, V808) ->
																			begin
																			  V819 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								   fun (V809) ->
																									   case V809 of
																									     {'Idris.Builtin.MkPair', E2650, E2651} ->
																										 fun (V810, V811) ->
																											 fun (V812) ->
																												 begin
																												   V813 = ('Idris.Core.Normalise':'un--evalClosure'([], V786, V811))(V812),
																												   case V813 of
																												     {'Idris.Prelude.Left', E2652} -> fun (V814) -> {'Idris.Prelude.Left', V814} end(E2652);
																												     {'Idris.Prelude.Right', E2653} ->
																													 fun (V815) ->
																														 begin
																														   V816 = ('un--nfToCFType'(V0, V750, 0, V815))(V812),
																														   case V816 of
																														     {'Idris.Prelude.Left', E2654} -> fun (V817) -> {'Idris.Prelude.Left', V817} end(E2654);
																														     {'Idris.Prelude.Right', E2655} -> fun (V818) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V810, V818}} end(E2655);
																														     _ -> erlang:throw("Error: Unreachable branch")
																														   end
																														 end
																													 end(E2653);
																												     _ -> erlang:throw("Error: Unreachable branch")
																												   end
																												 end
																											 end
																										 end(E2650, E2651);
																									     _ -> erlang:throw("Error: Unreachable branch")
																									   end
																								   end,
																								   V808))(V755),
																			  case V819 of
																			    {'Idris.Prelude.Left', E2656} -> fun (V820) -> {'Idris.Prelude.Left', V820} end(E2656);
																			    {'Idris.Prelude.Right', E2657} -> fun (V821) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V807, V821}} end(E2657);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2648, E2649);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E2658} ->
																		fun (V822) ->
																			begin
																			  V823 = ('Idris.Core.Normalise':'un--evalClosure'([], V786, V822))(V755),
																			  case V823 of
																			    {'Idris.Prelude.Left', E2659} -> fun (V824) -> {'Idris.Prelude.Left', V824} end(E2659);
																			    {'Idris.Prelude.Right', E2660} ->
																				fun (V825) ->
																					begin
																					  V826 = ('un--nfToCFType'(V0, V750, V2, V825))(V755),
																					  case V826 of
																					    {'Idris.Prelude.Left', E2661} -> fun (V827) -> {'Idris.Prelude.Left', V827} end(E2661);
																					    {'Idris.Prelude.Right', E2662} -> fun (V828) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V828}} end(E2662);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2660);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2658);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E2641);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2639);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2637);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E2631, E2632, E2633, E2634, E2635);
								      {'Idris.Core.Value.NType', E2663} -> fun (V829) -> fun (V830) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2663);
								      {'Idris.Core.Value.NErased', E2664, E2665} -> fun (V831, V832) -> fun (V833) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2664, E2665);
								      _ ->
									  fun (V834) ->
										  begin
										    V863 = begin V862 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V835) -> fun (V836) -> fun (V837) -> fun (V838) -> fun (V839) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V837, V838, V839) end end end end end, fun (V840) -> fun (V841) -> fun (V842) -> V841 end end end, fun (V843) -> fun (V844) -> fun (V845) -> fun (V846) -> fun (V847) -> begin V848 = V845(V847), begin V849 = V846(V847), V848(V849) end end end end end end end}, fun (V850) -> fun (V851) -> fun (V852) -> fun (V853) -> fun (V854) -> begin V855 = V852(V854), (V853(V855))(V854) end end end end end end, fun (V856) -> fun (V857) -> fun (V858) -> begin V859 = V857(V858), V859(V858) end end end end}, fun (V860) -> fun (V861) -> V861 end end}, V0))(V834), {'Idris.Prelude.Right', V862} end,
										    case V863 of
										      {'Idris.Prelude.Left', E2625} -> fun (V864) -> {'Idris.Prelude.Left', V864} end(E2625);
										      {'Idris.Prelude.Right', E2626} ->
											  fun (V865) ->
												  begin
												    V866 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V865, {'Idris.Core.Env.Nil'}, V3, V834),
												    case V866 of
												      {'Idris.Prelude.Left', E2627} -> fun (V867) -> {'Idris.Prelude.Left', V867} end(E2627);
												      {'Idris.Prelude.Right', E2628} ->
													  fun (V868) ->
														  begin
														    V873 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V869) -> fun (V870) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V869, V870) end end, fun (V871) -> fun (V872) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V871, V872) end end}, V868, V834),
														    case V873 of
														      {'Idris.Prelude.Left', E2629} -> fun (V874) -> {'Idris.Prelude.Left', V874} end(E2629);
														      {'Idris.Prelude.Right', E2630} -> fun (V875) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V875))}, V834) end(E2630);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2628);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E2626);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E2763, E2764, E2765, E2766} -> fun (V876, V877, V878, V879) -> fun (V880) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V876, <<"Function types not allowed in a foreign struct"/utf8>>}, V880) end end(E2763, E2764, E2765, E2766);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E2728, E2729, E2730, E2731, E2732} ->
									  fun (V881, V882, V883, V884, V885) ->
										  fun (V886) ->
											  begin
											    V915 = begin V914 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V887) -> fun (V888) -> fun (V889) -> fun (V890) -> fun (V891) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V889, V890, V891) end end end end end, fun (V892) -> fun (V893) -> fun (V894) -> V893 end end end, fun (V895) -> fun (V896) -> fun (V897) -> fun (V898) -> fun (V899) -> begin V900 = V897(V899), begin V901 = V898(V899), V900(V901) end end end end end end end}, fun (V902) -> fun (V903) -> fun (V904) -> fun (V905) -> fun (V906) -> begin V907 = V904(V906), (V905(V907))(V906) end end end end end end, fun (V908) -> fun (V909) -> fun (V910) -> begin V911 = V909(V910), V911(V910) end end end end}, fun (V912) -> fun (V913) -> V913 end end}, V0))(V886), {'Idris.Prelude.Right', V914} end,
											    case V915 of
											      {'Idris.Prelude.Left', E2733} -> fun (V916) -> {'Idris.Prelude.Left', V916} end(E2733);
											      {'Idris.Prelude.Right', E2734} ->
												  fun (V917) ->
													  begin
													    V922 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V918) -> fun (V919) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V918, V919) end end, fun (V920) -> fun (V921) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V920, V921) end end}, V882, V886),
													    case V922 of
													      {'Idris.Prelude.Left', E2735} -> fun (V923) -> {'Idris.Prelude.Left', V923} end(E2735);
													      {'Idris.Prelude.Right', E2736} ->
														  fun (V924) ->
															  begin
															    V925 = ('un--getNArgs'(V917, V924, V885))(V886),
															    case V925 of
															      {'Idris.Prelude.Left', E2737} -> fun (V926) -> {'Idris.Prelude.Left', V926} end(E2737);
															      {'Idris.Prelude.Right', E2738} ->
																  fun (V927) ->
																	  case V927 of
																	    {'Idris.Compiler.CompileExpr.User', E2739, E2740} ->
																		fun (V928, V929) ->
																			begin
																			  V931 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V930) -> 'Idris.Core.Normalise':'un--evalClosure'([], V917, V930) end, V929))(V886),
																			  case V931 of
																			    {'Idris.Prelude.Left', E2741} -> fun (V932) -> {'Idris.Prelude.Left', V932} end(E2741);
																			    {'Idris.Prelude.Right', E2742} ->
																				fun (V933) ->
																					begin
																					  V935 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V934) -> 'un--nfToCFType'(V0, V881, V2, V934) end, V933))(V886),
																					  case V935 of
																					    {'Idris.Prelude.Left', E2743} -> fun (V936) -> {'Idris.Prelude.Left', V936} end(E2743);
																					    {'Idris.Prelude.Right', E2744} -> fun (V937) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V924, V937}} end(E2744);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2742);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2739, E2740);
																	    {'Idris.Compiler.CompileExpr.Struct', E2745, E2746} ->
																		fun (V938, V939) ->
																			begin
																			  V950 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								   fun (V940) ->
																									   case V940 of
																									     {'Idris.Builtin.MkPair', E2747, E2748} ->
																										 fun (V941, V942) ->
																											 fun (V943) ->
																												 begin
																												   V944 = ('Idris.Core.Normalise':'un--evalClosure'([], V917, V942))(V943),
																												   case V944 of
																												     {'Idris.Prelude.Left', E2749} -> fun (V945) -> {'Idris.Prelude.Left', V945} end(E2749);
																												     {'Idris.Prelude.Right', E2750} ->
																													 fun (V946) ->
																														 begin
																														   V947 = ('un--nfToCFType'(V0, V881, 0, V946))(V943),
																														   case V947 of
																														     {'Idris.Prelude.Left', E2751} -> fun (V948) -> {'Idris.Prelude.Left', V948} end(E2751);
																														     {'Idris.Prelude.Right', E2752} -> fun (V949) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V941, V949}} end(E2752);
																														     _ -> erlang:throw("Error: Unreachable branch")
																														   end
																														 end
																													 end(E2750);
																												     _ -> erlang:throw("Error: Unreachable branch")
																												   end
																												 end
																											 end
																										 end(E2747, E2748);
																									     _ -> erlang:throw("Error: Unreachable branch")
																									   end
																								   end,
																								   V939))(V886),
																			  case V950 of
																			    {'Idris.Prelude.Left', E2753} -> fun (V951) -> {'Idris.Prelude.Left', V951} end(E2753);
																			    {'Idris.Prelude.Right', E2754} -> fun (V952) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V938, V952}} end(E2754);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2745, E2746);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E2755} ->
																		fun (V953) ->
																			begin
																			  V954 = ('Idris.Core.Normalise':'un--evalClosure'([], V917, V953))(V886),
																			  case V954 of
																			    {'Idris.Prelude.Left', E2756} -> fun (V955) -> {'Idris.Prelude.Left', V955} end(E2756);
																			    {'Idris.Prelude.Right', E2757} ->
																				fun (V956) ->
																					begin
																					  V957 = ('un--nfToCFType'(V0, V881, V2, V956))(V886),
																					  case V957 of
																					    {'Idris.Prelude.Left', E2758} -> fun (V958) -> {'Idris.Prelude.Left', V958} end(E2758);
																					    {'Idris.Prelude.Right', E2759} -> fun (V959) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V959}} end(E2759);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2757);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2755);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E2738);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2736);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2734);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E2728, E2729, E2730, E2731, E2732);
								      {'Idris.Core.Value.NType', E2760} -> fun (V960) -> fun (V961) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2760);
								      {'Idris.Core.Value.NErased', E2761, E2762} -> fun (V962, V963) -> fun (V964) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2761, E2762);
								      _ ->
									  fun (V965) ->
										  begin
										    V994 = begin V993 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V966) -> fun (V967) -> fun (V968) -> fun (V969) -> fun (V970) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V968, V969, V970) end end end end end, fun (V971) -> fun (V972) -> fun (V973) -> V972 end end end, fun (V974) -> fun (V975) -> fun (V976) -> fun (V977) -> fun (V978) -> begin V979 = V976(V978), begin V980 = V977(V978), V979(V980) end end end end end end end}, fun (V981) -> fun (V982) -> fun (V983) -> fun (V984) -> fun (V985) -> begin V986 = V983(V985), (V984(V986))(V985) end end end end end end, fun (V987) -> fun (V988) -> fun (V989) -> begin V990 = V988(V989), V990(V989) end end end end}, fun (V991) -> fun (V992) -> V992 end end}, V0))(V965), {'Idris.Prelude.Right', V993} end,
										    case V994 of
										      {'Idris.Prelude.Left', E2722} -> fun (V995) -> {'Idris.Prelude.Left', V995} end(E2722);
										      {'Idris.Prelude.Right', E2723} ->
											  fun (V996) ->
												  begin
												    V997 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V996, {'Idris.Core.Env.Nil'}, V3, V965),
												    case V997 of
												      {'Idris.Prelude.Left', E2724} -> fun (V998) -> {'Idris.Prelude.Left', V998} end(E2724);
												      {'Idris.Prelude.Right', E2725} ->
													  fun (V999) ->
														  begin
														    V1004 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1000) -> fun (V1001) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1000, V1001) end end, fun (V1002) -> fun (V1003) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1002, V1003) end end}, V999, V965),
														    case V1004 of
														      {'Idris.Prelude.Left', E2726} -> fun (V1005) -> {'Idris.Prelude.Left', V1005} end(E2726);
														      {'Idris.Prelude.Right', E2727} -> fun (V1006) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1006))}, V965) end(E2727);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2725);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E2723);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E2590, E2591, E2592, E2593, E2594} ->
								    fun (V1007, V1008, V1009, V1010, V1011) ->
									    fun (V1012) ->
										    begin
										      V1041 = begin V1040 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1013) -> fun (V1014) -> fun (V1015) -> fun (V1016) -> fun (V1017) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1015, V1016, V1017) end end end end end, fun (V1018) -> fun (V1019) -> fun (V1020) -> V1019 end end end, fun (V1021) -> fun (V1022) -> fun (V1023) -> fun (V1024) -> fun (V1025) -> begin V1026 = V1023(V1025), begin V1027 = V1024(V1025), V1026(V1027) end end end end end end end}, fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> fun (V1032) -> begin V1033 = V1030(V1032), (V1031(V1033))(V1032) end end end end end end, fun (V1034) -> fun (V1035) -> fun (V1036) -> begin V1037 = V1035(V1036), V1037(V1036) end end end end}, fun (V1038) -> fun (V1039) -> V1039 end end}, V0))(V1012), {'Idris.Prelude.Right', V1040} end,
										      case V1041 of
											{'Idris.Prelude.Left', E2595} -> fun (V1042) -> {'Idris.Prelude.Left', V1042} end(E2595);
											{'Idris.Prelude.Right', E2596} ->
											    fun (V1043) ->
												    begin
												      V1048 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1044) -> fun (V1045) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1044, V1045) end end, fun (V1046) -> fun (V1047) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1046, V1047) end end}, V1008, V1012),
												      case V1048 of
													{'Idris.Prelude.Left', E2597} -> fun (V1049) -> {'Idris.Prelude.Left', V1049} end(E2597);
													{'Idris.Prelude.Right', E2598} ->
													    fun (V1050) ->
														    begin
														      V1051 = ('un--getNArgs'(V1043, V1050, V1011))(V1012),
														      case V1051 of
															{'Idris.Prelude.Left', E2599} -> fun (V1052) -> {'Idris.Prelude.Left', V1052} end(E2599);
															{'Idris.Prelude.Right', E2600} ->
															    fun (V1053) ->
																    case V1053 of
																      {'Idris.Compiler.CompileExpr.User', E2601, E2602} ->
																	  fun (V1054, V1055) ->
																		  begin
																		    V1057 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1056) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1043, V1056) end, V1055))(V1012),
																		    case V1057 of
																		      {'Idris.Prelude.Left', E2603} -> fun (V1058) -> {'Idris.Prelude.Left', V1058} end(E2603);
																		      {'Idris.Prelude.Right', E2604} ->
																			  fun (V1059) ->
																				  begin
																				    V1061 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1060) -> 'un--nfToCFType'(V0, V1007, V2, V1060) end, V1059))(V1012),
																				    case V1061 of
																				      {'Idris.Prelude.Left', E2605} -> fun (V1062) -> {'Idris.Prelude.Left', V1062} end(E2605);
																				      {'Idris.Prelude.Right', E2606} -> fun (V1063) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1050, V1063}} end(E2606);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2604);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2601, E2602);
																      {'Idris.Compiler.CompileExpr.Struct', E2607, E2608} ->
																	  fun (V1064, V1065) ->
																		  begin
																		    V1076 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V1066) ->
																								      case V1066 of
																									{'Idris.Builtin.MkPair', E2609, E2610} ->
																									    fun (V1067, V1068) ->
																										    fun (V1069) ->
																											    begin
																											      V1070 = ('Idris.Core.Normalise':'un--evalClosure'([], V1043, V1068))(V1069),
																											      case V1070 of
																												{'Idris.Prelude.Left', E2611} -> fun (V1071) -> {'Idris.Prelude.Left', V1071} end(E2611);
																												{'Idris.Prelude.Right', E2612} ->
																												    fun (V1072) ->
																													    begin
																													      V1073 = ('un--nfToCFType'(V0, V1007, 0, V1072))(V1069),
																													      case V1073 of
																														{'Idris.Prelude.Left', E2613} -> fun (V1074) -> {'Idris.Prelude.Left', V1074} end(E2613);
																														{'Idris.Prelude.Right', E2614} -> fun (V1075) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1067, V1075}} end(E2614);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E2612);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E2609, E2610);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V1065))(V1012),
																		    case V1076 of
																		      {'Idris.Prelude.Left', E2615} -> fun (V1077) -> {'Idris.Prelude.Left', V1077} end(E2615);
																		      {'Idris.Prelude.Right', E2616} -> fun (V1078) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1064, V1078}} end(E2616);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2607, E2608);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E2617} ->
																	  fun (V1079) ->
																		  begin
																		    V1080 = ('Idris.Core.Normalise':'un--evalClosure'([], V1043, V1079))(V1012),
																		    case V1080 of
																		      {'Idris.Prelude.Left', E2618} -> fun (V1081) -> {'Idris.Prelude.Left', V1081} end(E2618);
																		      {'Idris.Prelude.Right', E2619} ->
																			  fun (V1082) ->
																				  begin
																				    V1083 = ('un--nfToCFType'(V0, V1007, V2, V1082))(V1012),
																				    case V1083 of
																				      {'Idris.Prelude.Left', E2620} -> fun (V1084) -> {'Idris.Prelude.Left', V1084} end(E2620);
																				      {'Idris.Prelude.Right', E2621} -> fun (V1085) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1085}} end(E2621);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2619);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2617);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E2600);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E2598);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2596);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E2590, E2591, E2592, E2593, E2594);
								{'Idris.Core.Value.NType', E2622} -> fun (V1086) -> fun (V1087) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2622);
								{'Idris.Core.Value.NErased', E2623, E2624} -> fun (V1088, V1089) -> fun (V1090) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2623, E2624);
								_ ->
								    fun (V1091) ->
									    begin
									      V1120 = begin V1119 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1092) -> fun (V1093) -> fun (V1094) -> fun (V1095) -> fun (V1096) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1094, V1095, V1096) end end end end end, fun (V1097) -> fun (V1098) -> fun (V1099) -> V1098 end end end, fun (V1100) -> fun (V1101) -> fun (V1102) -> fun (V1103) -> fun (V1104) -> begin V1105 = V1102(V1104), begin V1106 = V1103(V1104), V1105(V1106) end end end end end end end}, fun (V1107) -> fun (V1108) -> fun (V1109) -> fun (V1110) -> fun (V1111) -> begin V1112 = V1109(V1111), (V1110(V1112))(V1111) end end end end end end, fun (V1113) -> fun (V1114) -> fun (V1115) -> begin V1116 = V1114(V1115), V1116(V1115) end end end end}, fun (V1117) -> fun (V1118) -> V1118 end end}, V0))(V1091), {'Idris.Prelude.Right', V1119} end,
									      case V1120 of
										{'Idris.Prelude.Left', E2584} -> fun (V1121) -> {'Idris.Prelude.Left', V1121} end(E2584);
										{'Idris.Prelude.Right', E2585} ->
										    fun (V1122) ->
											    begin
											      V1123 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1122, {'Idris.Core.Env.Nil'}, V3, V1091),
											      case V1123 of
												{'Idris.Prelude.Left', E2586} -> fun (V1124) -> {'Idris.Prelude.Left', V1124} end(E2586);
												{'Idris.Prelude.Right', E2587} ->
												    fun (V1125) ->
													    begin
													      V1130 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1126) -> fun (V1127) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1126, V1127) end end, fun (V1128) -> fun (V1129) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1128, V1129) end end}, V1125, V1091),
													      case V1130 of
														{'Idris.Prelude.Left', E2588} -> fun (V1131) -> {'Idris.Prelude.Left', V1131} end(E2588);
														{'Idris.Prelude.Right', E2589} -> fun (V1132) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1132))}, V1091) end(E2589);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2587);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2585);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					    end
				    end(E2582, E2583);
				_ ->
				    case V3 of
				      {'Idris.Core.Value.NPrimVal', E2397, E2398} ->
					  fun (V1133, V1134) ->
						  case V1134 of
						    {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V1135) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
						    {'Idris.Core.TT.CharType'} -> fun () -> fun (V1136) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
						    {'Idris.Core.TT.WorldType'} -> fun () -> fun (V1137) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E2481, E2482, E2483, E2484} ->
								    fun (V1138, V1139, V1140, V1141) ->
									    case V1140 of
									      {'Idris.Core.TT.Pi', E2526, E2527, E2528} ->
										  fun (V1142, V1143, V1144) ->
											  fun (V1145) ->
												  begin
												    V1174 = begin V1173 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1146) -> fun (V1147) -> fun (V1148) -> fun (V1149) -> fun (V1150) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1148, V1149, V1150) end end end end end, fun (V1151) -> fun (V1152) -> fun (V1153) -> V1152 end end end, fun (V1154) -> fun (V1155) -> fun (V1156) -> fun (V1157) -> fun (V1158) -> begin V1159 = V1156(V1158), begin V1160 = V1157(V1158), V1159(V1160) end end end end end end end}, fun (V1161) -> fun (V1162) -> fun (V1163) -> fun (V1164) -> fun (V1165) -> begin V1166 = V1163(V1165), (V1164(V1166))(V1165) end end end end end end, fun (V1167) -> fun (V1168) -> fun (V1169) -> begin V1170 = V1168(V1169), V1170(V1169) end end end end}, fun (V1171) -> fun (V1172) -> V1172 end end}, V0))(V1145), {'Idris.Prelude.Right', V1173} end,
												    case V1174 of
												      {'Idris.Prelude.Left', E2529} -> fun (V1175) -> {'Idris.Prelude.Left', V1175} end(E2529);
												      {'Idris.Prelude.Right', E2530} ->
													  fun (V1176) ->
														  begin
														    V1177 = ('un--nfToCFType'(V0, V1138, 1, V1144))(V1145),
														    case V1177 of
														      {'Idris.Prelude.Left', E2531} -> fun (V1178) -> {'Idris.Prelude.Left', V1178} end(E2531);
														      {'Idris.Prelude.Right', E2532} ->
															  fun (V1179) ->
																  begin
																    V1180 = ((V1141(V1176))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1138, 1})))(V1145),
																    case V1180 of
																      {'Idris.Prelude.Left', E2533} -> fun (V1181) -> {'Idris.Prelude.Left', V1181} end(E2533);
																      {'Idris.Prelude.Right', E2534} ->
																	  fun (V1182) ->
																		  begin
																		    V1183 = ('un--nfToCFType'(V0, V1138, 1, V1182))(V1145),
																		    case V1183 of
																		      {'Idris.Prelude.Left', E2535} -> fun (V1184) -> {'Idris.Prelude.Left', V1184} end(E2535);
																		      {'Idris.Prelude.Right', E2536} -> fun (V1185) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V1179, V1185}} end(E2536);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2534);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E2532);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2530);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E2526, E2527, E2528);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E2491, E2492, E2493, E2494, E2495} ->
											fun (V1186, V1187, V1188, V1189, V1190) ->
												fun (V1191) ->
													begin
													  V1220 = begin V1219 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1192) -> fun (V1193) -> fun (V1194) -> fun (V1195) -> fun (V1196) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1194, V1195, V1196) end end end end end, fun (V1197) -> fun (V1198) -> fun (V1199) -> V1198 end end end, fun (V1200) -> fun (V1201) -> fun (V1202) -> fun (V1203) -> fun (V1204) -> begin V1205 = V1202(V1204), begin V1206 = V1203(V1204), V1205(V1206) end end end end end end end}, fun (V1207) -> fun (V1208) -> fun (V1209) -> fun (V1210) -> fun (V1211) -> begin V1212 = V1209(V1211), (V1210(V1212))(V1211) end end end end end end, fun (V1213) -> fun (V1214) -> fun (V1215) -> begin V1216 = V1214(V1215), V1216(V1215) end end end end}, fun (V1217) -> fun (V1218) -> V1218 end end}, V0))(V1191), {'Idris.Prelude.Right', V1219} end,
													  case V1220 of
													    {'Idris.Prelude.Left', E2496} -> fun (V1221) -> {'Idris.Prelude.Left', V1221} end(E2496);
													    {'Idris.Prelude.Right', E2497} ->
														fun (V1222) ->
															begin
															  V1227 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1223) -> fun (V1224) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1223, V1224) end end, fun (V1225) -> fun (V1226) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1225, V1226) end end}, V1187, V1191),
															  case V1227 of
															    {'Idris.Prelude.Left', E2498} -> fun (V1228) -> {'Idris.Prelude.Left', V1228} end(E2498);
															    {'Idris.Prelude.Right', E2499} ->
																fun (V1229) ->
																	begin
																	  V1230 = ('un--getNArgs'(V1222, V1229, V1190))(V1191),
																	  case V1230 of
																	    {'Idris.Prelude.Left', E2500} -> fun (V1231) -> {'Idris.Prelude.Left', V1231} end(E2500);
																	    {'Idris.Prelude.Right', E2501} ->
																		fun (V1232) ->
																			case V1232 of
																			  {'Idris.Compiler.CompileExpr.User', E2502, E2503} ->
																			      fun (V1233, V1234) ->
																				      begin
																					V1236 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1235) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1222, V1235) end, V1234))(V1191),
																					case V1236 of
																					  {'Idris.Prelude.Left', E2504} -> fun (V1237) -> {'Idris.Prelude.Left', V1237} end(E2504);
																					  {'Idris.Prelude.Right', E2505} ->
																					      fun (V1238) ->
																						      begin
																							V1240 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1239) -> 'un--nfToCFType'(V0, V1186, V2, V1239) end, V1238))(V1191),
																							case V1240 of
																							  {'Idris.Prelude.Left', E2506} -> fun (V1241) -> {'Idris.Prelude.Left', V1241} end(E2506);
																							  {'Idris.Prelude.Right', E2507} -> fun (V1242) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1229, V1242}} end(E2507);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2505);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2502, E2503);
																			  {'Idris.Compiler.CompileExpr.Struct', E2508, E2509} ->
																			      fun (V1243, V1244) ->
																				      begin
																					V1255 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V1245) ->
																											  case V1245 of
																											    {'Idris.Builtin.MkPair', E2510, E2511} ->
																												fun (V1246, V1247) ->
																													fun (V1248) ->
																														begin
																														  V1249 = ('Idris.Core.Normalise':'un--evalClosure'([], V1222, V1247))(V1248),
																														  case V1249 of
																														    {'Idris.Prelude.Left', E2512} -> fun (V1250) -> {'Idris.Prelude.Left', V1250} end(E2512);
																														    {'Idris.Prelude.Right', E2513} ->
																															fun (V1251) ->
																																begin
																																  V1252 = ('un--nfToCFType'(V0, V1186, 0, V1251))(V1248),
																																  case V1252 of
																																    {'Idris.Prelude.Left', E2514} -> fun (V1253) -> {'Idris.Prelude.Left', V1253} end(E2514);
																																    {'Idris.Prelude.Right', E2515} -> fun (V1254) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1246, V1254}} end(E2515);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E2513);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E2510, E2511);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V1244))(V1191),
																					case V1255 of
																					  {'Idris.Prelude.Left', E2516} -> fun (V1256) -> {'Idris.Prelude.Left', V1256} end(E2516);
																					  {'Idris.Prelude.Right', E2517} -> fun (V1257) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1243, V1257}} end(E2517);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2508, E2509);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E2518} ->
																			      fun (V1258) ->
																				      begin
																					V1259 = ('Idris.Core.Normalise':'un--evalClosure'([], V1222, V1258))(V1191),
																					case V1259 of
																					  {'Idris.Prelude.Left', E2519} -> fun (V1260) -> {'Idris.Prelude.Left', V1260} end(E2519);
																					  {'Idris.Prelude.Right', E2520} ->
																					      fun (V1261) ->
																						      begin
																							V1262 = ('un--nfToCFType'(V0, V1186, V2, V1261))(V1191),
																							case V1262 of
																							  {'Idris.Prelude.Left', E2521} -> fun (V1263) -> {'Idris.Prelude.Left', V1263} end(E2521);
																							  {'Idris.Prelude.Right', E2522} -> fun (V1264) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1264}} end(E2522);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E2520);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E2518);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E2501);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E2499);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E2497);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E2491, E2492, E2493, E2494, E2495);
										    {'Idris.Core.Value.NType', E2523} -> fun (V1265) -> fun (V1266) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2523);
										    {'Idris.Core.Value.NErased', E2524, E2525} -> fun (V1267, V1268) -> fun (V1269) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2524, E2525);
										    _ ->
											fun (V1270) ->
												begin
												  V1299 = begin V1298 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1271) -> fun (V1272) -> fun (V1273) -> fun (V1274) -> fun (V1275) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1273, V1274, V1275) end end end end end, fun (V1276) -> fun (V1277) -> fun (V1278) -> V1277 end end end, fun (V1279) -> fun (V1280) -> fun (V1281) -> fun (V1282) -> fun (V1283) -> begin V1284 = V1281(V1283), begin V1285 = V1282(V1283), V1284(V1285) end end end end end end end}, fun (V1286) -> fun (V1287) -> fun (V1288) -> fun (V1289) -> fun (V1290) -> begin V1291 = V1288(V1290), (V1289(V1291))(V1290) end end end end end end, fun (V1292) -> fun (V1293) -> fun (V1294) -> begin V1295 = V1293(V1294), V1295(V1294) end end end end}, fun (V1296) -> fun (V1297) -> V1297 end end}, V0))(V1270), {'Idris.Prelude.Right', V1298} end,
												  case V1299 of
												    {'Idris.Prelude.Left', E2485} -> fun (V1300) -> {'Idris.Prelude.Left', V1300} end(E2485);
												    {'Idris.Prelude.Right', E2486} ->
													fun (V1301) ->
														begin
														  V1302 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1301, {'Idris.Core.Env.Nil'}, V3, V1270),
														  case V1302 of
														    {'Idris.Prelude.Left', E2487} -> fun (V1303) -> {'Idris.Prelude.Left', V1303} end(E2487);
														    {'Idris.Prelude.Right', E2488} ->
															fun (V1304) ->
																begin
																  V1309 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1305) -> fun (V1306) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1305, V1306) end end, fun (V1307) -> fun (V1308) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1307, V1308) end end}, V1304, V1270),
																  case V1309 of
																    {'Idris.Prelude.Left', E2489} -> fun (V1310) -> {'Idris.Prelude.Left', V1310} end(E2489);
																    {'Idris.Prelude.Right', E2490} -> fun (V1311) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1311))}, V1270) end(E2490);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E2488);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E2486);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E2481, E2482, E2483, E2484);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E2446, E2447, E2448, E2449, E2450} ->
									  fun (V1312, V1313, V1314, V1315, V1316) ->
										  fun (V1317) ->
											  begin
											    V1346 = begin V1345 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1318) -> fun (V1319) -> fun (V1320) -> fun (V1321) -> fun (V1322) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1320, V1321, V1322) end end end end end, fun (V1323) -> fun (V1324) -> fun (V1325) -> V1324 end end end, fun (V1326) -> fun (V1327) -> fun (V1328) -> fun (V1329) -> fun (V1330) -> begin V1331 = V1328(V1330), begin V1332 = V1329(V1330), V1331(V1332) end end end end end end end}, fun (V1333) -> fun (V1334) -> fun (V1335) -> fun (V1336) -> fun (V1337) -> begin V1338 = V1335(V1337), (V1336(V1338))(V1337) end end end end end end, fun (V1339) -> fun (V1340) -> fun (V1341) -> begin V1342 = V1340(V1341), V1342(V1341) end end end end}, fun (V1343) -> fun (V1344) -> V1344 end end}, V0))(V1317), {'Idris.Prelude.Right', V1345} end,
											    case V1346 of
											      {'Idris.Prelude.Left', E2451} -> fun (V1347) -> {'Idris.Prelude.Left', V1347} end(E2451);
											      {'Idris.Prelude.Right', E2452} ->
												  fun (V1348) ->
													  begin
													    V1353 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1349) -> fun (V1350) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1349, V1350) end end, fun (V1351) -> fun (V1352) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1351, V1352) end end}, V1313, V1317),
													    case V1353 of
													      {'Idris.Prelude.Left', E2453} -> fun (V1354) -> {'Idris.Prelude.Left', V1354} end(E2453);
													      {'Idris.Prelude.Right', E2454} ->
														  fun (V1355) ->
															  begin
															    V1356 = ('un--getNArgs'(V1348, V1355, V1316))(V1317),
															    case V1356 of
															      {'Idris.Prelude.Left', E2455} -> fun (V1357) -> {'Idris.Prelude.Left', V1357} end(E2455);
															      {'Idris.Prelude.Right', E2456} ->
																  fun (V1358) ->
																	  case V1358 of
																	    {'Idris.Compiler.CompileExpr.User', E2457, E2458} ->
																		fun (V1359, V1360) ->
																			begin
																			  V1362 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1361) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1348, V1361) end, V1360))(V1317),
																			  case V1362 of
																			    {'Idris.Prelude.Left', E2459} -> fun (V1363) -> {'Idris.Prelude.Left', V1363} end(E2459);
																			    {'Idris.Prelude.Right', E2460} ->
																				fun (V1364) ->
																					begin
																					  V1366 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1365) -> 'un--nfToCFType'(V0, V1312, V2, V1365) end, V1364))(V1317),
																					  case V1366 of
																					    {'Idris.Prelude.Left', E2461} -> fun (V1367) -> {'Idris.Prelude.Left', V1367} end(E2461);
																					    {'Idris.Prelude.Right', E2462} -> fun (V1368) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1355, V1368}} end(E2462);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2460);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2457, E2458);
																	    {'Idris.Compiler.CompileExpr.Struct', E2463, E2464} ->
																		fun (V1369, V1370) ->
																			begin
																			  V1381 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V1371) ->
																									    case V1371 of
																									      {'Idris.Builtin.MkPair', E2465, E2466} ->
																										  fun (V1372, V1373) ->
																											  fun (V1374) ->
																												  begin
																												    V1375 = ('Idris.Core.Normalise':'un--evalClosure'([], V1348, V1373))(V1374),
																												    case V1375 of
																												      {'Idris.Prelude.Left', E2467} -> fun (V1376) -> {'Idris.Prelude.Left', V1376} end(E2467);
																												      {'Idris.Prelude.Right', E2468} ->
																													  fun (V1377) ->
																														  begin
																														    V1378 = ('un--nfToCFType'(V0, V1312, 0, V1377))(V1374),
																														    case V1378 of
																														      {'Idris.Prelude.Left', E2469} -> fun (V1379) -> {'Idris.Prelude.Left', V1379} end(E2469);
																														      {'Idris.Prelude.Right', E2470} -> fun (V1380) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1372, V1380}} end(E2470);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E2468);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E2465, E2466);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V1370))(V1317),
																			  case V1381 of
																			    {'Idris.Prelude.Left', E2471} -> fun (V1382) -> {'Idris.Prelude.Left', V1382} end(E2471);
																			    {'Idris.Prelude.Right', E2472} -> fun (V1383) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1369, V1383}} end(E2472);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2463, E2464);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E2473} ->
																		fun (V1384) ->
																			begin
																			  V1385 = ('Idris.Core.Normalise':'un--evalClosure'([], V1348, V1384))(V1317),
																			  case V1385 of
																			    {'Idris.Prelude.Left', E2474} -> fun (V1386) -> {'Idris.Prelude.Left', V1386} end(E2474);
																			    {'Idris.Prelude.Right', E2475} ->
																				fun (V1387) ->
																					begin
																					  V1388 = ('un--nfToCFType'(V0, V1312, V2, V1387))(V1317),
																					  case V1388 of
																					    {'Idris.Prelude.Left', E2476} -> fun (V1389) -> {'Idris.Prelude.Left', V1389} end(E2476);
																					    {'Idris.Prelude.Right', E2477} -> fun (V1390) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1390}} end(E2477);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2475);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2473);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E2456);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2454);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2452);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E2446, E2447, E2448, E2449, E2450);
								      {'Idris.Core.Value.NType', E2478} -> fun (V1391) -> fun (V1392) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2478);
								      {'Idris.Core.Value.NErased', E2479, E2480} -> fun (V1393, V1394) -> fun (V1395) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2479, E2480);
								      _ ->
									  fun (V1396) ->
										  begin
										    V1425 = begin V1424 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1397) -> fun (V1398) -> fun (V1399) -> fun (V1400) -> fun (V1401) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1399, V1400, V1401) end end end end end, fun (V1402) -> fun (V1403) -> fun (V1404) -> V1403 end end end, fun (V1405) -> fun (V1406) -> fun (V1407) -> fun (V1408) -> fun (V1409) -> begin V1410 = V1407(V1409), begin V1411 = V1408(V1409), V1410(V1411) end end end end end end end}, fun (V1412) -> fun (V1413) -> fun (V1414) -> fun (V1415) -> fun (V1416) -> begin V1417 = V1414(V1416), (V1415(V1417))(V1416) end end end end end end, fun (V1418) -> fun (V1419) -> fun (V1420) -> begin V1421 = V1419(V1420), V1421(V1420) end end end end}, fun (V1422) -> fun (V1423) -> V1423 end end}, V0))(V1396), {'Idris.Prelude.Right', V1424} end,
										    case V1425 of
										      {'Idris.Prelude.Left', E2440} -> fun (V1426) -> {'Idris.Prelude.Left', V1426} end(E2440);
										      {'Idris.Prelude.Right', E2441} ->
											  fun (V1427) ->
												  begin
												    V1428 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1427, {'Idris.Core.Env.Nil'}, V3, V1396),
												    case V1428 of
												      {'Idris.Prelude.Left', E2442} -> fun (V1429) -> {'Idris.Prelude.Left', V1429} end(E2442);
												      {'Idris.Prelude.Right', E2443} ->
													  fun (V1430) ->
														  begin
														    V1435 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1431) -> fun (V1432) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1431, V1432) end end, fun (V1433) -> fun (V1434) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1433, V1434) end end}, V1430, V1396),
														    case V1435 of
														      {'Idris.Prelude.Left', E2444} -> fun (V1436) -> {'Idris.Prelude.Left', V1436} end(E2444);
														      {'Idris.Prelude.Right', E2445} -> fun (V1437) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1437))}, V1396) end(E2445);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2443);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E2441);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E2578, E2579, E2580, E2581} -> fun (V1438, V1439, V1440, V1441) -> fun (V1442) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V1438, <<"Function types not allowed in a foreign struct"/utf8>>}, V1442) end end(E2578, E2579, E2580, E2581);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E2543, E2544, E2545, E2546, E2547} ->
									  fun (V1443, V1444, V1445, V1446, V1447) ->
										  fun (V1448) ->
											  begin
											    V1477 = begin V1476 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1449) -> fun (V1450) -> fun (V1451) -> fun (V1452) -> fun (V1453) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1451, V1452, V1453) end end end end end, fun (V1454) -> fun (V1455) -> fun (V1456) -> V1455 end end end, fun (V1457) -> fun (V1458) -> fun (V1459) -> fun (V1460) -> fun (V1461) -> begin V1462 = V1459(V1461), begin V1463 = V1460(V1461), V1462(V1463) end end end end end end end}, fun (V1464) -> fun (V1465) -> fun (V1466) -> fun (V1467) -> fun (V1468) -> begin V1469 = V1466(V1468), (V1467(V1469))(V1468) end end end end end end, fun (V1470) -> fun (V1471) -> fun (V1472) -> begin V1473 = V1471(V1472), V1473(V1472) end end end end}, fun (V1474) -> fun (V1475) -> V1475 end end}, V0))(V1448), {'Idris.Prelude.Right', V1476} end,
											    case V1477 of
											      {'Idris.Prelude.Left', E2548} -> fun (V1478) -> {'Idris.Prelude.Left', V1478} end(E2548);
											      {'Idris.Prelude.Right', E2549} ->
												  fun (V1479) ->
													  begin
													    V1484 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1480) -> fun (V1481) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1480, V1481) end end, fun (V1482) -> fun (V1483) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1482, V1483) end end}, V1444, V1448),
													    case V1484 of
													      {'Idris.Prelude.Left', E2550} -> fun (V1485) -> {'Idris.Prelude.Left', V1485} end(E2550);
													      {'Idris.Prelude.Right', E2551} ->
														  fun (V1486) ->
															  begin
															    V1487 = ('un--getNArgs'(V1479, V1486, V1447))(V1448),
															    case V1487 of
															      {'Idris.Prelude.Left', E2552} -> fun (V1488) -> {'Idris.Prelude.Left', V1488} end(E2552);
															      {'Idris.Prelude.Right', E2553} ->
																  fun (V1489) ->
																	  case V1489 of
																	    {'Idris.Compiler.CompileExpr.User', E2554, E2555} ->
																		fun (V1490, V1491) ->
																			begin
																			  V1493 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1492) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1479, V1492) end, V1491))(V1448),
																			  case V1493 of
																			    {'Idris.Prelude.Left', E2556} -> fun (V1494) -> {'Idris.Prelude.Left', V1494} end(E2556);
																			    {'Idris.Prelude.Right', E2557} ->
																				fun (V1495) ->
																					begin
																					  V1497 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1496) -> 'un--nfToCFType'(V0, V1443, V2, V1496) end, V1495))(V1448),
																					  case V1497 of
																					    {'Idris.Prelude.Left', E2558} -> fun (V1498) -> {'Idris.Prelude.Left', V1498} end(E2558);
																					    {'Idris.Prelude.Right', E2559} -> fun (V1499) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1486, V1499}} end(E2559);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2557);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2554, E2555);
																	    {'Idris.Compiler.CompileExpr.Struct', E2560, E2561} ->
																		fun (V1500, V1501) ->
																			begin
																			  V1512 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V1502) ->
																									    case V1502 of
																									      {'Idris.Builtin.MkPair', E2562, E2563} ->
																										  fun (V1503, V1504) ->
																											  fun (V1505) ->
																												  begin
																												    V1506 = ('Idris.Core.Normalise':'un--evalClosure'([], V1479, V1504))(V1505),
																												    case V1506 of
																												      {'Idris.Prelude.Left', E2564} -> fun (V1507) -> {'Idris.Prelude.Left', V1507} end(E2564);
																												      {'Idris.Prelude.Right', E2565} ->
																													  fun (V1508) ->
																														  begin
																														    V1509 = ('un--nfToCFType'(V0, V1443, 0, V1508))(V1505),
																														    case V1509 of
																														      {'Idris.Prelude.Left', E2566} -> fun (V1510) -> {'Idris.Prelude.Left', V1510} end(E2566);
																														      {'Idris.Prelude.Right', E2567} -> fun (V1511) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1503, V1511}} end(E2567);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E2565);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E2562, E2563);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V1501))(V1448),
																			  case V1512 of
																			    {'Idris.Prelude.Left', E2568} -> fun (V1513) -> {'Idris.Prelude.Left', V1513} end(E2568);
																			    {'Idris.Prelude.Right', E2569} -> fun (V1514) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1500, V1514}} end(E2569);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2560, E2561);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E2570} ->
																		fun (V1515) ->
																			begin
																			  V1516 = ('Idris.Core.Normalise':'un--evalClosure'([], V1479, V1515))(V1448),
																			  case V1516 of
																			    {'Idris.Prelude.Left', E2571} -> fun (V1517) -> {'Idris.Prelude.Left', V1517} end(E2571);
																			    {'Idris.Prelude.Right', E2572} ->
																				fun (V1518) ->
																					begin
																					  V1519 = ('un--nfToCFType'(V0, V1443, V2, V1518))(V1448),
																					  case V1519 of
																					    {'Idris.Prelude.Left', E2573} -> fun (V1520) -> {'Idris.Prelude.Left', V1520} end(E2573);
																					    {'Idris.Prelude.Right', E2574} -> fun (V1521) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1521}} end(E2574);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2572);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2570);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E2553);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2551);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2549);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E2543, E2544, E2545, E2546, E2547);
								      {'Idris.Core.Value.NType', E2575} -> fun (V1522) -> fun (V1523) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2575);
								      {'Idris.Core.Value.NErased', E2576, E2577} -> fun (V1524, V1525) -> fun (V1526) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2576, E2577);
								      _ ->
									  fun (V1527) ->
										  begin
										    V1556 = begin V1555 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1528) -> fun (V1529) -> fun (V1530) -> fun (V1531) -> fun (V1532) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1530, V1531, V1532) end end end end end, fun (V1533) -> fun (V1534) -> fun (V1535) -> V1534 end end end, fun (V1536) -> fun (V1537) -> fun (V1538) -> fun (V1539) -> fun (V1540) -> begin V1541 = V1538(V1540), begin V1542 = V1539(V1540), V1541(V1542) end end end end end end end}, fun (V1543) -> fun (V1544) -> fun (V1545) -> fun (V1546) -> fun (V1547) -> begin V1548 = V1545(V1547), (V1546(V1548))(V1547) end end end end end end, fun (V1549) -> fun (V1550) -> fun (V1551) -> begin V1552 = V1550(V1551), V1552(V1551) end end end end}, fun (V1553) -> fun (V1554) -> V1554 end end}, V0))(V1527), {'Idris.Prelude.Right', V1555} end,
										    case V1556 of
										      {'Idris.Prelude.Left', E2537} -> fun (V1557) -> {'Idris.Prelude.Left', V1557} end(E2537);
										      {'Idris.Prelude.Right', E2538} ->
											  fun (V1558) ->
												  begin
												    V1559 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1558, {'Idris.Core.Env.Nil'}, V3, V1527),
												    case V1559 of
												      {'Idris.Prelude.Left', E2539} -> fun (V1560) -> {'Idris.Prelude.Left', V1560} end(E2539);
												      {'Idris.Prelude.Right', E2540} ->
													  fun (V1561) ->
														  begin
														    V1566 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1562) -> fun (V1563) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1562, V1563) end end, fun (V1564) -> fun (V1565) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1564, V1565) end end}, V1561, V1527),
														    case V1566 of
														      {'Idris.Prelude.Left', E2541} -> fun (V1567) -> {'Idris.Prelude.Left', V1567} end(E2541);
														      {'Idris.Prelude.Right', E2542} -> fun (V1568) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1568))}, V1527) end(E2542);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2540);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E2538);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E2405, E2406, E2407, E2408, E2409} ->
								    fun (V1569, V1570, V1571, V1572, V1573) ->
									    fun (V1574) ->
										    begin
										      V1603 = begin V1602 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1575) -> fun (V1576) -> fun (V1577) -> fun (V1578) -> fun (V1579) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1577, V1578, V1579) end end end end end, fun (V1580) -> fun (V1581) -> fun (V1582) -> V1581 end end end, fun (V1583) -> fun (V1584) -> fun (V1585) -> fun (V1586) -> fun (V1587) -> begin V1588 = V1585(V1587), begin V1589 = V1586(V1587), V1588(V1589) end end end end end end end}, fun (V1590) -> fun (V1591) -> fun (V1592) -> fun (V1593) -> fun (V1594) -> begin V1595 = V1592(V1594), (V1593(V1595))(V1594) end end end end end end, fun (V1596) -> fun (V1597) -> fun (V1598) -> begin V1599 = V1597(V1598), V1599(V1598) end end end end}, fun (V1600) -> fun (V1601) -> V1601 end end}, V0))(V1574), {'Idris.Prelude.Right', V1602} end,
										      case V1603 of
											{'Idris.Prelude.Left', E2410} -> fun (V1604) -> {'Idris.Prelude.Left', V1604} end(E2410);
											{'Idris.Prelude.Right', E2411} ->
											    fun (V1605) ->
												    begin
												      V1610 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1606) -> fun (V1607) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1606, V1607) end end, fun (V1608) -> fun (V1609) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1608, V1609) end end}, V1570, V1574),
												      case V1610 of
													{'Idris.Prelude.Left', E2412} -> fun (V1611) -> {'Idris.Prelude.Left', V1611} end(E2412);
													{'Idris.Prelude.Right', E2413} ->
													    fun (V1612) ->
														    begin
														      V1613 = ('un--getNArgs'(V1605, V1612, V1573))(V1574),
														      case V1613 of
															{'Idris.Prelude.Left', E2414} -> fun (V1614) -> {'Idris.Prelude.Left', V1614} end(E2414);
															{'Idris.Prelude.Right', E2415} ->
															    fun (V1615) ->
																    case V1615 of
																      {'Idris.Compiler.CompileExpr.User', E2416, E2417} ->
																	  fun (V1616, V1617) ->
																		  begin
																		    V1619 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1618) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1605, V1618) end, V1617))(V1574),
																		    case V1619 of
																		      {'Idris.Prelude.Left', E2418} -> fun (V1620) -> {'Idris.Prelude.Left', V1620} end(E2418);
																		      {'Idris.Prelude.Right', E2419} ->
																			  fun (V1621) ->
																				  begin
																				    V1623 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1622) -> 'un--nfToCFType'(V0, V1569, V2, V1622) end, V1621))(V1574),
																				    case V1623 of
																				      {'Idris.Prelude.Left', E2420} -> fun (V1624) -> {'Idris.Prelude.Left', V1624} end(E2420);
																				      {'Idris.Prelude.Right', E2421} -> fun (V1625) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1612, V1625}} end(E2421);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2419);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2416, E2417);
																      {'Idris.Compiler.CompileExpr.Struct', E2422, E2423} ->
																	  fun (V1626, V1627) ->
																		  begin
																		    V1638 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V1628) ->
																								      case V1628 of
																									{'Idris.Builtin.MkPair', E2424, E2425} ->
																									    fun (V1629, V1630) ->
																										    fun (V1631) ->
																											    begin
																											      V1632 = ('Idris.Core.Normalise':'un--evalClosure'([], V1605, V1630))(V1631),
																											      case V1632 of
																												{'Idris.Prelude.Left', E2426} -> fun (V1633) -> {'Idris.Prelude.Left', V1633} end(E2426);
																												{'Idris.Prelude.Right', E2427} ->
																												    fun (V1634) ->
																													    begin
																													      V1635 = ('un--nfToCFType'(V0, V1569, 0, V1634))(V1631),
																													      case V1635 of
																														{'Idris.Prelude.Left', E2428} -> fun (V1636) -> {'Idris.Prelude.Left', V1636} end(E2428);
																														{'Idris.Prelude.Right', E2429} -> fun (V1637) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1629, V1637}} end(E2429);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E2427);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E2424, E2425);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V1627))(V1574),
																		    case V1638 of
																		      {'Idris.Prelude.Left', E2430} -> fun (V1639) -> {'Idris.Prelude.Left', V1639} end(E2430);
																		      {'Idris.Prelude.Right', E2431} -> fun (V1640) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1626, V1640}} end(E2431);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2422, E2423);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E2432} ->
																	  fun (V1641) ->
																		  begin
																		    V1642 = ('Idris.Core.Normalise':'un--evalClosure'([], V1605, V1641))(V1574),
																		    case V1642 of
																		      {'Idris.Prelude.Left', E2433} -> fun (V1643) -> {'Idris.Prelude.Left', V1643} end(E2433);
																		      {'Idris.Prelude.Right', E2434} ->
																			  fun (V1644) ->
																				  begin
																				    V1645 = ('un--nfToCFType'(V0, V1569, V2, V1644))(V1574),
																				    case V1645 of
																				      {'Idris.Prelude.Left', E2435} -> fun (V1646) -> {'Idris.Prelude.Left', V1646} end(E2435);
																				      {'Idris.Prelude.Right', E2436} -> fun (V1647) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1647}} end(E2436);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2434);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2432);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E2415);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E2413);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2411);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E2405, E2406, E2407, E2408, E2409);
								{'Idris.Core.Value.NType', E2437} -> fun (V1648) -> fun (V1649) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2437);
								{'Idris.Core.Value.NErased', E2438, E2439} -> fun (V1650, V1651) -> fun (V1652) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2438, E2439);
								_ ->
								    fun (V1653) ->
									    begin
									      V1682 = begin V1681 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1654) -> fun (V1655) -> fun (V1656) -> fun (V1657) -> fun (V1658) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1656, V1657, V1658) end end end end end, fun (V1659) -> fun (V1660) -> fun (V1661) -> V1660 end end end, fun (V1662) -> fun (V1663) -> fun (V1664) -> fun (V1665) -> fun (V1666) -> begin V1667 = V1664(V1666), begin V1668 = V1665(V1666), V1667(V1668) end end end end end end end}, fun (V1669) -> fun (V1670) -> fun (V1671) -> fun (V1672) -> fun (V1673) -> begin V1674 = V1671(V1673), (V1672(V1674))(V1673) end end end end end end, fun (V1675) -> fun (V1676) -> fun (V1677) -> begin V1678 = V1676(V1677), V1678(V1677) end end end end}, fun (V1679) -> fun (V1680) -> V1680 end end}, V0))(V1653), {'Idris.Prelude.Right', V1681} end,
									      case V1682 of
										{'Idris.Prelude.Left', E2399} -> fun (V1683) -> {'Idris.Prelude.Left', V1683} end(E2399);
										{'Idris.Prelude.Right', E2400} ->
										    fun (V1684) ->
											    begin
											      V1685 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1684, {'Idris.Core.Env.Nil'}, V3, V1653),
											      case V1685 of
												{'Idris.Prelude.Left', E2401} -> fun (V1686) -> {'Idris.Prelude.Left', V1686} end(E2401);
												{'Idris.Prelude.Right', E2402} ->
												    fun (V1687) ->
													    begin
													      V1692 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1688) -> fun (V1689) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1688, V1689) end end, fun (V1690) -> fun (V1691) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1690, V1691) end end}, V1687, V1653),
													      case V1692 of
														{'Idris.Prelude.Left', E2403} -> fun (V1693) -> {'Idris.Prelude.Left', V1693} end(E2403);
														{'Idris.Prelude.Right', E2404} -> fun (V1694) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1694))}, V1653) end(E2404);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2402);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2400);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					  end(E2397, E2398);
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E2296, E2297, E2298, E2299} ->
						      fun (V1695, V1696, V1697, V1698) ->
							      case V1697 of
								{'Idris.Core.TT.Pi', E2341, E2342, E2343} ->
								    fun (V1699, V1700, V1701) ->
									    fun (V1702) ->
										    begin
										      V1731 = begin V1730 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1703) -> fun (V1704) -> fun (V1705) -> fun (V1706) -> fun (V1707) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1705, V1706, V1707) end end end end end, fun (V1708) -> fun (V1709) -> fun (V1710) -> V1709 end end end, fun (V1711) -> fun (V1712) -> fun (V1713) -> fun (V1714) -> fun (V1715) -> begin V1716 = V1713(V1715), begin V1717 = V1714(V1715), V1716(V1717) end end end end end end end}, fun (V1718) -> fun (V1719) -> fun (V1720) -> fun (V1721) -> fun (V1722) -> begin V1723 = V1720(V1722), (V1721(V1723))(V1722) end end end end end end, fun (V1724) -> fun (V1725) -> fun (V1726) -> begin V1727 = V1725(V1726), V1727(V1726) end end end end}, fun (V1728) -> fun (V1729) -> V1729 end end}, V0))(V1702), {'Idris.Prelude.Right', V1730} end,
										      case V1731 of
											{'Idris.Prelude.Left', E2344} -> fun (V1732) -> {'Idris.Prelude.Left', V1732} end(E2344);
											{'Idris.Prelude.Right', E2345} ->
											    fun (V1733) ->
												    begin
												      V1734 = ('un--nfToCFType'(V0, V1695, 1, V1701))(V1702),
												      case V1734 of
													{'Idris.Prelude.Left', E2346} -> fun (V1735) -> {'Idris.Prelude.Left', V1735} end(E2346);
													{'Idris.Prelude.Right', E2347} ->
													    fun (V1736) ->
														    begin
														      V1737 = ((V1698(V1733))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1695, 1})))(V1702),
														      case V1737 of
															{'Idris.Prelude.Left', E2348} -> fun (V1738) -> {'Idris.Prelude.Left', V1738} end(E2348);
															{'Idris.Prelude.Right', E2349} ->
															    fun (V1739) ->
																    begin
																      V1740 = ('un--nfToCFType'(V0, V1695, 1, V1739))(V1702),
																      case V1740 of
																	{'Idris.Prelude.Left', E2350} -> fun (V1741) -> {'Idris.Prelude.Left', V1741} end(E2350);
																	{'Idris.Prelude.Right', E2351} -> fun (V1742) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V1736, V1742}} end(E2351);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2349);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E2347);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2345);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E2341, E2342, E2343);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E2306, E2307, E2308, E2309, E2310} ->
									  fun (V1743, V1744, V1745, V1746, V1747) ->
										  fun (V1748) ->
											  begin
											    V1777 = begin V1776 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1749) -> fun (V1750) -> fun (V1751) -> fun (V1752) -> fun (V1753) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1751, V1752, V1753) end end end end end, fun (V1754) -> fun (V1755) -> fun (V1756) -> V1755 end end end, fun (V1757) -> fun (V1758) -> fun (V1759) -> fun (V1760) -> fun (V1761) -> begin V1762 = V1759(V1761), begin V1763 = V1760(V1761), V1762(V1763) end end end end end end end}, fun (V1764) -> fun (V1765) -> fun (V1766) -> fun (V1767) -> fun (V1768) -> begin V1769 = V1766(V1768), (V1767(V1769))(V1768) end end end end end end, fun (V1770) -> fun (V1771) -> fun (V1772) -> begin V1773 = V1771(V1772), V1773(V1772) end end end end}, fun (V1774) -> fun (V1775) -> V1775 end end}, V0))(V1748), {'Idris.Prelude.Right', V1776} end,
											    case V1777 of
											      {'Idris.Prelude.Left', E2311} -> fun (V1778) -> {'Idris.Prelude.Left', V1778} end(E2311);
											      {'Idris.Prelude.Right', E2312} ->
												  fun (V1779) ->
													  begin
													    V1784 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1780) -> fun (V1781) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1780, V1781) end end, fun (V1782) -> fun (V1783) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1782, V1783) end end}, V1744, V1748),
													    case V1784 of
													      {'Idris.Prelude.Left', E2313} -> fun (V1785) -> {'Idris.Prelude.Left', V1785} end(E2313);
													      {'Idris.Prelude.Right', E2314} ->
														  fun (V1786) ->
															  begin
															    V1787 = ('un--getNArgs'(V1779, V1786, V1747))(V1748),
															    case V1787 of
															      {'Idris.Prelude.Left', E2315} -> fun (V1788) -> {'Idris.Prelude.Left', V1788} end(E2315);
															      {'Idris.Prelude.Right', E2316} ->
																  fun (V1789) ->
																	  case V1789 of
																	    {'Idris.Compiler.CompileExpr.User', E2317, E2318} ->
																		fun (V1790, V1791) ->
																			begin
																			  V1793 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1792) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1779, V1792) end, V1791))(V1748),
																			  case V1793 of
																			    {'Idris.Prelude.Left', E2319} -> fun (V1794) -> {'Idris.Prelude.Left', V1794} end(E2319);
																			    {'Idris.Prelude.Right', E2320} ->
																				fun (V1795) ->
																					begin
																					  V1797 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1796) -> 'un--nfToCFType'(V0, V1743, V2, V1796) end, V1795))(V1748),
																					  case V1797 of
																					    {'Idris.Prelude.Left', E2321} -> fun (V1798) -> {'Idris.Prelude.Left', V1798} end(E2321);
																					    {'Idris.Prelude.Right', E2322} -> fun (V1799) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1786, V1799}} end(E2322);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2320);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2317, E2318);
																	    {'Idris.Compiler.CompileExpr.Struct', E2323, E2324} ->
																		fun (V1800, V1801) ->
																			begin
																			  V1812 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V1802) ->
																									    case V1802 of
																									      {'Idris.Builtin.MkPair', E2325, E2326} ->
																										  fun (V1803, V1804) ->
																											  fun (V1805) ->
																												  begin
																												    V1806 = ('Idris.Core.Normalise':'un--evalClosure'([], V1779, V1804))(V1805),
																												    case V1806 of
																												      {'Idris.Prelude.Left', E2327} -> fun (V1807) -> {'Idris.Prelude.Left', V1807} end(E2327);
																												      {'Idris.Prelude.Right', E2328} ->
																													  fun (V1808) ->
																														  begin
																														    V1809 = ('un--nfToCFType'(V0, V1743, 0, V1808))(V1805),
																														    case V1809 of
																														      {'Idris.Prelude.Left', E2329} -> fun (V1810) -> {'Idris.Prelude.Left', V1810} end(E2329);
																														      {'Idris.Prelude.Right', E2330} -> fun (V1811) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1803, V1811}} end(E2330);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E2328);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E2325, E2326);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V1801))(V1748),
																			  case V1812 of
																			    {'Idris.Prelude.Left', E2331} -> fun (V1813) -> {'Idris.Prelude.Left', V1813} end(E2331);
																			    {'Idris.Prelude.Right', E2332} -> fun (V1814) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1800, V1814}} end(E2332);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2323, E2324);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E2333} ->
																		fun (V1815) ->
																			begin
																			  V1816 = ('Idris.Core.Normalise':'un--evalClosure'([], V1779, V1815))(V1748),
																			  case V1816 of
																			    {'Idris.Prelude.Left', E2334} -> fun (V1817) -> {'Idris.Prelude.Left', V1817} end(E2334);
																			    {'Idris.Prelude.Right', E2335} ->
																				fun (V1818) ->
																					begin
																					  V1819 = ('un--nfToCFType'(V0, V1743, V2, V1818))(V1748),
																					  case V1819 of
																					    {'Idris.Prelude.Left', E2336} -> fun (V1820) -> {'Idris.Prelude.Left', V1820} end(E2336);
																					    {'Idris.Prelude.Right', E2337} -> fun (V1821) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1821}} end(E2337);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E2335);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E2333);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E2316);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2314);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2312);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E2306, E2307, E2308, E2309, E2310);
								      {'Idris.Core.Value.NType', E2338} -> fun (V1822) -> fun (V1823) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2338);
								      {'Idris.Core.Value.NErased', E2339, E2340} -> fun (V1824, V1825) -> fun (V1826) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2339, E2340);
								      _ ->
									  fun (V1827) ->
										  begin
										    V1856 = begin V1855 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1828) -> fun (V1829) -> fun (V1830) -> fun (V1831) -> fun (V1832) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1830, V1831, V1832) end end end end end, fun (V1833) -> fun (V1834) -> fun (V1835) -> V1834 end end end, fun (V1836) -> fun (V1837) -> fun (V1838) -> fun (V1839) -> fun (V1840) -> begin V1841 = V1838(V1840), begin V1842 = V1839(V1840), V1841(V1842) end end end end end end end}, fun (V1843) -> fun (V1844) -> fun (V1845) -> fun (V1846) -> fun (V1847) -> begin V1848 = V1845(V1847), (V1846(V1848))(V1847) end end end end end end, fun (V1849) -> fun (V1850) -> fun (V1851) -> begin V1852 = V1850(V1851), V1852(V1851) end end end end}, fun (V1853) -> fun (V1854) -> V1854 end end}, V0))(V1827), {'Idris.Prelude.Right', V1855} end,
										    case V1856 of
										      {'Idris.Prelude.Left', E2300} -> fun (V1857) -> {'Idris.Prelude.Left', V1857} end(E2300);
										      {'Idris.Prelude.Right', E2301} ->
											  fun (V1858) ->
												  begin
												    V1859 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1858, {'Idris.Core.Env.Nil'}, V3, V1827),
												    case V1859 of
												      {'Idris.Prelude.Left', E2302} -> fun (V1860) -> {'Idris.Prelude.Left', V1860} end(E2302);
												      {'Idris.Prelude.Right', E2303} ->
													  fun (V1861) ->
														  begin
														    V1866 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1862) -> fun (V1863) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1862, V1863) end end, fun (V1864) -> fun (V1865) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1864, V1865) end end}, V1861, V1827),
														    case V1866 of
														      {'Idris.Prelude.Left', E2304} -> fun (V1867) -> {'Idris.Prelude.Left', V1867} end(E2304);
														      {'Idris.Prelude.Right', E2305} -> fun (V1868) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1868))}, V1827) end(E2305);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2303);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E2301);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E2296, E2297, E2298, E2299);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E2261, E2262, E2263, E2264, E2265} ->
							    fun (V1869, V1870, V1871, V1872, V1873) ->
								    fun (V1874) ->
									    begin
									      V1903 = begin V1902 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1875) -> fun (V1876) -> fun (V1877) -> fun (V1878) -> fun (V1879) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1877, V1878, V1879) end end end end end, fun (V1880) -> fun (V1881) -> fun (V1882) -> V1881 end end end, fun (V1883) -> fun (V1884) -> fun (V1885) -> fun (V1886) -> fun (V1887) -> begin V1888 = V1885(V1887), begin V1889 = V1886(V1887), V1888(V1889) end end end end end end end}, fun (V1890) -> fun (V1891) -> fun (V1892) -> fun (V1893) -> fun (V1894) -> begin V1895 = V1892(V1894), (V1893(V1895))(V1894) end end end end end end, fun (V1896) -> fun (V1897) -> fun (V1898) -> begin V1899 = V1897(V1898), V1899(V1898) end end end end}, fun (V1900) -> fun (V1901) -> V1901 end end}, V0))(V1874), {'Idris.Prelude.Right', V1902} end,
									      case V1903 of
										{'Idris.Prelude.Left', E2266} -> fun (V1904) -> {'Idris.Prelude.Left', V1904} end(E2266);
										{'Idris.Prelude.Right', E2267} ->
										    fun (V1905) ->
											    begin
											      V1910 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1906) -> fun (V1907) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V1906, V1907) end end, fun (V1908) -> fun (V1909) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V1908, V1909) end end}, V1870, V1874),
											      case V1910 of
												{'Idris.Prelude.Left', E2268} -> fun (V1911) -> {'Idris.Prelude.Left', V1911} end(E2268);
												{'Idris.Prelude.Right', E2269} ->
												    fun (V1912) ->
													    begin
													      V1913 = ('un--getNArgs'(V1905, V1912, V1873))(V1874),
													      case V1913 of
														{'Idris.Prelude.Left', E2270} -> fun (V1914) -> {'Idris.Prelude.Left', V1914} end(E2270);
														{'Idris.Prelude.Right', E2271} ->
														    fun (V1915) ->
															    case V1915 of
															      {'Idris.Compiler.CompileExpr.User', E2272, E2273} ->
																  fun (V1916, V1917) ->
																	  begin
																	    V1919 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1918) -> 'Idris.Core.Normalise':'un--evalClosure'([], V1905, V1918) end, V1917))(V1874),
																	    case V1919 of
																	      {'Idris.Prelude.Left', E2274} -> fun (V1920) -> {'Idris.Prelude.Left', V1920} end(E2274);
																	      {'Idris.Prelude.Right', E2275} ->
																		  fun (V1921) ->
																			  begin
																			    V1923 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V1922) -> 'un--nfToCFType'(V0, V1869, V2, V1922) end, V1921))(V1874),
																			    case V1923 of
																			      {'Idris.Prelude.Left', E2276} -> fun (V1924) -> {'Idris.Prelude.Left', V1924} end(E2276);
																			      {'Idris.Prelude.Right', E2277} -> fun (V1925) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V1912, V1925}} end(E2277);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E2275);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2272, E2273);
															      {'Idris.Compiler.CompileExpr.Struct', E2278, E2279} ->
																  fun (V1926, V1927) ->
																	  begin
																	    V1938 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V1928) ->
																							      case V1928 of
																								{'Idris.Builtin.MkPair', E2280, E2281} ->
																								    fun (V1929, V1930) ->
																									    fun (V1931) ->
																										    begin
																										      V1932 = ('Idris.Core.Normalise':'un--evalClosure'([], V1905, V1930))(V1931),
																										      case V1932 of
																											{'Idris.Prelude.Left', E2282} -> fun (V1933) -> {'Idris.Prelude.Left', V1933} end(E2282);
																											{'Idris.Prelude.Right', E2283} ->
																											    fun (V1934) ->
																												    begin
																												      V1935 = ('un--nfToCFType'(V0, V1869, 0, V1934))(V1931),
																												      case V1935 of
																													{'Idris.Prelude.Left', E2284} -> fun (V1936) -> {'Idris.Prelude.Left', V1936} end(E2284);
																													{'Idris.Prelude.Right', E2285} -> fun (V1937) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V1929, V1937}} end(E2285);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E2283);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E2280, E2281);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V1927))(V1874),
																	    case V1938 of
																	      {'Idris.Prelude.Left', E2286} -> fun (V1939) -> {'Idris.Prelude.Left', V1939} end(E2286);
																	      {'Idris.Prelude.Right', E2287} -> fun (V1940) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V1926, V1940}} end(E2287);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2278, E2279);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E2288} ->
																  fun (V1941) ->
																	  begin
																	    V1942 = ('Idris.Core.Normalise':'un--evalClosure'([], V1905, V1941))(V1874),
																	    case V1942 of
																	      {'Idris.Prelude.Left', E2289} -> fun (V1943) -> {'Idris.Prelude.Left', V1943} end(E2289);
																	      {'Idris.Prelude.Right', E2290} ->
																		  fun (V1944) ->
																			  begin
																			    V1945 = ('un--nfToCFType'(V0, V1869, V2, V1944))(V1874),
																			    case V1945 of
																			      {'Idris.Prelude.Left', E2291} -> fun (V1946) -> {'Idris.Prelude.Left', V1946} end(E2291);
																			      {'Idris.Prelude.Right', E2292} -> fun (V1947) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V1947}} end(E2292);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E2290);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2288);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E2271);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2269);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2267);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E2261, E2262, E2263, E2264, E2265);
							{'Idris.Core.Value.NType', E2293} -> fun (V1948) -> fun (V1949) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2293);
							{'Idris.Core.Value.NErased', E2294, E2295} -> fun (V1950, V1951) -> fun (V1952) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2294, E2295);
							_ ->
							    fun (V1953) ->
								    begin
								      V1982 = begin V1981 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V1954) -> fun (V1955) -> fun (V1956) -> fun (V1957) -> fun (V1958) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V1956, V1957, V1958) end end end end end, fun (V1959) -> fun (V1960) -> fun (V1961) -> V1960 end end end, fun (V1962) -> fun (V1963) -> fun (V1964) -> fun (V1965) -> fun (V1966) -> begin V1967 = V1964(V1966), begin V1968 = V1965(V1966), V1967(V1968) end end end end end end end}, fun (V1969) -> fun (V1970) -> fun (V1971) -> fun (V1972) -> fun (V1973) -> begin V1974 = V1971(V1973), (V1972(V1974))(V1973) end end end end end end, fun (V1975) -> fun (V1976) -> fun (V1977) -> begin V1978 = V1976(V1977), V1978(V1977) end end end end}, fun (V1979) -> fun (V1980) -> V1980 end end}, V0))(V1953), {'Idris.Prelude.Right', V1981} end,
								      case V1982 of
									{'Idris.Prelude.Left', E2255} -> fun (V1983) -> {'Idris.Prelude.Left', V1983} end(E2255);
									{'Idris.Prelude.Right', E2256} ->
									    fun (V1984) ->
										    begin
										      V1985 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V1984, {'Idris.Core.Env.Nil'}, V3, V1953),
										      case V1985 of
											{'Idris.Prelude.Left', E2257} -> fun (V1986) -> {'Idris.Prelude.Left', V1986} end(E2257);
											{'Idris.Prelude.Right', E2258} ->
											    fun (V1987) ->
												    begin
												      V1992 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1988) -> fun (V1989) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V1988, V1989) end end, fun (V1990) -> fun (V1991) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V1990, V1991) end end}, V1987, V1953),
												      case V1992 of
													{'Idris.Prelude.Left', E2259} -> fun (V1993) -> {'Idris.Prelude.Left', V1993} end(E2259);
													{'Idris.Prelude.Right', E2260} -> fun (V1994) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V1994))}, V1953) end(E2260);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2258);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E2256);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E2393, E2394, E2395, E2396} -> fun (V1995, V1996, V1997, V1998) -> fun (V1999) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V1995, <<"Function types not allowed in a foreign struct"/utf8>>}, V1999) end end(E2393, E2394, E2395, E2396);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E2358, E2359, E2360, E2361, E2362} ->
							    fun (V2000, V2001, V2002, V2003, V2004) ->
								    fun (V2005) ->
									    begin
									      V2034 = begin V2033 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2006) -> fun (V2007) -> fun (V2008) -> fun (V2009) -> fun (V2010) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2008, V2009, V2010) end end end end end, fun (V2011) -> fun (V2012) -> fun (V2013) -> V2012 end end end, fun (V2014) -> fun (V2015) -> fun (V2016) -> fun (V2017) -> fun (V2018) -> begin V2019 = V2016(V2018), begin V2020 = V2017(V2018), V2019(V2020) end end end end end end end}, fun (V2021) -> fun (V2022) -> fun (V2023) -> fun (V2024) -> fun (V2025) -> begin V2026 = V2023(V2025), (V2024(V2026))(V2025) end end end end end end, fun (V2027) -> fun (V2028) -> fun (V2029) -> begin V2030 = V2028(V2029), V2030(V2029) end end end end}, fun (V2031) -> fun (V2032) -> V2032 end end}, V0))(V2005), {'Idris.Prelude.Right', V2033} end,
									      case V2034 of
										{'Idris.Prelude.Left', E2363} -> fun (V2035) -> {'Idris.Prelude.Left', V2035} end(E2363);
										{'Idris.Prelude.Right', E2364} ->
										    fun (V2036) ->
											    begin
											      V2041 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2037) -> fun (V2038) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2037, V2038) end end, fun (V2039) -> fun (V2040) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2039, V2040) end end}, V2001, V2005),
											      case V2041 of
												{'Idris.Prelude.Left', E2365} -> fun (V2042) -> {'Idris.Prelude.Left', V2042} end(E2365);
												{'Idris.Prelude.Right', E2366} ->
												    fun (V2043) ->
													    begin
													      V2044 = ('un--getNArgs'(V2036, V2043, V2004))(V2005),
													      case V2044 of
														{'Idris.Prelude.Left', E2367} -> fun (V2045) -> {'Idris.Prelude.Left', V2045} end(E2367);
														{'Idris.Prelude.Right', E2368} ->
														    fun (V2046) ->
															    case V2046 of
															      {'Idris.Compiler.CompileExpr.User', E2369, E2370} ->
																  fun (V2047, V2048) ->
																	  begin
																	    V2050 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2049) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2036, V2049) end, V2048))(V2005),
																	    case V2050 of
																	      {'Idris.Prelude.Left', E2371} -> fun (V2051) -> {'Idris.Prelude.Left', V2051} end(E2371);
																	      {'Idris.Prelude.Right', E2372} ->
																		  fun (V2052) ->
																			  begin
																			    V2054 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2053) -> 'un--nfToCFType'(V0, V2000, V2, V2053) end, V2052))(V2005),
																			    case V2054 of
																			      {'Idris.Prelude.Left', E2373} -> fun (V2055) -> {'Idris.Prelude.Left', V2055} end(E2373);
																			      {'Idris.Prelude.Right', E2374} -> fun (V2056) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2043, V2056}} end(E2374);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E2372);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2369, E2370);
															      {'Idris.Compiler.CompileExpr.Struct', E2375, E2376} ->
																  fun (V2057, V2058) ->
																	  begin
																	    V2069 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V2059) ->
																							      case V2059 of
																								{'Idris.Builtin.MkPair', E2377, E2378} ->
																								    fun (V2060, V2061) ->
																									    fun (V2062) ->
																										    begin
																										      V2063 = ('Idris.Core.Normalise':'un--evalClosure'([], V2036, V2061))(V2062),
																										      case V2063 of
																											{'Idris.Prelude.Left', E2379} -> fun (V2064) -> {'Idris.Prelude.Left', V2064} end(E2379);
																											{'Idris.Prelude.Right', E2380} ->
																											    fun (V2065) ->
																												    begin
																												      V2066 = ('un--nfToCFType'(V0, V2000, 0, V2065))(V2062),
																												      case V2066 of
																													{'Idris.Prelude.Left', E2381} -> fun (V2067) -> {'Idris.Prelude.Left', V2067} end(E2381);
																													{'Idris.Prelude.Right', E2382} -> fun (V2068) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2060, V2068}} end(E2382);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E2380);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E2377, E2378);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V2058))(V2005),
																	    case V2069 of
																	      {'Idris.Prelude.Left', E2383} -> fun (V2070) -> {'Idris.Prelude.Left', V2070} end(E2383);
																	      {'Idris.Prelude.Right', E2384} -> fun (V2071) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2057, V2071}} end(E2384);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2375, E2376);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E2385} ->
																  fun (V2072) ->
																	  begin
																	    V2073 = ('Idris.Core.Normalise':'un--evalClosure'([], V2036, V2072))(V2005),
																	    case V2073 of
																	      {'Idris.Prelude.Left', E2386} -> fun (V2074) -> {'Idris.Prelude.Left', V2074} end(E2386);
																	      {'Idris.Prelude.Right', E2387} ->
																		  fun (V2075) ->
																			  begin
																			    V2076 = ('un--nfToCFType'(V0, V2000, V2, V2075))(V2005),
																			    case V2076 of
																			      {'Idris.Prelude.Left', E2388} -> fun (V2077) -> {'Idris.Prelude.Left', V2077} end(E2388);
																			      {'Idris.Prelude.Right', E2389} -> fun (V2078) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2078}} end(E2389);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E2387);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E2385);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E2368);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2366);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2364);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E2358, E2359, E2360, E2361, E2362);
							{'Idris.Core.Value.NType', E2390} -> fun (V2079) -> fun (V2080) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2390);
							{'Idris.Core.Value.NErased', E2391, E2392} -> fun (V2081, V2082) -> fun (V2083) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2391, E2392);
							_ ->
							    fun (V2084) ->
								    begin
								      V2113 = begin V2112 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2085) -> fun (V2086) -> fun (V2087) -> fun (V2088) -> fun (V2089) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2087, V2088, V2089) end end end end end, fun (V2090) -> fun (V2091) -> fun (V2092) -> V2091 end end end, fun (V2093) -> fun (V2094) -> fun (V2095) -> fun (V2096) -> fun (V2097) -> begin V2098 = V2095(V2097), begin V2099 = V2096(V2097), V2098(V2099) end end end end end end end}, fun (V2100) -> fun (V2101) -> fun (V2102) -> fun (V2103) -> fun (V2104) -> begin V2105 = V2102(V2104), (V2103(V2105))(V2104) end end end end end end, fun (V2106) -> fun (V2107) -> fun (V2108) -> begin V2109 = V2107(V2108), V2109(V2108) end end end end}, fun (V2110) -> fun (V2111) -> V2111 end end}, V0))(V2084), {'Idris.Prelude.Right', V2112} end,
								      case V2113 of
									{'Idris.Prelude.Left', E2352} -> fun (V2114) -> {'Idris.Prelude.Left', V2114} end(E2352);
									{'Idris.Prelude.Right', E2353} ->
									    fun (V2115) ->
										    begin
										      V2116 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2115, {'Idris.Core.Env.Nil'}, V3, V2084),
										      case V2116 of
											{'Idris.Prelude.Left', E2354} -> fun (V2117) -> {'Idris.Prelude.Left', V2117} end(E2354);
											{'Idris.Prelude.Right', E2355} ->
											    fun (V2118) ->
												    begin
												      V2123 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2119) -> fun (V2120) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2119, V2120) end end, fun (V2121) -> fun (V2122) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2121, V2122) end end}, V2118, V2084),
												      case V2123 of
													{'Idris.Prelude.Left', E2356} -> fun (V2124) -> {'Idris.Prelude.Left', V2124} end(E2356);
													{'Idris.Prelude.Right', E2357} -> fun (V2125) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2125))}, V2084) end(E2357);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2355);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E2353);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E2220, E2221, E2222, E2223, E2224} ->
						      fun (V2126, V2127, V2128, V2129, V2130) ->
							      fun (V2131) ->
								      begin
									V2160 = begin V2159 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2132) -> fun (V2133) -> fun (V2134) -> fun (V2135) -> fun (V2136) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2134, V2135, V2136) end end end end end, fun (V2137) -> fun (V2138) -> fun (V2139) -> V2138 end end end, fun (V2140) -> fun (V2141) -> fun (V2142) -> fun (V2143) -> fun (V2144) -> begin V2145 = V2142(V2144), begin V2146 = V2143(V2144), V2145(V2146) end end end end end end end}, fun (V2147) -> fun (V2148) -> fun (V2149) -> fun (V2150) -> fun (V2151) -> begin V2152 = V2149(V2151), (V2150(V2152))(V2151) end end end end end end, fun (V2153) -> fun (V2154) -> fun (V2155) -> begin V2156 = V2154(V2155), V2156(V2155) end end end end}, fun (V2157) -> fun (V2158) -> V2158 end end}, V0))(V2131), {'Idris.Prelude.Right', V2159} end,
									case V2160 of
									  {'Idris.Prelude.Left', E2225} -> fun (V2161) -> {'Idris.Prelude.Left', V2161} end(E2225);
									  {'Idris.Prelude.Right', E2226} ->
									      fun (V2162) ->
										      begin
											V2167 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2163) -> fun (V2164) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2163, V2164) end end, fun (V2165) -> fun (V2166) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2165, V2166) end end}, V2127, V2131),
											case V2167 of
											  {'Idris.Prelude.Left', E2227} -> fun (V2168) -> {'Idris.Prelude.Left', V2168} end(E2227);
											  {'Idris.Prelude.Right', E2228} ->
											      fun (V2169) ->
												      begin
													V2170 = ('un--getNArgs'(V2162, V2169, V2130))(V2131),
													case V2170 of
													  {'Idris.Prelude.Left', E2229} -> fun (V2171) -> {'Idris.Prelude.Left', V2171} end(E2229);
													  {'Idris.Prelude.Right', E2230} ->
													      fun (V2172) ->
														      case V2172 of
															{'Idris.Compiler.CompileExpr.User', E2231, E2232} ->
															    fun (V2173, V2174) ->
																    begin
																      V2176 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2175) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2162, V2175) end, V2174))(V2131),
																      case V2176 of
																	{'Idris.Prelude.Left', E2233} -> fun (V2177) -> {'Idris.Prelude.Left', V2177} end(E2233);
																	{'Idris.Prelude.Right', E2234} ->
																	    fun (V2178) ->
																		    begin
																		      V2180 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2179) -> 'un--nfToCFType'(V0, V2126, V2, V2179) end, V2178))(V2131),
																		      case V2180 of
																			{'Idris.Prelude.Left', E2235} -> fun (V2181) -> {'Idris.Prelude.Left', V2181} end(E2235);
																			{'Idris.Prelude.Right', E2236} -> fun (V2182) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2169, V2182}} end(E2236);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2234);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2231, E2232);
															{'Idris.Compiler.CompileExpr.Struct', E2237, E2238} ->
															    fun (V2183, V2184) ->
																    begin
																      V2195 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V2185) ->
																							case V2185 of
																							  {'Idris.Builtin.MkPair', E2239, E2240} ->
																							      fun (V2186, V2187) ->
																								      fun (V2188) ->
																									      begin
																										V2189 = ('Idris.Core.Normalise':'un--evalClosure'([], V2162, V2187))(V2188),
																										case V2189 of
																										  {'Idris.Prelude.Left', E2241} -> fun (V2190) -> {'Idris.Prelude.Left', V2190} end(E2241);
																										  {'Idris.Prelude.Right', E2242} ->
																										      fun (V2191) ->
																											      begin
																												V2192 = ('un--nfToCFType'(V0, V2126, 0, V2191))(V2188),
																												case V2192 of
																												  {'Idris.Prelude.Left', E2243} -> fun (V2193) -> {'Idris.Prelude.Left', V2193} end(E2243);
																												  {'Idris.Prelude.Right', E2244} -> fun (V2194) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2186, V2194}} end(E2244);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E2242);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E2239, E2240);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V2184))(V2131),
																      case V2195 of
																	{'Idris.Prelude.Left', E2245} -> fun (V2196) -> {'Idris.Prelude.Left', V2196} end(E2245);
																	{'Idris.Prelude.Right', E2246} -> fun (V2197) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2183, V2197}} end(E2246);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2237, E2238);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E2247} ->
															    fun (V2198) ->
																    begin
																      V2199 = ('Idris.Core.Normalise':'un--evalClosure'([], V2162, V2198))(V2131),
																      case V2199 of
																	{'Idris.Prelude.Left', E2248} -> fun (V2200) -> {'Idris.Prelude.Left', V2200} end(E2248);
																	{'Idris.Prelude.Right', E2249} ->
																	    fun (V2201) ->
																		    begin
																		      V2202 = ('un--nfToCFType'(V0, V2126, V2, V2201))(V2131),
																		      case V2202 of
																			{'Idris.Prelude.Left', E2250} -> fun (V2203) -> {'Idris.Prelude.Left', V2203} end(E2250);
																			{'Idris.Prelude.Right', E2251} -> fun (V2204) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2204}} end(E2251);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2249);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2247);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E2230);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E2228);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E2226);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E2220, E2221, E2222, E2223, E2224);
						  {'Idris.Core.Value.NType', E2252} -> fun (V2205) -> fun (V2206) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2252);
						  {'Idris.Core.Value.NErased', E2253, E2254} -> fun (V2207, V2208) -> fun (V2209) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2253, E2254);
						  _ ->
						      fun (V2210) ->
							      begin
								V2239 = begin V2238 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2211) -> fun (V2212) -> fun (V2213) -> fun (V2214) -> fun (V2215) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2213, V2214, V2215) end end end end end, fun (V2216) -> fun (V2217) -> fun (V2218) -> V2217 end end end, fun (V2219) -> fun (V2220) -> fun (V2221) -> fun (V2222) -> fun (V2223) -> begin V2224 = V2221(V2223), begin V2225 = V2222(V2223), V2224(V2225) end end end end end end end}, fun (V2226) -> fun (V2227) -> fun (V2228) -> fun (V2229) -> fun (V2230) -> begin V2231 = V2228(V2230), (V2229(V2231))(V2230) end end end end end end, fun (V2232) -> fun (V2233) -> fun (V2234) -> begin V2235 = V2233(V2234), V2235(V2234) end end end end}, fun (V2236) -> fun (V2237) -> V2237 end end}, V0))(V2210), {'Idris.Prelude.Right', V2238} end,
								case V2239 of
								  {'Idris.Prelude.Left', E2214} -> fun (V2240) -> {'Idris.Prelude.Left', V2240} end(E2214);
								  {'Idris.Prelude.Right', E2215} ->
								      fun (V2241) ->
									      begin
										V2242 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2241, {'Idris.Core.Env.Nil'}, V3, V2210),
										case V2242 of
										  {'Idris.Prelude.Left', E2216} -> fun (V2243) -> {'Idris.Prelude.Left', V2243} end(E2216);
										  {'Idris.Prelude.Right', E2217} ->
										      fun (V2244) ->
											      begin
												V2249 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2245) -> fun (V2246) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2245, V2246) end end, fun (V2247) -> fun (V2248) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2247, V2248) end end}, V2244, V2210),
												case V2249 of
												  {'Idris.Prelude.Left', E2218} -> fun (V2250) -> {'Idris.Prelude.Left', V2250} end(E2218);
												  {'Idris.Prelude.Right', E2219} -> fun (V2251) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2251))}, V2210) end(E2219);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E2217);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E2215);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			      end;
			  0 ->
			      case V3 of
				{'Idris.Core.Value.NPrimVal', E3320, E3321} ->
				    fun (V2252, V2253) ->
					    case V2253 of
					      {'Idris.Core.TT.StringType'} -> fun () -> fun (V2254) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V2254) end end();
					      _ ->
						  case V3 of
						    {'Idris.Core.Value.NPrimVal', E3505, E3506} ->
							fun (V2255, V2256) ->
								case V2256 of
								  {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V2257) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
								  {'Idris.Core.TT.CharType'} -> fun () -> fun (V2258) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
								  {'Idris.Core.TT.WorldType'} -> fun () -> fun (V2259) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
								  _ ->
								      case V2 of
									1 ->
									    case V3 of
									      {'Idris.Core.Value.NBind', E3589, E3590, E3591, E3592} ->
										  fun (V2260, V2261, V2262, V2263) ->
											  case V2262 of
											    {'Idris.Core.TT.Pi', E3634, E3635, E3636} ->
												fun (V2264, V2265, V2266) ->
													fun (V2267) ->
														begin
														  V2296 = begin V2295 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2268) -> fun (V2269) -> fun (V2270) -> fun (V2271) -> fun (V2272) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2270, V2271, V2272) end end end end end, fun (V2273) -> fun (V2274) -> fun (V2275) -> V2274 end end end, fun (V2276) -> fun (V2277) -> fun (V2278) -> fun (V2279) -> fun (V2280) -> begin V2281 = V2278(V2280), begin V2282 = V2279(V2280), V2281(V2282) end end end end end end end}, fun (V2283) -> fun (V2284) -> fun (V2285) -> fun (V2286) -> fun (V2287) -> begin V2288 = V2285(V2287), (V2286(V2288))(V2287) end end end end end end, fun (V2289) -> fun (V2290) -> fun (V2291) -> begin V2292 = V2290(V2291), V2292(V2291) end end end end}, fun (V2293) -> fun (V2294) -> V2294 end end}, V0))(V2267), {'Idris.Prelude.Right', V2295} end,
														  case V2296 of
														    {'Idris.Prelude.Left', E3637} -> fun (V2297) -> {'Idris.Prelude.Left', V2297} end(E3637);
														    {'Idris.Prelude.Right', E3638} ->
															fun (V2298) ->
																begin
																  V2299 = ('un--nfToCFType'(V0, V2260, 1, V2266))(V2267),
																  case V2299 of
																    {'Idris.Prelude.Left', E3639} -> fun (V2300) -> {'Idris.Prelude.Left', V2300} end(E3639);
																    {'Idris.Prelude.Right', E3640} ->
																	fun (V2301) ->
																		begin
																		  V2302 = ((V2263(V2298))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2260, 1})))(V2267),
																		  case V2302 of
																		    {'Idris.Prelude.Left', E3641} -> fun (V2303) -> {'Idris.Prelude.Left', V2303} end(E3641);
																		    {'Idris.Prelude.Right', E3642} ->
																			fun (V2304) ->
																				begin
																				  V2305 = ('un--nfToCFType'(V0, V2260, 1, V2304))(V2267),
																				  case V2305 of
																				    {'Idris.Prelude.Left', E3643} -> fun (V2306) -> {'Idris.Prelude.Left', V2306} end(E3643);
																				    {'Idris.Prelude.Right', E3644} -> fun (V2307) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V2301, V2307}} end(E3644);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E3642);
																		    _ -> erlang:throw("Error: Unreachable branch")
																		  end
																		end
																	end(E3640);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E3638);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end
												end(E3634, E3635, E3636);
											    _ ->
												case V3 of
												  {'Idris.Core.Value.NTCon', E3599, E3600, E3601, E3602, E3603} ->
												      fun (V2308, V2309, V2310, V2311, V2312) ->
													      fun (V2313) ->
														      begin
															V2342 = begin V2341 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2314) -> fun (V2315) -> fun (V2316) -> fun (V2317) -> fun (V2318) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2316, V2317, V2318) end end end end end, fun (V2319) -> fun (V2320) -> fun (V2321) -> V2320 end end end, fun (V2322) -> fun (V2323) -> fun (V2324) -> fun (V2325) -> fun (V2326) -> begin V2327 = V2324(V2326), begin V2328 = V2325(V2326), V2327(V2328) end end end end end end end}, fun (V2329) -> fun (V2330) -> fun (V2331) -> fun (V2332) -> fun (V2333) -> begin V2334 = V2331(V2333), (V2332(V2334))(V2333) end end end end end end, fun (V2335) -> fun (V2336) -> fun (V2337) -> begin V2338 = V2336(V2337), V2338(V2337) end end end end}, fun (V2339) -> fun (V2340) -> V2340 end end}, V0))(V2313), {'Idris.Prelude.Right', V2341} end,
															case V2342 of
															  {'Idris.Prelude.Left', E3604} -> fun (V2343) -> {'Idris.Prelude.Left', V2343} end(E3604);
															  {'Idris.Prelude.Right', E3605} ->
															      fun (V2344) ->
																      begin
																	V2349 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2345) -> fun (V2346) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2345, V2346) end end, fun (V2347) -> fun (V2348) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2347, V2348) end end}, V2309, V2313),
																	case V2349 of
																	  {'Idris.Prelude.Left', E3606} -> fun (V2350) -> {'Idris.Prelude.Left', V2350} end(E3606);
																	  {'Idris.Prelude.Right', E3607} ->
																	      fun (V2351) ->
																		      begin
																			V2352 = ('un--getNArgs'(V2344, V2351, V2312))(V2313),
																			case V2352 of
																			  {'Idris.Prelude.Left', E3608} -> fun (V2353) -> {'Idris.Prelude.Left', V2353} end(E3608);
																			  {'Idris.Prelude.Right', E3609} ->
																			      fun (V2354) ->
																				      case V2354 of
																					{'Idris.Compiler.CompileExpr.User', E3610, E3611} ->
																					    fun (V2355, V2356) ->
																						    begin
																						      V2358 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2357) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2344, V2357) end, V2356))(V2313),
																						      case V2358 of
																							{'Idris.Prelude.Left', E3612} -> fun (V2359) -> {'Idris.Prelude.Left', V2359} end(E3612);
																							{'Idris.Prelude.Right', E3613} ->
																							    fun (V2360) ->
																								    begin
																								      V2362 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2361) -> 'un--nfToCFType'(V0, V2308, V2, V2361) end, V2360))(V2313),
																								      case V2362 of
																									{'Idris.Prelude.Left', E3614} -> fun (V2363) -> {'Idris.Prelude.Left', V2363} end(E3614);
																									{'Idris.Prelude.Right', E3615} -> fun (V2364) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2351, V2364}} end(E3615);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																								    end
																							    end(E3613);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E3610, E3611);
																					{'Idris.Compiler.CompileExpr.Struct', E3616, E3617} ->
																					    fun (V2365, V2366) ->
																						    begin
																						      V2377 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																												fun (V2367) ->
																													case V2367 of
																													  {'Idris.Builtin.MkPair', E3618, E3619} ->
																													      fun (V2368, V2369) ->
																														      fun (V2370) ->
																															      begin
																																V2371 = ('Idris.Core.Normalise':'un--evalClosure'([], V2344, V2369))(V2370),
																																case V2371 of
																																  {'Idris.Prelude.Left', E3620} -> fun (V2372) -> {'Idris.Prelude.Left', V2372} end(E3620);
																																  {'Idris.Prelude.Right', E3621} ->
																																      fun (V2373) ->
																																	      begin
																																		V2374 = ('un--nfToCFType'(V0, V2308, 0, V2373))(V2370),
																																		case V2374 of
																																		  {'Idris.Prelude.Left', E3622} -> fun (V2375) -> {'Idris.Prelude.Left', V2375} end(E3622);
																																		  {'Idris.Prelude.Right', E3623} -> fun (V2376) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2368, V2376}} end(E3623);
																																		  _ -> erlang:throw("Error: Unreachable branch")
																																		end
																																	      end
																																      end(E3621);
																																  _ -> erlang:throw("Error: Unreachable branch")
																																end
																															      end
																														      end
																													      end(E3618, E3619);
																													  _ -> erlang:throw("Error: Unreachable branch")
																													end
																												end,
																												V2366))(V2313),
																						      case V2377 of
																							{'Idris.Prelude.Left', E3624} -> fun (V2378) -> {'Idris.Prelude.Left', V2378} end(E3624);
																							{'Idris.Prelude.Right', E3625} -> fun (V2379) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2365, V2379}} end(E3625);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E3616, E3617);
																					{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																					{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																					{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																					{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																					{'Idris.Compiler.CompileExpr.NIORes', E3626} ->
																					    fun (V2380) ->
																						    begin
																						      V2381 = ('Idris.Core.Normalise':'un--evalClosure'([], V2344, V2380))(V2313),
																						      case V2381 of
																							{'Idris.Prelude.Left', E3627} -> fun (V2382) -> {'Idris.Prelude.Left', V2382} end(E3627);
																							{'Idris.Prelude.Right', E3628} ->
																							    fun (V2383) ->
																								    begin
																								      V2384 = ('un--nfToCFType'(V0, V2308, V2, V2383))(V2313),
																								      case V2384 of
																									{'Idris.Prelude.Left', E3629} -> fun (V2385) -> {'Idris.Prelude.Left', V2385} end(E3629);
																									{'Idris.Prelude.Right', E3630} -> fun (V2386) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2386}} end(E3630);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																								    end
																							    end(E3628);
																							_ -> erlang:throw("Error: Unreachable branch")
																						      end
																						    end
																					    end(E3626);
																					_ -> erlang:throw("Error: Unreachable branch")
																				      end
																			      end(E3609);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		      end
																	      end(E3607);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E3605);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end
												      end(E3599, E3600, E3601, E3602, E3603);
												  {'Idris.Core.Value.NType', E3631} -> fun (V2387) -> fun (V2388) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3631);
												  {'Idris.Core.Value.NErased', E3632, E3633} -> fun (V2389, V2390) -> fun (V2391) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3632, E3633);
												  _ ->
												      fun (V2392) ->
													      begin
														V2421 = begin V2420 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2393) -> fun (V2394) -> fun (V2395) -> fun (V2396) -> fun (V2397) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2395, V2396, V2397) end end end end end, fun (V2398) -> fun (V2399) -> fun (V2400) -> V2399 end end end, fun (V2401) -> fun (V2402) -> fun (V2403) -> fun (V2404) -> fun (V2405) -> begin V2406 = V2403(V2405), begin V2407 = V2404(V2405), V2406(V2407) end end end end end end end}, fun (V2408) -> fun (V2409) -> fun (V2410) -> fun (V2411) -> fun (V2412) -> begin V2413 = V2410(V2412), (V2411(V2413))(V2412) end end end end end end, fun (V2414) -> fun (V2415) -> fun (V2416) -> begin V2417 = V2415(V2416), V2417(V2416) end end end end}, fun (V2418) -> fun (V2419) -> V2419 end end}, V0))(V2392), {'Idris.Prelude.Right', V2420} end,
														case V2421 of
														  {'Idris.Prelude.Left', E3593} -> fun (V2422) -> {'Idris.Prelude.Left', V2422} end(E3593);
														  {'Idris.Prelude.Right', E3594} ->
														      fun (V2423) ->
															      begin
																V2424 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2423, {'Idris.Core.Env.Nil'}, V3, V2392),
																case V2424 of
																  {'Idris.Prelude.Left', E3595} -> fun (V2425) -> {'Idris.Prelude.Left', V2425} end(E3595);
																  {'Idris.Prelude.Right', E3596} ->
																      fun (V2426) ->
																	      begin
																		V2431 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2427) -> fun (V2428) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2427, V2428) end end, fun (V2429) -> fun (V2430) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2429, V2430) end end}, V2426, V2392),
																		case V2431 of
																		  {'Idris.Prelude.Left', E3597} -> fun (V2432) -> {'Idris.Prelude.Left', V2432} end(E3597);
																		  {'Idris.Prelude.Right', E3598} -> fun (V2433) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2433))}, V2392) end(E3598);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E3596);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E3594);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													      end
												      end
												end
											  end
										  end(E3589, E3590, E3591, E3592);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E3554, E3555, E3556, E3557, E3558} ->
											fun (V2434, V2435, V2436, V2437, V2438) ->
												fun (V2439) ->
													begin
													  V2468 = begin V2467 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2440) -> fun (V2441) -> fun (V2442) -> fun (V2443) -> fun (V2444) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2442, V2443, V2444) end end end end end, fun (V2445) -> fun (V2446) -> fun (V2447) -> V2446 end end end, fun (V2448) -> fun (V2449) -> fun (V2450) -> fun (V2451) -> fun (V2452) -> begin V2453 = V2450(V2452), begin V2454 = V2451(V2452), V2453(V2454) end end end end end end end}, fun (V2455) -> fun (V2456) -> fun (V2457) -> fun (V2458) -> fun (V2459) -> begin V2460 = V2457(V2459), (V2458(V2460))(V2459) end end end end end end, fun (V2461) -> fun (V2462) -> fun (V2463) -> begin V2464 = V2462(V2463), V2464(V2463) end end end end}, fun (V2465) -> fun (V2466) -> V2466 end end}, V0))(V2439), {'Idris.Prelude.Right', V2467} end,
													  case V2468 of
													    {'Idris.Prelude.Left', E3559} -> fun (V2469) -> {'Idris.Prelude.Left', V2469} end(E3559);
													    {'Idris.Prelude.Right', E3560} ->
														fun (V2470) ->
															begin
															  V2475 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2471) -> fun (V2472) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2471, V2472) end end, fun (V2473) -> fun (V2474) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2473, V2474) end end}, V2435, V2439),
															  case V2475 of
															    {'Idris.Prelude.Left', E3561} -> fun (V2476) -> {'Idris.Prelude.Left', V2476} end(E3561);
															    {'Idris.Prelude.Right', E3562} ->
																fun (V2477) ->
																	begin
																	  V2478 = ('un--getNArgs'(V2470, V2477, V2438))(V2439),
																	  case V2478 of
																	    {'Idris.Prelude.Left', E3563} -> fun (V2479) -> {'Idris.Prelude.Left', V2479} end(E3563);
																	    {'Idris.Prelude.Right', E3564} ->
																		fun (V2480) ->
																			case V2480 of
																			  {'Idris.Compiler.CompileExpr.User', E3565, E3566} ->
																			      fun (V2481, V2482) ->
																				      begin
																					V2484 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2483) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2470, V2483) end, V2482))(V2439),
																					case V2484 of
																					  {'Idris.Prelude.Left', E3567} -> fun (V2485) -> {'Idris.Prelude.Left', V2485} end(E3567);
																					  {'Idris.Prelude.Right', E3568} ->
																					      fun (V2486) ->
																						      begin
																							V2488 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2487) -> 'un--nfToCFType'(V0, V2434, V2, V2487) end, V2486))(V2439),
																							case V2488 of
																							  {'Idris.Prelude.Left', E3569} -> fun (V2489) -> {'Idris.Prelude.Left', V2489} end(E3569);
																							  {'Idris.Prelude.Right', E3570} -> fun (V2490) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2477, V2490}} end(E3570);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3568);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3565, E3566);
																			  {'Idris.Compiler.CompileExpr.Struct', E3571, E3572} ->
																			      fun (V2491, V2492) ->
																				      begin
																					V2503 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V2493) ->
																											  case V2493 of
																											    {'Idris.Builtin.MkPair', E3573, E3574} ->
																												fun (V2494, V2495) ->
																													fun (V2496) ->
																														begin
																														  V2497 = ('Idris.Core.Normalise':'un--evalClosure'([], V2470, V2495))(V2496),
																														  case V2497 of
																														    {'Idris.Prelude.Left', E3575} -> fun (V2498) -> {'Idris.Prelude.Left', V2498} end(E3575);
																														    {'Idris.Prelude.Right', E3576} ->
																															fun (V2499) ->
																																begin
																																  V2500 = ('un--nfToCFType'(V0, V2434, 0, V2499))(V2496),
																																  case V2500 of
																																    {'Idris.Prelude.Left', E3577} -> fun (V2501) -> {'Idris.Prelude.Left', V2501} end(E3577);
																																    {'Idris.Prelude.Right', E3578} -> fun (V2502) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2494, V2502}} end(E3578);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E3576);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E3573, E3574);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V2492))(V2439),
																					case V2503 of
																					  {'Idris.Prelude.Left', E3579} -> fun (V2504) -> {'Idris.Prelude.Left', V2504} end(E3579);
																					  {'Idris.Prelude.Right', E3580} -> fun (V2505) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2491, V2505}} end(E3580);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3571, E3572);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E3581} ->
																			      fun (V2506) ->
																				      begin
																					V2507 = ('Idris.Core.Normalise':'un--evalClosure'([], V2470, V2506))(V2439),
																					case V2507 of
																					  {'Idris.Prelude.Left', E3582} -> fun (V2508) -> {'Idris.Prelude.Left', V2508} end(E3582);
																					  {'Idris.Prelude.Right', E3583} ->
																					      fun (V2509) ->
																						      begin
																							V2510 = ('un--nfToCFType'(V0, V2434, V2, V2509))(V2439),
																							case V2510 of
																							  {'Idris.Prelude.Left', E3584} -> fun (V2511) -> {'Idris.Prelude.Left', V2511} end(E3584);
																							  {'Idris.Prelude.Right', E3585} -> fun (V2512) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2512}} end(E3585);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3583);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3581);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E3564);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E3562);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E3560);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E3554, E3555, E3556, E3557, E3558);
										    {'Idris.Core.Value.NType', E3586} -> fun (V2513) -> fun (V2514) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3586);
										    {'Idris.Core.Value.NErased', E3587, E3588} -> fun (V2515, V2516) -> fun (V2517) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3587, E3588);
										    _ ->
											fun (V2518) ->
												begin
												  V2547 = begin V2546 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2519) -> fun (V2520) -> fun (V2521) -> fun (V2522) -> fun (V2523) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2521, V2522, V2523) end end end end end, fun (V2524) -> fun (V2525) -> fun (V2526) -> V2525 end end end, fun (V2527) -> fun (V2528) -> fun (V2529) -> fun (V2530) -> fun (V2531) -> begin V2532 = V2529(V2531), begin V2533 = V2530(V2531), V2532(V2533) end end end end end end end}, fun (V2534) -> fun (V2535) -> fun (V2536) -> fun (V2537) -> fun (V2538) -> begin V2539 = V2536(V2538), (V2537(V2539))(V2538) end end end end end end, fun (V2540) -> fun (V2541) -> fun (V2542) -> begin V2543 = V2541(V2542), V2543(V2542) end end end end}, fun (V2544) -> fun (V2545) -> V2545 end end}, V0))(V2518), {'Idris.Prelude.Right', V2546} end,
												  case V2547 of
												    {'Idris.Prelude.Left', E3548} -> fun (V2548) -> {'Idris.Prelude.Left', V2548} end(E3548);
												    {'Idris.Prelude.Right', E3549} ->
													fun (V2549) ->
														begin
														  V2550 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2549, {'Idris.Core.Env.Nil'}, V3, V2518),
														  case V2550 of
														    {'Idris.Prelude.Left', E3550} -> fun (V2551) -> {'Idris.Prelude.Left', V2551} end(E3550);
														    {'Idris.Prelude.Right', E3551} ->
															fun (V2552) ->
																begin
																  V2557 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2553) -> fun (V2554) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2553, V2554) end end, fun (V2555) -> fun (V2556) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2555, V2556) end end}, V2552, V2518),
																  case V2557 of
																    {'Idris.Prelude.Left', E3552} -> fun (V2558) -> {'Idris.Prelude.Left', V2558} end(E3552);
																    {'Idris.Prelude.Right', E3553} -> fun (V2559) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2559))}, V2518) end(E3553);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E3551);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E3549);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end;
									0 ->
									    case V3 of
									      {'Idris.Core.Value.NBind', E3686, E3687, E3688, E3689} -> fun (V2560, V2561, V2562, V2563) -> fun (V2564) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V2560, <<"Function types not allowed in a foreign struct"/utf8>>}, V2564) end end(E3686, E3687, E3688, E3689);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E3651, E3652, E3653, E3654, E3655} ->
											fun (V2565, V2566, V2567, V2568, V2569) ->
												fun (V2570) ->
													begin
													  V2599 = begin V2598 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2571) -> fun (V2572) -> fun (V2573) -> fun (V2574) -> fun (V2575) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2573, V2574, V2575) end end end end end, fun (V2576) -> fun (V2577) -> fun (V2578) -> V2577 end end end, fun (V2579) -> fun (V2580) -> fun (V2581) -> fun (V2582) -> fun (V2583) -> begin V2584 = V2581(V2583), begin V2585 = V2582(V2583), V2584(V2585) end end end end end end end}, fun (V2586) -> fun (V2587) -> fun (V2588) -> fun (V2589) -> fun (V2590) -> begin V2591 = V2588(V2590), (V2589(V2591))(V2590) end end end end end end, fun (V2592) -> fun (V2593) -> fun (V2594) -> begin V2595 = V2593(V2594), V2595(V2594) end end end end}, fun (V2596) -> fun (V2597) -> V2597 end end}, V0))(V2570), {'Idris.Prelude.Right', V2598} end,
													  case V2599 of
													    {'Idris.Prelude.Left', E3656} -> fun (V2600) -> {'Idris.Prelude.Left', V2600} end(E3656);
													    {'Idris.Prelude.Right', E3657} ->
														fun (V2601) ->
															begin
															  V2606 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2602) -> fun (V2603) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2602, V2603) end end, fun (V2604) -> fun (V2605) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2604, V2605) end end}, V2566, V2570),
															  case V2606 of
															    {'Idris.Prelude.Left', E3658} -> fun (V2607) -> {'Idris.Prelude.Left', V2607} end(E3658);
															    {'Idris.Prelude.Right', E3659} ->
																fun (V2608) ->
																	begin
																	  V2609 = ('un--getNArgs'(V2601, V2608, V2569))(V2570),
																	  case V2609 of
																	    {'Idris.Prelude.Left', E3660} -> fun (V2610) -> {'Idris.Prelude.Left', V2610} end(E3660);
																	    {'Idris.Prelude.Right', E3661} ->
																		fun (V2611) ->
																			case V2611 of
																			  {'Idris.Compiler.CompileExpr.User', E3662, E3663} ->
																			      fun (V2612, V2613) ->
																				      begin
																					V2615 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2614) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2601, V2614) end, V2613))(V2570),
																					case V2615 of
																					  {'Idris.Prelude.Left', E3664} -> fun (V2616) -> {'Idris.Prelude.Left', V2616} end(E3664);
																					  {'Idris.Prelude.Right', E3665} ->
																					      fun (V2617) ->
																						      begin
																							V2619 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2618) -> 'un--nfToCFType'(V0, V2565, V2, V2618) end, V2617))(V2570),
																							case V2619 of
																							  {'Idris.Prelude.Left', E3666} -> fun (V2620) -> {'Idris.Prelude.Left', V2620} end(E3666);
																							  {'Idris.Prelude.Right', E3667} -> fun (V2621) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2608, V2621}} end(E3667);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3665);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3662, E3663);
																			  {'Idris.Compiler.CompileExpr.Struct', E3668, E3669} ->
																			      fun (V2622, V2623) ->
																				      begin
																					V2634 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V2624) ->
																											  case V2624 of
																											    {'Idris.Builtin.MkPair', E3670, E3671} ->
																												fun (V2625, V2626) ->
																													fun (V2627) ->
																														begin
																														  V2628 = ('Idris.Core.Normalise':'un--evalClosure'([], V2601, V2626))(V2627),
																														  case V2628 of
																														    {'Idris.Prelude.Left', E3672} -> fun (V2629) -> {'Idris.Prelude.Left', V2629} end(E3672);
																														    {'Idris.Prelude.Right', E3673} ->
																															fun (V2630) ->
																																begin
																																  V2631 = ('un--nfToCFType'(V0, V2565, 0, V2630))(V2627),
																																  case V2631 of
																																    {'Idris.Prelude.Left', E3674} -> fun (V2632) -> {'Idris.Prelude.Left', V2632} end(E3674);
																																    {'Idris.Prelude.Right', E3675} -> fun (V2633) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2625, V2633}} end(E3675);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E3673);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E3670, E3671);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V2623))(V2570),
																					case V2634 of
																					  {'Idris.Prelude.Left', E3676} -> fun (V2635) -> {'Idris.Prelude.Left', V2635} end(E3676);
																					  {'Idris.Prelude.Right', E3677} -> fun (V2636) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2622, V2636}} end(E3677);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3668, E3669);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E3678} ->
																			      fun (V2637) ->
																				      begin
																					V2638 = ('Idris.Core.Normalise':'un--evalClosure'([], V2601, V2637))(V2570),
																					case V2638 of
																					  {'Idris.Prelude.Left', E3679} -> fun (V2639) -> {'Idris.Prelude.Left', V2639} end(E3679);
																					  {'Idris.Prelude.Right', E3680} ->
																					      fun (V2640) ->
																						      begin
																							V2641 = ('un--nfToCFType'(V0, V2565, V2, V2640))(V2570),
																							case V2641 of
																							  {'Idris.Prelude.Left', E3681} -> fun (V2642) -> {'Idris.Prelude.Left', V2642} end(E3681);
																							  {'Idris.Prelude.Right', E3682} -> fun (V2643) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2643}} end(E3682);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3680);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3678);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E3661);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E3659);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E3657);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E3651, E3652, E3653, E3654, E3655);
										    {'Idris.Core.Value.NType', E3683} -> fun (V2644) -> fun (V2645) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3683);
										    {'Idris.Core.Value.NErased', E3684, E3685} -> fun (V2646, V2647) -> fun (V2648) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3684, E3685);
										    _ ->
											fun (V2649) ->
												begin
												  V2678 = begin V2677 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2650) -> fun (V2651) -> fun (V2652) -> fun (V2653) -> fun (V2654) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2652, V2653, V2654) end end end end end, fun (V2655) -> fun (V2656) -> fun (V2657) -> V2656 end end end, fun (V2658) -> fun (V2659) -> fun (V2660) -> fun (V2661) -> fun (V2662) -> begin V2663 = V2660(V2662), begin V2664 = V2661(V2662), V2663(V2664) end end end end end end end}, fun (V2665) -> fun (V2666) -> fun (V2667) -> fun (V2668) -> fun (V2669) -> begin V2670 = V2667(V2669), (V2668(V2670))(V2669) end end end end end end, fun (V2671) -> fun (V2672) -> fun (V2673) -> begin V2674 = V2672(V2673), V2674(V2673) end end end end}, fun (V2675) -> fun (V2676) -> V2676 end end}, V0))(V2649), {'Idris.Prelude.Right', V2677} end,
												  case V2678 of
												    {'Idris.Prelude.Left', E3645} -> fun (V2679) -> {'Idris.Prelude.Left', V2679} end(E3645);
												    {'Idris.Prelude.Right', E3646} ->
													fun (V2680) ->
														begin
														  V2681 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2680, {'Idris.Core.Env.Nil'}, V3, V2649),
														  case V2681 of
														    {'Idris.Prelude.Left', E3647} -> fun (V2682) -> {'Idris.Prelude.Left', V2682} end(E3647);
														    {'Idris.Prelude.Right', E3648} ->
															fun (V2683) ->
																begin
																  V2688 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2684) -> fun (V2685) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2684, V2685) end end, fun (V2686) -> fun (V2687) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2686, V2687) end end}, V2683, V2649),
																  case V2688 of
																    {'Idris.Prelude.Left', E3649} -> fun (V2689) -> {'Idris.Prelude.Left', V2689} end(E3649);
																    {'Idris.Prelude.Right', E3650} -> fun (V2690) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2690))}, V2649) end(E3650);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E3648);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E3646);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end;
									_ ->
									    case V3 of
									      {'Idris.Core.Value.NTCon', E3513, E3514, E3515, E3516, E3517} ->
										  fun (V2691, V2692, V2693, V2694, V2695) ->
											  fun (V2696) ->
												  begin
												    V2725 = begin V2724 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2697) -> fun (V2698) -> fun (V2699) -> fun (V2700) -> fun (V2701) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2699, V2700, V2701) end end end end end, fun (V2702) -> fun (V2703) -> fun (V2704) -> V2703 end end end, fun (V2705) -> fun (V2706) -> fun (V2707) -> fun (V2708) -> fun (V2709) -> begin V2710 = V2707(V2709), begin V2711 = V2708(V2709), V2710(V2711) end end end end end end end}, fun (V2712) -> fun (V2713) -> fun (V2714) -> fun (V2715) -> fun (V2716) -> begin V2717 = V2714(V2716), (V2715(V2717))(V2716) end end end end end end, fun (V2718) -> fun (V2719) -> fun (V2720) -> begin V2721 = V2719(V2720), V2721(V2720) end end end end}, fun (V2722) -> fun (V2723) -> V2723 end end}, V0))(V2696), {'Idris.Prelude.Right', V2724} end,
												    case V2725 of
												      {'Idris.Prelude.Left', E3518} -> fun (V2726) -> {'Idris.Prelude.Left', V2726} end(E3518);
												      {'Idris.Prelude.Right', E3519} ->
													  fun (V2727) ->
														  begin
														    V2732 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2728) -> fun (V2729) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2728, V2729) end end, fun (V2730) -> fun (V2731) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2730, V2731) end end}, V2692, V2696),
														    case V2732 of
														      {'Idris.Prelude.Left', E3520} -> fun (V2733) -> {'Idris.Prelude.Left', V2733} end(E3520);
														      {'Idris.Prelude.Right', E3521} ->
															  fun (V2734) ->
																  begin
																    V2735 = ('un--getNArgs'(V2727, V2734, V2695))(V2696),
																    case V2735 of
																      {'Idris.Prelude.Left', E3522} -> fun (V2736) -> {'Idris.Prelude.Left', V2736} end(E3522);
																      {'Idris.Prelude.Right', E3523} ->
																	  fun (V2737) ->
																		  case V2737 of
																		    {'Idris.Compiler.CompileExpr.User', E3524, E3525} ->
																			fun (V2738, V2739) ->
																				begin
																				  V2741 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2740) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2727, V2740) end, V2739))(V2696),
																				  case V2741 of
																				    {'Idris.Prelude.Left', E3526} -> fun (V2742) -> {'Idris.Prelude.Left', V2742} end(E3526);
																				    {'Idris.Prelude.Right', E3527} ->
																					fun (V2743) ->
																						begin
																						  V2745 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2744) -> 'un--nfToCFType'(V0, V2691, V2, V2744) end, V2743))(V2696),
																						  case V2745 of
																						    {'Idris.Prelude.Left', E3528} -> fun (V2746) -> {'Idris.Prelude.Left', V2746} end(E3528);
																						    {'Idris.Prelude.Right', E3529} -> fun (V2747) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2734, V2747}} end(E3529);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E3527);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E3524, E3525);
																		    {'Idris.Compiler.CompileExpr.Struct', E3530, E3531} ->
																			fun (V2748, V2749) ->
																				begin
																				  V2760 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																									    fun (V2750) ->
																										    case V2750 of
																										      {'Idris.Builtin.MkPair', E3532, E3533} ->
																											  fun (V2751, V2752) ->
																												  fun (V2753) ->
																													  begin
																													    V2754 = ('Idris.Core.Normalise':'un--evalClosure'([], V2727, V2752))(V2753),
																													    case V2754 of
																													      {'Idris.Prelude.Left', E3534} -> fun (V2755) -> {'Idris.Prelude.Left', V2755} end(E3534);
																													      {'Idris.Prelude.Right', E3535} ->
																														  fun (V2756) ->
																															  begin
																															    V2757 = ('un--nfToCFType'(V0, V2691, 0, V2756))(V2753),
																															    case V2757 of
																															      {'Idris.Prelude.Left', E3536} -> fun (V2758) -> {'Idris.Prelude.Left', V2758} end(E3536);
																															      {'Idris.Prelude.Right', E3537} -> fun (V2759) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2751, V2759}} end(E3537);
																															      _ -> erlang:throw("Error: Unreachable branch")
																															    end
																															  end
																														  end(E3535);
																													      _ -> erlang:throw("Error: Unreachable branch")
																													    end
																													  end
																												  end
																											  end(E3532, E3533);
																										      _ -> erlang:throw("Error: Unreachable branch")
																										    end
																									    end,
																									    V2749))(V2696),
																				  case V2760 of
																				    {'Idris.Prelude.Left', E3538} -> fun (V2761) -> {'Idris.Prelude.Left', V2761} end(E3538);
																				    {'Idris.Prelude.Right', E3539} -> fun (V2762) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2748, V2762}} end(E3539);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E3530, E3531);
																		    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																		    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																		    {'Idris.Compiler.CompileExpr.NIORes', E3540} ->
																			fun (V2763) ->
																				begin
																				  V2764 = ('Idris.Core.Normalise':'un--evalClosure'([], V2727, V2763))(V2696),
																				  case V2764 of
																				    {'Idris.Prelude.Left', E3541} -> fun (V2765) -> {'Idris.Prelude.Left', V2765} end(E3541);
																				    {'Idris.Prelude.Right', E3542} ->
																					fun (V2766) ->
																						begin
																						  V2767 = ('un--nfToCFType'(V0, V2691, V2, V2766))(V2696),
																						  case V2767 of
																						    {'Idris.Prelude.Left', E3543} -> fun (V2768) -> {'Idris.Prelude.Left', V2768} end(E3543);
																						    {'Idris.Prelude.Right', E3544} -> fun (V2769) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2769}} end(E3544);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E3542);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E3540);
																		    _ -> erlang:throw("Error: Unreachable branch")
																		  end
																	  end(E3523);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E3521);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3519);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E3513, E3514, E3515, E3516, E3517);
									      {'Idris.Core.Value.NType', E3545} -> fun (V2770) -> fun (V2771) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3545);
									      {'Idris.Core.Value.NErased', E3546, E3547} -> fun (V2772, V2773) -> fun (V2774) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3546, E3547);
									      _ ->
										  fun (V2775) ->
											  begin
											    V2804 = begin V2803 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2776) -> fun (V2777) -> fun (V2778) -> fun (V2779) -> fun (V2780) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2778, V2779, V2780) end end end end end, fun (V2781) -> fun (V2782) -> fun (V2783) -> V2782 end end end, fun (V2784) -> fun (V2785) -> fun (V2786) -> fun (V2787) -> fun (V2788) -> begin V2789 = V2786(V2788), begin V2790 = V2787(V2788), V2789(V2790) end end end end end end end}, fun (V2791) -> fun (V2792) -> fun (V2793) -> fun (V2794) -> fun (V2795) -> begin V2796 = V2793(V2795), (V2794(V2796))(V2795) end end end end end end, fun (V2797) -> fun (V2798) -> fun (V2799) -> begin V2800 = V2798(V2799), V2800(V2799) end end end end}, fun (V2801) -> fun (V2802) -> V2802 end end}, V0))(V2775), {'Idris.Prelude.Right', V2803} end,
											    case V2804 of
											      {'Idris.Prelude.Left', E3507} -> fun (V2805) -> {'Idris.Prelude.Left', V2805} end(E3507);
											      {'Idris.Prelude.Right', E3508} ->
												  fun (V2806) ->
													  begin
													    V2807 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2806, {'Idris.Core.Env.Nil'}, V3, V2775),
													    case V2807 of
													      {'Idris.Prelude.Left', E3509} -> fun (V2808) -> {'Idris.Prelude.Left', V2808} end(E3509);
													      {'Idris.Prelude.Right', E3510} ->
														  fun (V2809) ->
															  begin
															    V2814 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2810) -> fun (V2811) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2810, V2811) end end, fun (V2812) -> fun (V2813) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2812, V2813) end end}, V2809, V2775),
															    case V2814 of
															      {'Idris.Prelude.Left', E3511} -> fun (V2815) -> {'Idris.Prelude.Left', V2815} end(E3511);
															      {'Idris.Prelude.Right', E3512} -> fun (V2816) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2816))}, V2775) end(E3512);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3510);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3508);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									    end
								      end
								end
							end(E3505, E3506);
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E3404, E3405, E3406, E3407} ->
								    fun (V2817, V2818, V2819, V2820) ->
									    case V2819 of
									      {'Idris.Core.TT.Pi', E3449, E3450, E3451} ->
										  fun (V2821, V2822, V2823) ->
											  fun (V2824) ->
												  begin
												    V2853 = begin V2852 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2825) -> fun (V2826) -> fun (V2827) -> fun (V2828) -> fun (V2829) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2827, V2828, V2829) end end end end end, fun (V2830) -> fun (V2831) -> fun (V2832) -> V2831 end end end, fun (V2833) -> fun (V2834) -> fun (V2835) -> fun (V2836) -> fun (V2837) -> begin V2838 = V2835(V2837), begin V2839 = V2836(V2837), V2838(V2839) end end end end end end end}, fun (V2840) -> fun (V2841) -> fun (V2842) -> fun (V2843) -> fun (V2844) -> begin V2845 = V2842(V2844), (V2843(V2845))(V2844) end end end end end end, fun (V2846) -> fun (V2847) -> fun (V2848) -> begin V2849 = V2847(V2848), V2849(V2848) end end end end}, fun (V2850) -> fun (V2851) -> V2851 end end}, V0))(V2824), {'Idris.Prelude.Right', V2852} end,
												    case V2853 of
												      {'Idris.Prelude.Left', E3452} -> fun (V2854) -> {'Idris.Prelude.Left', V2854} end(E3452);
												      {'Idris.Prelude.Right', E3453} ->
													  fun (V2855) ->
														  begin
														    V2856 = ('un--nfToCFType'(V0, V2817, 1, V2823))(V2824),
														    case V2856 of
														      {'Idris.Prelude.Left', E3454} -> fun (V2857) -> {'Idris.Prelude.Left', V2857} end(E3454);
														      {'Idris.Prelude.Right', E3455} ->
															  fun (V2858) ->
																  begin
																    V2859 = ((V2820(V2855))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2817, 1})))(V2824),
																    case V2859 of
																      {'Idris.Prelude.Left', E3456} -> fun (V2860) -> {'Idris.Prelude.Left', V2860} end(E3456);
																      {'Idris.Prelude.Right', E3457} ->
																	  fun (V2861) ->
																		  begin
																		    V2862 = ('un--nfToCFType'(V0, V2817, 1, V2861))(V2824),
																		    case V2862 of
																		      {'Idris.Prelude.Left', E3458} -> fun (V2863) -> {'Idris.Prelude.Left', V2863} end(E3458);
																		      {'Idris.Prelude.Right', E3459} -> fun (V2864) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V2858, V2864}} end(E3459);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3457);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E3455);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3453);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E3449, E3450, E3451);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E3414, E3415, E3416, E3417, E3418} ->
											fun (V2865, V2866, V2867, V2868, V2869) ->
												fun (V2870) ->
													begin
													  V2899 = begin V2898 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2871) -> fun (V2872) -> fun (V2873) -> fun (V2874) -> fun (V2875) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2873, V2874, V2875) end end end end end, fun (V2876) -> fun (V2877) -> fun (V2878) -> V2877 end end end, fun (V2879) -> fun (V2880) -> fun (V2881) -> fun (V2882) -> fun (V2883) -> begin V2884 = V2881(V2883), begin V2885 = V2882(V2883), V2884(V2885) end end end end end end end}, fun (V2886) -> fun (V2887) -> fun (V2888) -> fun (V2889) -> fun (V2890) -> begin V2891 = V2888(V2890), (V2889(V2891))(V2890) end end end end end end, fun (V2892) -> fun (V2893) -> fun (V2894) -> begin V2895 = V2893(V2894), V2895(V2894) end end end end}, fun (V2896) -> fun (V2897) -> V2897 end end}, V0))(V2870), {'Idris.Prelude.Right', V2898} end,
													  case V2899 of
													    {'Idris.Prelude.Left', E3419} -> fun (V2900) -> {'Idris.Prelude.Left', V2900} end(E3419);
													    {'Idris.Prelude.Right', E3420} ->
														fun (V2901) ->
															begin
															  V2906 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2902) -> fun (V2903) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V2902, V2903) end end, fun (V2904) -> fun (V2905) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V2904, V2905) end end}, V2866, V2870),
															  case V2906 of
															    {'Idris.Prelude.Left', E3421} -> fun (V2907) -> {'Idris.Prelude.Left', V2907} end(E3421);
															    {'Idris.Prelude.Right', E3422} ->
																fun (V2908) ->
																	begin
																	  V2909 = ('un--getNArgs'(V2901, V2908, V2869))(V2870),
																	  case V2909 of
																	    {'Idris.Prelude.Left', E3423} -> fun (V2910) -> {'Idris.Prelude.Left', V2910} end(E3423);
																	    {'Idris.Prelude.Right', E3424} ->
																		fun (V2911) ->
																			case V2911 of
																			  {'Idris.Compiler.CompileExpr.User', E3425, E3426} ->
																			      fun (V2912, V2913) ->
																				      begin
																					V2915 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2914) -> 'Idris.Core.Normalise':'un--evalClosure'([], V2901, V2914) end, V2913))(V2870),
																					case V2915 of
																					  {'Idris.Prelude.Left', E3427} -> fun (V2916) -> {'Idris.Prelude.Left', V2916} end(E3427);
																					  {'Idris.Prelude.Right', E3428} ->
																					      fun (V2917) ->
																						      begin
																							V2919 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V2918) -> 'un--nfToCFType'(V0, V2865, V2, V2918) end, V2917))(V2870),
																							case V2919 of
																							  {'Idris.Prelude.Left', E3429} -> fun (V2920) -> {'Idris.Prelude.Left', V2920} end(E3429);
																							  {'Idris.Prelude.Right', E3430} -> fun (V2921) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V2908, V2921}} end(E3430);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3428);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3425, E3426);
																			  {'Idris.Compiler.CompileExpr.Struct', E3431, E3432} ->
																			      fun (V2922, V2923) ->
																				      begin
																					V2934 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V2924) ->
																											  case V2924 of
																											    {'Idris.Builtin.MkPair', E3433, E3434} ->
																												fun (V2925, V2926) ->
																													fun (V2927) ->
																														begin
																														  V2928 = ('Idris.Core.Normalise':'un--evalClosure'([], V2901, V2926))(V2927),
																														  case V2928 of
																														    {'Idris.Prelude.Left', E3435} -> fun (V2929) -> {'Idris.Prelude.Left', V2929} end(E3435);
																														    {'Idris.Prelude.Right', E3436} ->
																															fun (V2930) ->
																																begin
																																  V2931 = ('un--nfToCFType'(V0, V2865, 0, V2930))(V2927),
																																  case V2931 of
																																    {'Idris.Prelude.Left', E3437} -> fun (V2932) -> {'Idris.Prelude.Left', V2932} end(E3437);
																																    {'Idris.Prelude.Right', E3438} -> fun (V2933) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V2925, V2933}} end(E3438);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E3436);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E3433, E3434);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V2923))(V2870),
																					case V2934 of
																					  {'Idris.Prelude.Left', E3439} -> fun (V2935) -> {'Idris.Prelude.Left', V2935} end(E3439);
																					  {'Idris.Prelude.Right', E3440} -> fun (V2936) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V2922, V2936}} end(E3440);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3431, E3432);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E3441} ->
																			      fun (V2937) ->
																				      begin
																					V2938 = ('Idris.Core.Normalise':'un--evalClosure'([], V2901, V2937))(V2870),
																					case V2938 of
																					  {'Idris.Prelude.Left', E3442} -> fun (V2939) -> {'Idris.Prelude.Left', V2939} end(E3442);
																					  {'Idris.Prelude.Right', E3443} ->
																					      fun (V2940) ->
																						      begin
																							V2941 = ('un--nfToCFType'(V0, V2865, V2, V2940))(V2870),
																							case V2941 of
																							  {'Idris.Prelude.Left', E3444} -> fun (V2942) -> {'Idris.Prelude.Left', V2942} end(E3444);
																							  {'Idris.Prelude.Right', E3445} -> fun (V2943) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V2943}} end(E3445);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3443);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3441);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E3424);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E3422);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E3420);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E3414, E3415, E3416, E3417, E3418);
										    {'Idris.Core.Value.NType', E3446} -> fun (V2944) -> fun (V2945) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3446);
										    {'Idris.Core.Value.NErased', E3447, E3448} -> fun (V2946, V2947) -> fun (V2948) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3447, E3448);
										    _ ->
											fun (V2949) ->
												begin
												  V2978 = begin V2977 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2950) -> fun (V2951) -> fun (V2952) -> fun (V2953) -> fun (V2954) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2952, V2953, V2954) end end end end end, fun (V2955) -> fun (V2956) -> fun (V2957) -> V2956 end end end, fun (V2958) -> fun (V2959) -> fun (V2960) -> fun (V2961) -> fun (V2962) -> begin V2963 = V2960(V2962), begin V2964 = V2961(V2962), V2963(V2964) end end end end end end end}, fun (V2965) -> fun (V2966) -> fun (V2967) -> fun (V2968) -> fun (V2969) -> begin V2970 = V2967(V2969), (V2968(V2970))(V2969) end end end end end end, fun (V2971) -> fun (V2972) -> fun (V2973) -> begin V2974 = V2972(V2973), V2974(V2973) end end end end}, fun (V2975) -> fun (V2976) -> V2976 end end}, V0))(V2949), {'Idris.Prelude.Right', V2977} end,
												  case V2978 of
												    {'Idris.Prelude.Left', E3408} -> fun (V2979) -> {'Idris.Prelude.Left', V2979} end(E3408);
												    {'Idris.Prelude.Right', E3409} ->
													fun (V2980) ->
														begin
														  V2981 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V2980, {'Idris.Core.Env.Nil'}, V3, V2949),
														  case V2981 of
														    {'Idris.Prelude.Left', E3410} -> fun (V2982) -> {'Idris.Prelude.Left', V2982} end(E3410);
														    {'Idris.Prelude.Right', E3411} ->
															fun (V2983) ->
																begin
																  V2988 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2984) -> fun (V2985) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V2984, V2985) end end, fun (V2986) -> fun (V2987) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V2986, V2987) end end}, V2983, V2949),
																  case V2988 of
																    {'Idris.Prelude.Left', E3412} -> fun (V2989) -> {'Idris.Prelude.Left', V2989} end(E3412);
																    {'Idris.Prelude.Right', E3413} -> fun (V2990) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V2990))}, V2949) end(E3413);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E3411);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E3409);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E3404, E3405, E3406, E3407);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E3369, E3370, E3371, E3372, E3373} ->
									  fun (V2991, V2992, V2993, V2994, V2995) ->
										  fun (V2996) ->
											  begin
											    V3025 = begin V3024 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V2997) -> fun (V2998) -> fun (V2999) -> fun (V3000) -> fun (V3001) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V2999, V3000, V3001) end end end end end, fun (V3002) -> fun (V3003) -> fun (V3004) -> V3003 end end end, fun (V3005) -> fun (V3006) -> fun (V3007) -> fun (V3008) -> fun (V3009) -> begin V3010 = V3007(V3009), begin V3011 = V3008(V3009), V3010(V3011) end end end end end end end}, fun (V3012) -> fun (V3013) -> fun (V3014) -> fun (V3015) -> fun (V3016) -> begin V3017 = V3014(V3016), (V3015(V3017))(V3016) end end end end end end, fun (V3018) -> fun (V3019) -> fun (V3020) -> begin V3021 = V3019(V3020), V3021(V3020) end end end end}, fun (V3022) -> fun (V3023) -> V3023 end end}, V0))(V2996), {'Idris.Prelude.Right', V3024} end,
											    case V3025 of
											      {'Idris.Prelude.Left', E3374} -> fun (V3026) -> {'Idris.Prelude.Left', V3026} end(E3374);
											      {'Idris.Prelude.Right', E3375} ->
												  fun (V3027) ->
													  begin
													    V3032 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3028) -> fun (V3029) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3028, V3029) end end, fun (V3030) -> fun (V3031) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3030, V3031) end end}, V2992, V2996),
													    case V3032 of
													      {'Idris.Prelude.Left', E3376} -> fun (V3033) -> {'Idris.Prelude.Left', V3033} end(E3376);
													      {'Idris.Prelude.Right', E3377} ->
														  fun (V3034) ->
															  begin
															    V3035 = ('un--getNArgs'(V3027, V3034, V2995))(V2996),
															    case V3035 of
															      {'Idris.Prelude.Left', E3378} -> fun (V3036) -> {'Idris.Prelude.Left', V3036} end(E3378);
															      {'Idris.Prelude.Right', E3379} ->
																  fun (V3037) ->
																	  case V3037 of
																	    {'Idris.Compiler.CompileExpr.User', E3380, E3381} ->
																		fun (V3038, V3039) ->
																			begin
																			  V3041 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3040) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3027, V3040) end, V3039))(V2996),
																			  case V3041 of
																			    {'Idris.Prelude.Left', E3382} -> fun (V3042) -> {'Idris.Prelude.Left', V3042} end(E3382);
																			    {'Idris.Prelude.Right', E3383} ->
																				fun (V3043) ->
																					begin
																					  V3045 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3044) -> 'un--nfToCFType'(V0, V2991, V2, V3044) end, V3043))(V2996),
																					  case V3045 of
																					    {'Idris.Prelude.Left', E3384} -> fun (V3046) -> {'Idris.Prelude.Left', V3046} end(E3384);
																					    {'Idris.Prelude.Right', E3385} -> fun (V3047) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3034, V3047}} end(E3385);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3383);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3380, E3381);
																	    {'Idris.Compiler.CompileExpr.Struct', E3386, E3387} ->
																		fun (V3048, V3049) ->
																			begin
																			  V3060 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V3050) ->
																									    case V3050 of
																									      {'Idris.Builtin.MkPair', E3388, E3389} ->
																										  fun (V3051, V3052) ->
																											  fun (V3053) ->
																												  begin
																												    V3054 = ('Idris.Core.Normalise':'un--evalClosure'([], V3027, V3052))(V3053),
																												    case V3054 of
																												      {'Idris.Prelude.Left', E3390} -> fun (V3055) -> {'Idris.Prelude.Left', V3055} end(E3390);
																												      {'Idris.Prelude.Right', E3391} ->
																													  fun (V3056) ->
																														  begin
																														    V3057 = ('un--nfToCFType'(V0, V2991, 0, V3056))(V3053),
																														    case V3057 of
																														      {'Idris.Prelude.Left', E3392} -> fun (V3058) -> {'Idris.Prelude.Left', V3058} end(E3392);
																														      {'Idris.Prelude.Right', E3393} -> fun (V3059) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3051, V3059}} end(E3393);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E3391);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E3388, E3389);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V3049))(V2996),
																			  case V3060 of
																			    {'Idris.Prelude.Left', E3394} -> fun (V3061) -> {'Idris.Prelude.Left', V3061} end(E3394);
																			    {'Idris.Prelude.Right', E3395} -> fun (V3062) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3048, V3062}} end(E3395);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3386, E3387);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E3396} ->
																		fun (V3063) ->
																			begin
																			  V3064 = ('Idris.Core.Normalise':'un--evalClosure'([], V3027, V3063))(V2996),
																			  case V3064 of
																			    {'Idris.Prelude.Left', E3397} -> fun (V3065) -> {'Idris.Prelude.Left', V3065} end(E3397);
																			    {'Idris.Prelude.Right', E3398} ->
																				fun (V3066) ->
																					begin
																					  V3067 = ('un--nfToCFType'(V0, V2991, V2, V3066))(V2996),
																					  case V3067 of
																					    {'Idris.Prelude.Left', E3399} -> fun (V3068) -> {'Idris.Prelude.Left', V3068} end(E3399);
																					    {'Idris.Prelude.Right', E3400} -> fun (V3069) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3069}} end(E3400);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3398);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3396);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E3379);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3377);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3375);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E3369, E3370, E3371, E3372, E3373);
								      {'Idris.Core.Value.NType', E3401} -> fun (V3070) -> fun (V3071) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3401);
								      {'Idris.Core.Value.NErased', E3402, E3403} -> fun (V3072, V3073) -> fun (V3074) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3402, E3403);
								      _ ->
									  fun (V3075) ->
										  begin
										    V3104 = begin V3103 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3076) -> fun (V3077) -> fun (V3078) -> fun (V3079) -> fun (V3080) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3078, V3079, V3080) end end end end end, fun (V3081) -> fun (V3082) -> fun (V3083) -> V3082 end end end, fun (V3084) -> fun (V3085) -> fun (V3086) -> fun (V3087) -> fun (V3088) -> begin V3089 = V3086(V3088), begin V3090 = V3087(V3088), V3089(V3090) end end end end end end end}, fun (V3091) -> fun (V3092) -> fun (V3093) -> fun (V3094) -> fun (V3095) -> begin V3096 = V3093(V3095), (V3094(V3096))(V3095) end end end end end end, fun (V3097) -> fun (V3098) -> fun (V3099) -> begin V3100 = V3098(V3099), V3100(V3099) end end end end}, fun (V3101) -> fun (V3102) -> V3102 end end}, V0))(V3075), {'Idris.Prelude.Right', V3103} end,
										    case V3104 of
										      {'Idris.Prelude.Left', E3363} -> fun (V3105) -> {'Idris.Prelude.Left', V3105} end(E3363);
										      {'Idris.Prelude.Right', E3364} ->
											  fun (V3106) ->
												  begin
												    V3107 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3106, {'Idris.Core.Env.Nil'}, V3, V3075),
												    case V3107 of
												      {'Idris.Prelude.Left', E3365} -> fun (V3108) -> {'Idris.Prelude.Left', V3108} end(E3365);
												      {'Idris.Prelude.Right', E3366} ->
													  fun (V3109) ->
														  begin
														    V3114 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3110) -> fun (V3111) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3110, V3111) end end, fun (V3112) -> fun (V3113) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3112, V3113) end end}, V3109, V3075),
														    case V3114 of
														      {'Idris.Prelude.Left', E3367} -> fun (V3115) -> {'Idris.Prelude.Left', V3115} end(E3367);
														      {'Idris.Prelude.Right', E3368} -> fun (V3116) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3116))}, V3075) end(E3368);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3366);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E3364);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E3501, E3502, E3503, E3504} -> fun (V3117, V3118, V3119, V3120) -> fun (V3121) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V3117, <<"Function types not allowed in a foreign struct"/utf8>>}, V3121) end end(E3501, E3502, E3503, E3504);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E3466, E3467, E3468, E3469, E3470} ->
									  fun (V3122, V3123, V3124, V3125, V3126) ->
										  fun (V3127) ->
											  begin
											    V3156 = begin V3155 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3128) -> fun (V3129) -> fun (V3130) -> fun (V3131) -> fun (V3132) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3130, V3131, V3132) end end end end end, fun (V3133) -> fun (V3134) -> fun (V3135) -> V3134 end end end, fun (V3136) -> fun (V3137) -> fun (V3138) -> fun (V3139) -> fun (V3140) -> begin V3141 = V3138(V3140), begin V3142 = V3139(V3140), V3141(V3142) end end end end end end end}, fun (V3143) -> fun (V3144) -> fun (V3145) -> fun (V3146) -> fun (V3147) -> begin V3148 = V3145(V3147), (V3146(V3148))(V3147) end end end end end end, fun (V3149) -> fun (V3150) -> fun (V3151) -> begin V3152 = V3150(V3151), V3152(V3151) end end end end}, fun (V3153) -> fun (V3154) -> V3154 end end}, V0))(V3127), {'Idris.Prelude.Right', V3155} end,
											    case V3156 of
											      {'Idris.Prelude.Left', E3471} -> fun (V3157) -> {'Idris.Prelude.Left', V3157} end(E3471);
											      {'Idris.Prelude.Right', E3472} ->
												  fun (V3158) ->
													  begin
													    V3163 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3159) -> fun (V3160) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3159, V3160) end end, fun (V3161) -> fun (V3162) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3161, V3162) end end}, V3123, V3127),
													    case V3163 of
													      {'Idris.Prelude.Left', E3473} -> fun (V3164) -> {'Idris.Prelude.Left', V3164} end(E3473);
													      {'Idris.Prelude.Right', E3474} ->
														  fun (V3165) ->
															  begin
															    V3166 = ('un--getNArgs'(V3158, V3165, V3126))(V3127),
															    case V3166 of
															      {'Idris.Prelude.Left', E3475} -> fun (V3167) -> {'Idris.Prelude.Left', V3167} end(E3475);
															      {'Idris.Prelude.Right', E3476} ->
																  fun (V3168) ->
																	  case V3168 of
																	    {'Idris.Compiler.CompileExpr.User', E3477, E3478} ->
																		fun (V3169, V3170) ->
																			begin
																			  V3172 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3171) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3158, V3171) end, V3170))(V3127),
																			  case V3172 of
																			    {'Idris.Prelude.Left', E3479} -> fun (V3173) -> {'Idris.Prelude.Left', V3173} end(E3479);
																			    {'Idris.Prelude.Right', E3480} ->
																				fun (V3174) ->
																					begin
																					  V3176 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3175) -> 'un--nfToCFType'(V0, V3122, V2, V3175) end, V3174))(V3127),
																					  case V3176 of
																					    {'Idris.Prelude.Left', E3481} -> fun (V3177) -> {'Idris.Prelude.Left', V3177} end(E3481);
																					    {'Idris.Prelude.Right', E3482} -> fun (V3178) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3165, V3178}} end(E3482);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3480);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3477, E3478);
																	    {'Idris.Compiler.CompileExpr.Struct', E3483, E3484} ->
																		fun (V3179, V3180) ->
																			begin
																			  V3191 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V3181) ->
																									    case V3181 of
																									      {'Idris.Builtin.MkPair', E3485, E3486} ->
																										  fun (V3182, V3183) ->
																											  fun (V3184) ->
																												  begin
																												    V3185 = ('Idris.Core.Normalise':'un--evalClosure'([], V3158, V3183))(V3184),
																												    case V3185 of
																												      {'Idris.Prelude.Left', E3487} -> fun (V3186) -> {'Idris.Prelude.Left', V3186} end(E3487);
																												      {'Idris.Prelude.Right', E3488} ->
																													  fun (V3187) ->
																														  begin
																														    V3188 = ('un--nfToCFType'(V0, V3122, 0, V3187))(V3184),
																														    case V3188 of
																														      {'Idris.Prelude.Left', E3489} -> fun (V3189) -> {'Idris.Prelude.Left', V3189} end(E3489);
																														      {'Idris.Prelude.Right', E3490} -> fun (V3190) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3182, V3190}} end(E3490);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E3488);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E3485, E3486);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V3180))(V3127),
																			  case V3191 of
																			    {'Idris.Prelude.Left', E3491} -> fun (V3192) -> {'Idris.Prelude.Left', V3192} end(E3491);
																			    {'Idris.Prelude.Right', E3492} -> fun (V3193) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3179, V3193}} end(E3492);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3483, E3484);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E3493} ->
																		fun (V3194) ->
																			begin
																			  V3195 = ('Idris.Core.Normalise':'un--evalClosure'([], V3158, V3194))(V3127),
																			  case V3195 of
																			    {'Idris.Prelude.Left', E3494} -> fun (V3196) -> {'Idris.Prelude.Left', V3196} end(E3494);
																			    {'Idris.Prelude.Right', E3495} ->
																				fun (V3197) ->
																					begin
																					  V3198 = ('un--nfToCFType'(V0, V3122, V2, V3197))(V3127),
																					  case V3198 of
																					    {'Idris.Prelude.Left', E3496} -> fun (V3199) -> {'Idris.Prelude.Left', V3199} end(E3496);
																					    {'Idris.Prelude.Right', E3497} -> fun (V3200) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3200}} end(E3497);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3495);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3493);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E3476);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3474);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3472);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E3466, E3467, E3468, E3469, E3470);
								      {'Idris.Core.Value.NType', E3498} -> fun (V3201) -> fun (V3202) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3498);
								      {'Idris.Core.Value.NErased', E3499, E3500} -> fun (V3203, V3204) -> fun (V3205) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3499, E3500);
								      _ ->
									  fun (V3206) ->
										  begin
										    V3235 = begin V3234 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3207) -> fun (V3208) -> fun (V3209) -> fun (V3210) -> fun (V3211) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3209, V3210, V3211) end end end end end, fun (V3212) -> fun (V3213) -> fun (V3214) -> V3213 end end end, fun (V3215) -> fun (V3216) -> fun (V3217) -> fun (V3218) -> fun (V3219) -> begin V3220 = V3217(V3219), begin V3221 = V3218(V3219), V3220(V3221) end end end end end end end}, fun (V3222) -> fun (V3223) -> fun (V3224) -> fun (V3225) -> fun (V3226) -> begin V3227 = V3224(V3226), (V3225(V3227))(V3226) end end end end end end, fun (V3228) -> fun (V3229) -> fun (V3230) -> begin V3231 = V3229(V3230), V3231(V3230) end end end end}, fun (V3232) -> fun (V3233) -> V3233 end end}, V0))(V3206), {'Idris.Prelude.Right', V3234} end,
										    case V3235 of
										      {'Idris.Prelude.Left', E3460} -> fun (V3236) -> {'Idris.Prelude.Left', V3236} end(E3460);
										      {'Idris.Prelude.Right', E3461} ->
											  fun (V3237) ->
												  begin
												    V3238 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3237, {'Idris.Core.Env.Nil'}, V3, V3206),
												    case V3238 of
												      {'Idris.Prelude.Left', E3462} -> fun (V3239) -> {'Idris.Prelude.Left', V3239} end(E3462);
												      {'Idris.Prelude.Right', E3463} ->
													  fun (V3240) ->
														  begin
														    V3245 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3241) -> fun (V3242) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3241, V3242) end end, fun (V3243) -> fun (V3244) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3243, V3244) end end}, V3240, V3206),
														    case V3245 of
														      {'Idris.Prelude.Left', E3464} -> fun (V3246) -> {'Idris.Prelude.Left', V3246} end(E3464);
														      {'Idris.Prelude.Right', E3465} -> fun (V3247) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3247))}, V3206) end(E3465);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3463);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E3461);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E3328, E3329, E3330, E3331, E3332} ->
								    fun (V3248, V3249, V3250, V3251, V3252) ->
									    fun (V3253) ->
										    begin
										      V3282 = begin V3281 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3254) -> fun (V3255) -> fun (V3256) -> fun (V3257) -> fun (V3258) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3256, V3257, V3258) end end end end end, fun (V3259) -> fun (V3260) -> fun (V3261) -> V3260 end end end, fun (V3262) -> fun (V3263) -> fun (V3264) -> fun (V3265) -> fun (V3266) -> begin V3267 = V3264(V3266), begin V3268 = V3265(V3266), V3267(V3268) end end end end end end end}, fun (V3269) -> fun (V3270) -> fun (V3271) -> fun (V3272) -> fun (V3273) -> begin V3274 = V3271(V3273), (V3272(V3274))(V3273) end end end end end end, fun (V3275) -> fun (V3276) -> fun (V3277) -> begin V3278 = V3276(V3277), V3278(V3277) end end end end}, fun (V3279) -> fun (V3280) -> V3280 end end}, V0))(V3253), {'Idris.Prelude.Right', V3281} end,
										      case V3282 of
											{'Idris.Prelude.Left', E3333} -> fun (V3283) -> {'Idris.Prelude.Left', V3283} end(E3333);
											{'Idris.Prelude.Right', E3334} ->
											    fun (V3284) ->
												    begin
												      V3289 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3285) -> fun (V3286) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3285, V3286) end end, fun (V3287) -> fun (V3288) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3287, V3288) end end}, V3249, V3253),
												      case V3289 of
													{'Idris.Prelude.Left', E3335} -> fun (V3290) -> {'Idris.Prelude.Left', V3290} end(E3335);
													{'Idris.Prelude.Right', E3336} ->
													    fun (V3291) ->
														    begin
														      V3292 = ('un--getNArgs'(V3284, V3291, V3252))(V3253),
														      case V3292 of
															{'Idris.Prelude.Left', E3337} -> fun (V3293) -> {'Idris.Prelude.Left', V3293} end(E3337);
															{'Idris.Prelude.Right', E3338} ->
															    fun (V3294) ->
																    case V3294 of
																      {'Idris.Compiler.CompileExpr.User', E3339, E3340} ->
																	  fun (V3295, V3296) ->
																		  begin
																		    V3298 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3297) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3284, V3297) end, V3296))(V3253),
																		    case V3298 of
																		      {'Idris.Prelude.Left', E3341} -> fun (V3299) -> {'Idris.Prelude.Left', V3299} end(E3341);
																		      {'Idris.Prelude.Right', E3342} ->
																			  fun (V3300) ->
																				  begin
																				    V3302 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3301) -> 'un--nfToCFType'(V0, V3248, V2, V3301) end, V3300))(V3253),
																				    case V3302 of
																				      {'Idris.Prelude.Left', E3343} -> fun (V3303) -> {'Idris.Prelude.Left', V3303} end(E3343);
																				      {'Idris.Prelude.Right', E3344} -> fun (V3304) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3291, V3304}} end(E3344);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E3342);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3339, E3340);
																      {'Idris.Compiler.CompileExpr.Struct', E3345, E3346} ->
																	  fun (V3305, V3306) ->
																		  begin
																		    V3317 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V3307) ->
																								      case V3307 of
																									{'Idris.Builtin.MkPair', E3347, E3348} ->
																									    fun (V3308, V3309) ->
																										    fun (V3310) ->
																											    begin
																											      V3311 = ('Idris.Core.Normalise':'un--evalClosure'([], V3284, V3309))(V3310),
																											      case V3311 of
																												{'Idris.Prelude.Left', E3349} -> fun (V3312) -> {'Idris.Prelude.Left', V3312} end(E3349);
																												{'Idris.Prelude.Right', E3350} ->
																												    fun (V3313) ->
																													    begin
																													      V3314 = ('un--nfToCFType'(V0, V3248, 0, V3313))(V3310),
																													      case V3314 of
																														{'Idris.Prelude.Left', E3351} -> fun (V3315) -> {'Idris.Prelude.Left', V3315} end(E3351);
																														{'Idris.Prelude.Right', E3352} -> fun (V3316) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3308, V3316}} end(E3352);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E3350);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E3347, E3348);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V3306))(V3253),
																		    case V3317 of
																		      {'Idris.Prelude.Left', E3353} -> fun (V3318) -> {'Idris.Prelude.Left', V3318} end(E3353);
																		      {'Idris.Prelude.Right', E3354} -> fun (V3319) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3305, V3319}} end(E3354);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3345, E3346);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E3355} ->
																	  fun (V3320) ->
																		  begin
																		    V3321 = ('Idris.Core.Normalise':'un--evalClosure'([], V3284, V3320))(V3253),
																		    case V3321 of
																		      {'Idris.Prelude.Left', E3356} -> fun (V3322) -> {'Idris.Prelude.Left', V3322} end(E3356);
																		      {'Idris.Prelude.Right', E3357} ->
																			  fun (V3323) ->
																				  begin
																				    V3324 = ('un--nfToCFType'(V0, V3248, V2, V3323))(V3253),
																				    case V3324 of
																				      {'Idris.Prelude.Left', E3358} -> fun (V3325) -> {'Idris.Prelude.Left', V3325} end(E3358);
																				      {'Idris.Prelude.Right', E3359} -> fun (V3326) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3326}} end(E3359);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E3357);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3355);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E3338);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E3336);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E3334);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E3328, E3329, E3330, E3331, E3332);
								{'Idris.Core.Value.NType', E3360} -> fun (V3327) -> fun (V3328) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3360);
								{'Idris.Core.Value.NErased', E3361, E3362} -> fun (V3329, V3330) -> fun (V3331) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3361, E3362);
								_ ->
								    fun (V3332) ->
									    begin
									      V3361 = begin V3360 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3333) -> fun (V3334) -> fun (V3335) -> fun (V3336) -> fun (V3337) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3335, V3336, V3337) end end end end end, fun (V3338) -> fun (V3339) -> fun (V3340) -> V3339 end end end, fun (V3341) -> fun (V3342) -> fun (V3343) -> fun (V3344) -> fun (V3345) -> begin V3346 = V3343(V3345), begin V3347 = V3344(V3345), V3346(V3347) end end end end end end end}, fun (V3348) -> fun (V3349) -> fun (V3350) -> fun (V3351) -> fun (V3352) -> begin V3353 = V3350(V3352), (V3351(V3353))(V3352) end end end end end end, fun (V3354) -> fun (V3355) -> fun (V3356) -> begin V3357 = V3355(V3356), V3357(V3356) end end end end}, fun (V3358) -> fun (V3359) -> V3359 end end}, V0))(V3332), {'Idris.Prelude.Right', V3360} end,
									      case V3361 of
										{'Idris.Prelude.Left', E3322} -> fun (V3362) -> {'Idris.Prelude.Left', V3362} end(E3322);
										{'Idris.Prelude.Right', E3323} ->
										    fun (V3363) ->
											    begin
											      V3364 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3363, {'Idris.Core.Env.Nil'}, V3, V3332),
											      case V3364 of
												{'Idris.Prelude.Left', E3324} -> fun (V3365) -> {'Idris.Prelude.Left', V3365} end(E3324);
												{'Idris.Prelude.Right', E3325} ->
												    fun (V3366) ->
													    begin
													      V3371 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3367) -> fun (V3368) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3367, V3368) end end, fun (V3369) -> fun (V3370) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3369, V3370) end end}, V3366, V3332),
													      case V3371 of
														{'Idris.Prelude.Left', E3326} -> fun (V3372) -> {'Idris.Prelude.Left', V3372} end(E3326);
														{'Idris.Prelude.Right', E3327} -> fun (V3373) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3373))}, V3332) end(E3327);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E3325);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E3323);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					    end
				    end(E3320, E3321);
				_ ->
				    case V3 of
				      {'Idris.Core.Value.NPrimVal', E3135, E3136} ->
					  fun (V3374, V3375) ->
						  case V3375 of
						    {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V3376) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
						    {'Idris.Core.TT.CharType'} -> fun () -> fun (V3377) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
						    {'Idris.Core.TT.WorldType'} -> fun () -> fun (V3378) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E3219, E3220, E3221, E3222} ->
								    fun (V3379, V3380, V3381, V3382) ->
									    case V3381 of
									      {'Idris.Core.TT.Pi', E3264, E3265, E3266} ->
										  fun (V3383, V3384, V3385) ->
											  fun (V3386) ->
												  begin
												    V3415 = begin V3414 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3387) -> fun (V3388) -> fun (V3389) -> fun (V3390) -> fun (V3391) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3389, V3390, V3391) end end end end end, fun (V3392) -> fun (V3393) -> fun (V3394) -> V3393 end end end, fun (V3395) -> fun (V3396) -> fun (V3397) -> fun (V3398) -> fun (V3399) -> begin V3400 = V3397(V3399), begin V3401 = V3398(V3399), V3400(V3401) end end end end end end end}, fun (V3402) -> fun (V3403) -> fun (V3404) -> fun (V3405) -> fun (V3406) -> begin V3407 = V3404(V3406), (V3405(V3407))(V3406) end end end end end end, fun (V3408) -> fun (V3409) -> fun (V3410) -> begin V3411 = V3409(V3410), V3411(V3410) end end end end}, fun (V3412) -> fun (V3413) -> V3413 end end}, V0))(V3386), {'Idris.Prelude.Right', V3414} end,
												    case V3415 of
												      {'Idris.Prelude.Left', E3267} -> fun (V3416) -> {'Idris.Prelude.Left', V3416} end(E3267);
												      {'Idris.Prelude.Right', E3268} ->
													  fun (V3417) ->
														  begin
														    V3418 = ('un--nfToCFType'(V0, V3379, 1, V3385))(V3386),
														    case V3418 of
														      {'Idris.Prelude.Left', E3269} -> fun (V3419) -> {'Idris.Prelude.Left', V3419} end(E3269);
														      {'Idris.Prelude.Right', E3270} ->
															  fun (V3420) ->
																  begin
																    V3421 = ((V3382(V3417))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3379, 1})))(V3386),
																    case V3421 of
																      {'Idris.Prelude.Left', E3271} -> fun (V3422) -> {'Idris.Prelude.Left', V3422} end(E3271);
																      {'Idris.Prelude.Right', E3272} ->
																	  fun (V3423) ->
																		  begin
																		    V3424 = ('un--nfToCFType'(V0, V3379, 1, V3423))(V3386),
																		    case V3424 of
																		      {'Idris.Prelude.Left', E3273} -> fun (V3425) -> {'Idris.Prelude.Left', V3425} end(E3273);
																		      {'Idris.Prelude.Right', E3274} -> fun (V3426) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V3420, V3426}} end(E3274);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3272);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E3270);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3268);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E3264, E3265, E3266);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E3229, E3230, E3231, E3232, E3233} ->
											fun (V3427, V3428, V3429, V3430, V3431) ->
												fun (V3432) ->
													begin
													  V3461 = begin V3460 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3433) -> fun (V3434) -> fun (V3435) -> fun (V3436) -> fun (V3437) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3435, V3436, V3437) end end end end end, fun (V3438) -> fun (V3439) -> fun (V3440) -> V3439 end end end, fun (V3441) -> fun (V3442) -> fun (V3443) -> fun (V3444) -> fun (V3445) -> begin V3446 = V3443(V3445), begin V3447 = V3444(V3445), V3446(V3447) end end end end end end end}, fun (V3448) -> fun (V3449) -> fun (V3450) -> fun (V3451) -> fun (V3452) -> begin V3453 = V3450(V3452), (V3451(V3453))(V3452) end end end end end end, fun (V3454) -> fun (V3455) -> fun (V3456) -> begin V3457 = V3455(V3456), V3457(V3456) end end end end}, fun (V3458) -> fun (V3459) -> V3459 end end}, V0))(V3432), {'Idris.Prelude.Right', V3460} end,
													  case V3461 of
													    {'Idris.Prelude.Left', E3234} -> fun (V3462) -> {'Idris.Prelude.Left', V3462} end(E3234);
													    {'Idris.Prelude.Right', E3235} ->
														fun (V3463) ->
															begin
															  V3468 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3464) -> fun (V3465) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3464, V3465) end end, fun (V3466) -> fun (V3467) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3466, V3467) end end}, V3428, V3432),
															  case V3468 of
															    {'Idris.Prelude.Left', E3236} -> fun (V3469) -> {'Idris.Prelude.Left', V3469} end(E3236);
															    {'Idris.Prelude.Right', E3237} ->
																fun (V3470) ->
																	begin
																	  V3471 = ('un--getNArgs'(V3463, V3470, V3431))(V3432),
																	  case V3471 of
																	    {'Idris.Prelude.Left', E3238} -> fun (V3472) -> {'Idris.Prelude.Left', V3472} end(E3238);
																	    {'Idris.Prelude.Right', E3239} ->
																		fun (V3473) ->
																			case V3473 of
																			  {'Idris.Compiler.CompileExpr.User', E3240, E3241} ->
																			      fun (V3474, V3475) ->
																				      begin
																					V3477 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3476) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3463, V3476) end, V3475))(V3432),
																					case V3477 of
																					  {'Idris.Prelude.Left', E3242} -> fun (V3478) -> {'Idris.Prelude.Left', V3478} end(E3242);
																					  {'Idris.Prelude.Right', E3243} ->
																					      fun (V3479) ->
																						      begin
																							V3481 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3480) -> 'un--nfToCFType'(V0, V3427, V2, V3480) end, V3479))(V3432),
																							case V3481 of
																							  {'Idris.Prelude.Left', E3244} -> fun (V3482) -> {'Idris.Prelude.Left', V3482} end(E3244);
																							  {'Idris.Prelude.Right', E3245} -> fun (V3483) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3470, V3483}} end(E3245);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3243);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3240, E3241);
																			  {'Idris.Compiler.CompileExpr.Struct', E3246, E3247} ->
																			      fun (V3484, V3485) ->
																				      begin
																					V3496 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V3486) ->
																											  case V3486 of
																											    {'Idris.Builtin.MkPair', E3248, E3249} ->
																												fun (V3487, V3488) ->
																													fun (V3489) ->
																														begin
																														  V3490 = ('Idris.Core.Normalise':'un--evalClosure'([], V3463, V3488))(V3489),
																														  case V3490 of
																														    {'Idris.Prelude.Left', E3250} -> fun (V3491) -> {'Idris.Prelude.Left', V3491} end(E3250);
																														    {'Idris.Prelude.Right', E3251} ->
																															fun (V3492) ->
																																begin
																																  V3493 = ('un--nfToCFType'(V0, V3427, 0, V3492))(V3489),
																																  case V3493 of
																																    {'Idris.Prelude.Left', E3252} -> fun (V3494) -> {'Idris.Prelude.Left', V3494} end(E3252);
																																    {'Idris.Prelude.Right', E3253} -> fun (V3495) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3487, V3495}} end(E3253);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E3251);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E3248, E3249);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V3485))(V3432),
																					case V3496 of
																					  {'Idris.Prelude.Left', E3254} -> fun (V3497) -> {'Idris.Prelude.Left', V3497} end(E3254);
																					  {'Idris.Prelude.Right', E3255} -> fun (V3498) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3484, V3498}} end(E3255);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3246, E3247);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E3256} ->
																			      fun (V3499) ->
																				      begin
																					V3500 = ('Idris.Core.Normalise':'un--evalClosure'([], V3463, V3499))(V3432),
																					case V3500 of
																					  {'Idris.Prelude.Left', E3257} -> fun (V3501) -> {'Idris.Prelude.Left', V3501} end(E3257);
																					  {'Idris.Prelude.Right', E3258} ->
																					      fun (V3502) ->
																						      begin
																							V3503 = ('un--nfToCFType'(V0, V3427, V2, V3502))(V3432),
																							case V3503 of
																							  {'Idris.Prelude.Left', E3259} -> fun (V3504) -> {'Idris.Prelude.Left', V3504} end(E3259);
																							  {'Idris.Prelude.Right', E3260} -> fun (V3505) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3505}} end(E3260);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E3258);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E3256);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E3239);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E3237);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E3235);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E3229, E3230, E3231, E3232, E3233);
										    {'Idris.Core.Value.NType', E3261} -> fun (V3506) -> fun (V3507) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3261);
										    {'Idris.Core.Value.NErased', E3262, E3263} -> fun (V3508, V3509) -> fun (V3510) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3262, E3263);
										    _ ->
											fun (V3511) ->
												begin
												  V3540 = begin V3539 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3512) -> fun (V3513) -> fun (V3514) -> fun (V3515) -> fun (V3516) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3514, V3515, V3516) end end end end end, fun (V3517) -> fun (V3518) -> fun (V3519) -> V3518 end end end, fun (V3520) -> fun (V3521) -> fun (V3522) -> fun (V3523) -> fun (V3524) -> begin V3525 = V3522(V3524), begin V3526 = V3523(V3524), V3525(V3526) end end end end end end end}, fun (V3527) -> fun (V3528) -> fun (V3529) -> fun (V3530) -> fun (V3531) -> begin V3532 = V3529(V3531), (V3530(V3532))(V3531) end end end end end end, fun (V3533) -> fun (V3534) -> fun (V3535) -> begin V3536 = V3534(V3535), V3536(V3535) end end end end}, fun (V3537) -> fun (V3538) -> V3538 end end}, V0))(V3511), {'Idris.Prelude.Right', V3539} end,
												  case V3540 of
												    {'Idris.Prelude.Left', E3223} -> fun (V3541) -> {'Idris.Prelude.Left', V3541} end(E3223);
												    {'Idris.Prelude.Right', E3224} ->
													fun (V3542) ->
														begin
														  V3543 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3542, {'Idris.Core.Env.Nil'}, V3, V3511),
														  case V3543 of
														    {'Idris.Prelude.Left', E3225} -> fun (V3544) -> {'Idris.Prelude.Left', V3544} end(E3225);
														    {'Idris.Prelude.Right', E3226} ->
															fun (V3545) ->
																begin
																  V3550 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3546) -> fun (V3547) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3546, V3547) end end, fun (V3548) -> fun (V3549) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3548, V3549) end end}, V3545, V3511),
																  case V3550 of
																    {'Idris.Prelude.Left', E3227} -> fun (V3551) -> {'Idris.Prelude.Left', V3551} end(E3227);
																    {'Idris.Prelude.Right', E3228} -> fun (V3552) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3552))}, V3511) end(E3228);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E3226);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E3224);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E3219, E3220, E3221, E3222);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E3184, E3185, E3186, E3187, E3188} ->
									  fun (V3553, V3554, V3555, V3556, V3557) ->
										  fun (V3558) ->
											  begin
											    V3587 = begin V3586 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3559) -> fun (V3560) -> fun (V3561) -> fun (V3562) -> fun (V3563) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3561, V3562, V3563) end end end end end, fun (V3564) -> fun (V3565) -> fun (V3566) -> V3565 end end end, fun (V3567) -> fun (V3568) -> fun (V3569) -> fun (V3570) -> fun (V3571) -> begin V3572 = V3569(V3571), begin V3573 = V3570(V3571), V3572(V3573) end end end end end end end}, fun (V3574) -> fun (V3575) -> fun (V3576) -> fun (V3577) -> fun (V3578) -> begin V3579 = V3576(V3578), (V3577(V3579))(V3578) end end end end end end, fun (V3580) -> fun (V3581) -> fun (V3582) -> begin V3583 = V3581(V3582), V3583(V3582) end end end end}, fun (V3584) -> fun (V3585) -> V3585 end end}, V0))(V3558), {'Idris.Prelude.Right', V3586} end,
											    case V3587 of
											      {'Idris.Prelude.Left', E3189} -> fun (V3588) -> {'Idris.Prelude.Left', V3588} end(E3189);
											      {'Idris.Prelude.Right', E3190} ->
												  fun (V3589) ->
													  begin
													    V3594 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3590) -> fun (V3591) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3590, V3591) end end, fun (V3592) -> fun (V3593) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3592, V3593) end end}, V3554, V3558),
													    case V3594 of
													      {'Idris.Prelude.Left', E3191} -> fun (V3595) -> {'Idris.Prelude.Left', V3595} end(E3191);
													      {'Idris.Prelude.Right', E3192} ->
														  fun (V3596) ->
															  begin
															    V3597 = ('un--getNArgs'(V3589, V3596, V3557))(V3558),
															    case V3597 of
															      {'Idris.Prelude.Left', E3193} -> fun (V3598) -> {'Idris.Prelude.Left', V3598} end(E3193);
															      {'Idris.Prelude.Right', E3194} ->
																  fun (V3599) ->
																	  case V3599 of
																	    {'Idris.Compiler.CompileExpr.User', E3195, E3196} ->
																		fun (V3600, V3601) ->
																			begin
																			  V3603 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3602) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3589, V3602) end, V3601))(V3558),
																			  case V3603 of
																			    {'Idris.Prelude.Left', E3197} -> fun (V3604) -> {'Idris.Prelude.Left', V3604} end(E3197);
																			    {'Idris.Prelude.Right', E3198} ->
																				fun (V3605) ->
																					begin
																					  V3607 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3606) -> 'un--nfToCFType'(V0, V3553, V2, V3606) end, V3605))(V3558),
																					  case V3607 of
																					    {'Idris.Prelude.Left', E3199} -> fun (V3608) -> {'Idris.Prelude.Left', V3608} end(E3199);
																					    {'Idris.Prelude.Right', E3200} -> fun (V3609) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3596, V3609}} end(E3200);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3198);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3195, E3196);
																	    {'Idris.Compiler.CompileExpr.Struct', E3201, E3202} ->
																		fun (V3610, V3611) ->
																			begin
																			  V3622 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V3612) ->
																									    case V3612 of
																									      {'Idris.Builtin.MkPair', E3203, E3204} ->
																										  fun (V3613, V3614) ->
																											  fun (V3615) ->
																												  begin
																												    V3616 = ('Idris.Core.Normalise':'un--evalClosure'([], V3589, V3614))(V3615),
																												    case V3616 of
																												      {'Idris.Prelude.Left', E3205} -> fun (V3617) -> {'Idris.Prelude.Left', V3617} end(E3205);
																												      {'Idris.Prelude.Right', E3206} ->
																													  fun (V3618) ->
																														  begin
																														    V3619 = ('un--nfToCFType'(V0, V3553, 0, V3618))(V3615),
																														    case V3619 of
																														      {'Idris.Prelude.Left', E3207} -> fun (V3620) -> {'Idris.Prelude.Left', V3620} end(E3207);
																														      {'Idris.Prelude.Right', E3208} -> fun (V3621) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3613, V3621}} end(E3208);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E3206);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E3203, E3204);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V3611))(V3558),
																			  case V3622 of
																			    {'Idris.Prelude.Left', E3209} -> fun (V3623) -> {'Idris.Prelude.Left', V3623} end(E3209);
																			    {'Idris.Prelude.Right', E3210} -> fun (V3624) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3610, V3624}} end(E3210);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3201, E3202);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E3211} ->
																		fun (V3625) ->
																			begin
																			  V3626 = ('Idris.Core.Normalise':'un--evalClosure'([], V3589, V3625))(V3558),
																			  case V3626 of
																			    {'Idris.Prelude.Left', E3212} -> fun (V3627) -> {'Idris.Prelude.Left', V3627} end(E3212);
																			    {'Idris.Prelude.Right', E3213} ->
																				fun (V3628) ->
																					begin
																					  V3629 = ('un--nfToCFType'(V0, V3553, V2, V3628))(V3558),
																					  case V3629 of
																					    {'Idris.Prelude.Left', E3214} -> fun (V3630) -> {'Idris.Prelude.Left', V3630} end(E3214);
																					    {'Idris.Prelude.Right', E3215} -> fun (V3631) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3631}} end(E3215);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3213);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3211);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E3194);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3192);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3190);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E3184, E3185, E3186, E3187, E3188);
								      {'Idris.Core.Value.NType', E3216} -> fun (V3632) -> fun (V3633) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3216);
								      {'Idris.Core.Value.NErased', E3217, E3218} -> fun (V3634, V3635) -> fun (V3636) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3217, E3218);
								      _ ->
									  fun (V3637) ->
										  begin
										    V3666 = begin V3665 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3638) -> fun (V3639) -> fun (V3640) -> fun (V3641) -> fun (V3642) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3640, V3641, V3642) end end end end end, fun (V3643) -> fun (V3644) -> fun (V3645) -> V3644 end end end, fun (V3646) -> fun (V3647) -> fun (V3648) -> fun (V3649) -> fun (V3650) -> begin V3651 = V3648(V3650), begin V3652 = V3649(V3650), V3651(V3652) end end end end end end end}, fun (V3653) -> fun (V3654) -> fun (V3655) -> fun (V3656) -> fun (V3657) -> begin V3658 = V3655(V3657), (V3656(V3658))(V3657) end end end end end end, fun (V3659) -> fun (V3660) -> fun (V3661) -> begin V3662 = V3660(V3661), V3662(V3661) end end end end}, fun (V3663) -> fun (V3664) -> V3664 end end}, V0))(V3637), {'Idris.Prelude.Right', V3665} end,
										    case V3666 of
										      {'Idris.Prelude.Left', E3178} -> fun (V3667) -> {'Idris.Prelude.Left', V3667} end(E3178);
										      {'Idris.Prelude.Right', E3179} ->
											  fun (V3668) ->
												  begin
												    V3669 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3668, {'Idris.Core.Env.Nil'}, V3, V3637),
												    case V3669 of
												      {'Idris.Prelude.Left', E3180} -> fun (V3670) -> {'Idris.Prelude.Left', V3670} end(E3180);
												      {'Idris.Prelude.Right', E3181} ->
													  fun (V3671) ->
														  begin
														    V3676 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3672) -> fun (V3673) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3672, V3673) end end, fun (V3674) -> fun (V3675) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3674, V3675) end end}, V3671, V3637),
														    case V3676 of
														      {'Idris.Prelude.Left', E3182} -> fun (V3677) -> {'Idris.Prelude.Left', V3677} end(E3182);
														      {'Idris.Prelude.Right', E3183} -> fun (V3678) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3678))}, V3637) end(E3183);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3181);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E3179);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E3316, E3317, E3318, E3319} -> fun (V3679, V3680, V3681, V3682) -> fun (V3683) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V3679, <<"Function types not allowed in a foreign struct"/utf8>>}, V3683) end end(E3316, E3317, E3318, E3319);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E3281, E3282, E3283, E3284, E3285} ->
									  fun (V3684, V3685, V3686, V3687, V3688) ->
										  fun (V3689) ->
											  begin
											    V3718 = begin V3717 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3690) -> fun (V3691) -> fun (V3692) -> fun (V3693) -> fun (V3694) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3692, V3693, V3694) end end end end end, fun (V3695) -> fun (V3696) -> fun (V3697) -> V3696 end end end, fun (V3698) -> fun (V3699) -> fun (V3700) -> fun (V3701) -> fun (V3702) -> begin V3703 = V3700(V3702), begin V3704 = V3701(V3702), V3703(V3704) end end end end end end end}, fun (V3705) -> fun (V3706) -> fun (V3707) -> fun (V3708) -> fun (V3709) -> begin V3710 = V3707(V3709), (V3708(V3710))(V3709) end end end end end end, fun (V3711) -> fun (V3712) -> fun (V3713) -> begin V3714 = V3712(V3713), V3714(V3713) end end end end}, fun (V3715) -> fun (V3716) -> V3716 end end}, V0))(V3689), {'Idris.Prelude.Right', V3717} end,
											    case V3718 of
											      {'Idris.Prelude.Left', E3286} -> fun (V3719) -> {'Idris.Prelude.Left', V3719} end(E3286);
											      {'Idris.Prelude.Right', E3287} ->
												  fun (V3720) ->
													  begin
													    V3725 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3721) -> fun (V3722) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3721, V3722) end end, fun (V3723) -> fun (V3724) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3723, V3724) end end}, V3685, V3689),
													    case V3725 of
													      {'Idris.Prelude.Left', E3288} -> fun (V3726) -> {'Idris.Prelude.Left', V3726} end(E3288);
													      {'Idris.Prelude.Right', E3289} ->
														  fun (V3727) ->
															  begin
															    V3728 = ('un--getNArgs'(V3720, V3727, V3688))(V3689),
															    case V3728 of
															      {'Idris.Prelude.Left', E3290} -> fun (V3729) -> {'Idris.Prelude.Left', V3729} end(E3290);
															      {'Idris.Prelude.Right', E3291} ->
																  fun (V3730) ->
																	  case V3730 of
																	    {'Idris.Compiler.CompileExpr.User', E3292, E3293} ->
																		fun (V3731, V3732) ->
																			begin
																			  V3734 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3733) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3720, V3733) end, V3732))(V3689),
																			  case V3734 of
																			    {'Idris.Prelude.Left', E3294} -> fun (V3735) -> {'Idris.Prelude.Left', V3735} end(E3294);
																			    {'Idris.Prelude.Right', E3295} ->
																				fun (V3736) ->
																					begin
																					  V3738 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3737) -> 'un--nfToCFType'(V0, V3684, V2, V3737) end, V3736))(V3689),
																					  case V3738 of
																					    {'Idris.Prelude.Left', E3296} -> fun (V3739) -> {'Idris.Prelude.Left', V3739} end(E3296);
																					    {'Idris.Prelude.Right', E3297} -> fun (V3740) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3727, V3740}} end(E3297);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3295);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3292, E3293);
																	    {'Idris.Compiler.CompileExpr.Struct', E3298, E3299} ->
																		fun (V3741, V3742) ->
																			begin
																			  V3753 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V3743) ->
																									    case V3743 of
																									      {'Idris.Builtin.MkPair', E3300, E3301} ->
																										  fun (V3744, V3745) ->
																											  fun (V3746) ->
																												  begin
																												    V3747 = ('Idris.Core.Normalise':'un--evalClosure'([], V3720, V3745))(V3746),
																												    case V3747 of
																												      {'Idris.Prelude.Left', E3302} -> fun (V3748) -> {'Idris.Prelude.Left', V3748} end(E3302);
																												      {'Idris.Prelude.Right', E3303} ->
																													  fun (V3749) ->
																														  begin
																														    V3750 = ('un--nfToCFType'(V0, V3684, 0, V3749))(V3746),
																														    case V3750 of
																														      {'Idris.Prelude.Left', E3304} -> fun (V3751) -> {'Idris.Prelude.Left', V3751} end(E3304);
																														      {'Idris.Prelude.Right', E3305} -> fun (V3752) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3744, V3752}} end(E3305);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E3303);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E3300, E3301);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V3742))(V3689),
																			  case V3753 of
																			    {'Idris.Prelude.Left', E3306} -> fun (V3754) -> {'Idris.Prelude.Left', V3754} end(E3306);
																			    {'Idris.Prelude.Right', E3307} -> fun (V3755) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3741, V3755}} end(E3307);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3298, E3299);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E3308} ->
																		fun (V3756) ->
																			begin
																			  V3757 = ('Idris.Core.Normalise':'un--evalClosure'([], V3720, V3756))(V3689),
																			  case V3757 of
																			    {'Idris.Prelude.Left', E3309} -> fun (V3758) -> {'Idris.Prelude.Left', V3758} end(E3309);
																			    {'Idris.Prelude.Right', E3310} ->
																				fun (V3759) ->
																					begin
																					  V3760 = ('un--nfToCFType'(V0, V3684, V2, V3759))(V3689),
																					  case V3760 of
																					    {'Idris.Prelude.Left', E3311} -> fun (V3761) -> {'Idris.Prelude.Left', V3761} end(E3311);
																					    {'Idris.Prelude.Right', E3312} -> fun (V3762) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3762}} end(E3312);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3310);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3308);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E3291);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3289);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3287);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E3281, E3282, E3283, E3284, E3285);
								      {'Idris.Core.Value.NType', E3313} -> fun (V3763) -> fun (V3764) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3313);
								      {'Idris.Core.Value.NErased', E3314, E3315} -> fun (V3765, V3766) -> fun (V3767) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3314, E3315);
								      _ ->
									  fun (V3768) ->
										  begin
										    V3797 = begin V3796 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3769) -> fun (V3770) -> fun (V3771) -> fun (V3772) -> fun (V3773) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3771, V3772, V3773) end end end end end, fun (V3774) -> fun (V3775) -> fun (V3776) -> V3775 end end end, fun (V3777) -> fun (V3778) -> fun (V3779) -> fun (V3780) -> fun (V3781) -> begin V3782 = V3779(V3781), begin V3783 = V3780(V3781), V3782(V3783) end end end end end end end}, fun (V3784) -> fun (V3785) -> fun (V3786) -> fun (V3787) -> fun (V3788) -> begin V3789 = V3786(V3788), (V3787(V3789))(V3788) end end end end end end, fun (V3790) -> fun (V3791) -> fun (V3792) -> begin V3793 = V3791(V3792), V3793(V3792) end end end end}, fun (V3794) -> fun (V3795) -> V3795 end end}, V0))(V3768), {'Idris.Prelude.Right', V3796} end,
										    case V3797 of
										      {'Idris.Prelude.Left', E3275} -> fun (V3798) -> {'Idris.Prelude.Left', V3798} end(E3275);
										      {'Idris.Prelude.Right', E3276} ->
											  fun (V3799) ->
												  begin
												    V3800 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3799, {'Idris.Core.Env.Nil'}, V3, V3768),
												    case V3800 of
												      {'Idris.Prelude.Left', E3277} -> fun (V3801) -> {'Idris.Prelude.Left', V3801} end(E3277);
												      {'Idris.Prelude.Right', E3278} ->
													  fun (V3802) ->
														  begin
														    V3807 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3803) -> fun (V3804) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3803, V3804) end end, fun (V3805) -> fun (V3806) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3805, V3806) end end}, V3802, V3768),
														    case V3807 of
														      {'Idris.Prelude.Left', E3279} -> fun (V3808) -> {'Idris.Prelude.Left', V3808} end(E3279);
														      {'Idris.Prelude.Right', E3280} -> fun (V3809) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3809))}, V3768) end(E3280);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3278);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E3276);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E3143, E3144, E3145, E3146, E3147} ->
								    fun (V3810, V3811, V3812, V3813, V3814) ->
									    fun (V3815) ->
										    begin
										      V3844 = begin V3843 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3816) -> fun (V3817) -> fun (V3818) -> fun (V3819) -> fun (V3820) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3818, V3819, V3820) end end end end end, fun (V3821) -> fun (V3822) -> fun (V3823) -> V3822 end end end, fun (V3824) -> fun (V3825) -> fun (V3826) -> fun (V3827) -> fun (V3828) -> begin V3829 = V3826(V3828), begin V3830 = V3827(V3828), V3829(V3830) end end end end end end end}, fun (V3831) -> fun (V3832) -> fun (V3833) -> fun (V3834) -> fun (V3835) -> begin V3836 = V3833(V3835), (V3834(V3836))(V3835) end end end end end end, fun (V3837) -> fun (V3838) -> fun (V3839) -> begin V3840 = V3838(V3839), V3840(V3839) end end end end}, fun (V3841) -> fun (V3842) -> V3842 end end}, V0))(V3815), {'Idris.Prelude.Right', V3843} end,
										      case V3844 of
											{'Idris.Prelude.Left', E3148} -> fun (V3845) -> {'Idris.Prelude.Left', V3845} end(E3148);
											{'Idris.Prelude.Right', E3149} ->
											    fun (V3846) ->
												    begin
												      V3851 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3847) -> fun (V3848) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V3847, V3848) end end, fun (V3849) -> fun (V3850) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V3849, V3850) end end}, V3811, V3815),
												      case V3851 of
													{'Idris.Prelude.Left', E3150} -> fun (V3852) -> {'Idris.Prelude.Left', V3852} end(E3150);
													{'Idris.Prelude.Right', E3151} ->
													    fun (V3853) ->
														    begin
														      V3854 = ('un--getNArgs'(V3846, V3853, V3814))(V3815),
														      case V3854 of
															{'Idris.Prelude.Left', E3152} -> fun (V3855) -> {'Idris.Prelude.Left', V3855} end(E3152);
															{'Idris.Prelude.Right', E3153} ->
															    fun (V3856) ->
																    case V3856 of
																      {'Idris.Compiler.CompileExpr.User', E3154, E3155} ->
																	  fun (V3857, V3858) ->
																		  begin
																		    V3860 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3859) -> 'Idris.Core.Normalise':'un--evalClosure'([], V3846, V3859) end, V3858))(V3815),
																		    case V3860 of
																		      {'Idris.Prelude.Left', E3156} -> fun (V3861) -> {'Idris.Prelude.Left', V3861} end(E3156);
																		      {'Idris.Prelude.Right', E3157} ->
																			  fun (V3862) ->
																				  begin
																				    V3864 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V3863) -> 'un--nfToCFType'(V0, V3810, V2, V3863) end, V3862))(V3815),
																				    case V3864 of
																				      {'Idris.Prelude.Left', E3158} -> fun (V3865) -> {'Idris.Prelude.Left', V3865} end(E3158);
																				      {'Idris.Prelude.Right', E3159} -> fun (V3866) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V3853, V3866}} end(E3159);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E3157);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3154, E3155);
																      {'Idris.Compiler.CompileExpr.Struct', E3160, E3161} ->
																	  fun (V3867, V3868) ->
																		  begin
																		    V3879 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V3869) ->
																								      case V3869 of
																									{'Idris.Builtin.MkPair', E3162, E3163} ->
																									    fun (V3870, V3871) ->
																										    fun (V3872) ->
																											    begin
																											      V3873 = ('Idris.Core.Normalise':'un--evalClosure'([], V3846, V3871))(V3872),
																											      case V3873 of
																												{'Idris.Prelude.Left', E3164} -> fun (V3874) -> {'Idris.Prelude.Left', V3874} end(E3164);
																												{'Idris.Prelude.Right', E3165} ->
																												    fun (V3875) ->
																													    begin
																													      V3876 = ('un--nfToCFType'(V0, V3810, 0, V3875))(V3872),
																													      case V3876 of
																														{'Idris.Prelude.Left', E3166} -> fun (V3877) -> {'Idris.Prelude.Left', V3877} end(E3166);
																														{'Idris.Prelude.Right', E3167} -> fun (V3878) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V3870, V3878}} end(E3167);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E3165);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E3162, E3163);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V3868))(V3815),
																		    case V3879 of
																		      {'Idris.Prelude.Left', E3168} -> fun (V3880) -> {'Idris.Prelude.Left', V3880} end(E3168);
																		      {'Idris.Prelude.Right', E3169} -> fun (V3881) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V3867, V3881}} end(E3169);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3160, E3161);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E3170} ->
																	  fun (V3882) ->
																		  begin
																		    V3883 = ('Idris.Core.Normalise':'un--evalClosure'([], V3846, V3882))(V3815),
																		    case V3883 of
																		      {'Idris.Prelude.Left', E3171} -> fun (V3884) -> {'Idris.Prelude.Left', V3884} end(E3171);
																		      {'Idris.Prelude.Right', E3172} ->
																			  fun (V3885) ->
																				  begin
																				    V3886 = ('un--nfToCFType'(V0, V3810, V2, V3885))(V3815),
																				    case V3886 of
																				      {'Idris.Prelude.Left', E3173} -> fun (V3887) -> {'Idris.Prelude.Left', V3887} end(E3173);
																				      {'Idris.Prelude.Right', E3174} -> fun (V3888) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V3888}} end(E3174);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E3172);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E3170);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E3153);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E3151);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E3149);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E3143, E3144, E3145, E3146, E3147);
								{'Idris.Core.Value.NType', E3175} -> fun (V3889) -> fun (V3890) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3175);
								{'Idris.Core.Value.NErased', E3176, E3177} -> fun (V3891, V3892) -> fun (V3893) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3176, E3177);
								_ ->
								    fun (V3894) ->
									    begin
									      V3923 = begin V3922 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3895) -> fun (V3896) -> fun (V3897) -> fun (V3898) -> fun (V3899) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3897, V3898, V3899) end end end end end, fun (V3900) -> fun (V3901) -> fun (V3902) -> V3901 end end end, fun (V3903) -> fun (V3904) -> fun (V3905) -> fun (V3906) -> fun (V3907) -> begin V3908 = V3905(V3907), begin V3909 = V3906(V3907), V3908(V3909) end end end end end end end}, fun (V3910) -> fun (V3911) -> fun (V3912) -> fun (V3913) -> fun (V3914) -> begin V3915 = V3912(V3914), (V3913(V3915))(V3914) end end end end end end, fun (V3916) -> fun (V3917) -> fun (V3918) -> begin V3919 = V3917(V3918), V3919(V3918) end end end end}, fun (V3920) -> fun (V3921) -> V3921 end end}, V0))(V3894), {'Idris.Prelude.Right', V3922} end,
									      case V3923 of
										{'Idris.Prelude.Left', E3137} -> fun (V3924) -> {'Idris.Prelude.Left', V3924} end(E3137);
										{'Idris.Prelude.Right', E3138} ->
										    fun (V3925) ->
											    begin
											      V3926 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V3925, {'Idris.Core.Env.Nil'}, V3, V3894),
											      case V3926 of
												{'Idris.Prelude.Left', E3139} -> fun (V3927) -> {'Idris.Prelude.Left', V3927} end(E3139);
												{'Idris.Prelude.Right', E3140} ->
												    fun (V3928) ->
													    begin
													      V3933 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3929) -> fun (V3930) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V3929, V3930) end end, fun (V3931) -> fun (V3932) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V3931, V3932) end end}, V3928, V3894),
													      case V3933 of
														{'Idris.Prelude.Left', E3141} -> fun (V3934) -> {'Idris.Prelude.Left', V3934} end(E3141);
														{'Idris.Prelude.Right', E3142} -> fun (V3935) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V3935))}, V3894) end(E3142);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E3140);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E3138);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					  end(E3135, E3136);
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E3034, E3035, E3036, E3037} ->
						      fun (V3936, V3937, V3938, V3939) ->
							      case V3938 of
								{'Idris.Core.TT.Pi', E3079, E3080, E3081} ->
								    fun (V3940, V3941, V3942) ->
									    fun (V3943) ->
										    begin
										      V3972 = begin V3971 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3944) -> fun (V3945) -> fun (V3946) -> fun (V3947) -> fun (V3948) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3946, V3947, V3948) end end end end end, fun (V3949) -> fun (V3950) -> fun (V3951) -> V3950 end end end, fun (V3952) -> fun (V3953) -> fun (V3954) -> fun (V3955) -> fun (V3956) -> begin V3957 = V3954(V3956), begin V3958 = V3955(V3956), V3957(V3958) end end end end end end end}, fun (V3959) -> fun (V3960) -> fun (V3961) -> fun (V3962) -> fun (V3963) -> begin V3964 = V3961(V3963), (V3962(V3964))(V3963) end end end end end end, fun (V3965) -> fun (V3966) -> fun (V3967) -> begin V3968 = V3966(V3967), V3968(V3967) end end end end}, fun (V3969) -> fun (V3970) -> V3970 end end}, V0))(V3943), {'Idris.Prelude.Right', V3971} end,
										      case V3972 of
											{'Idris.Prelude.Left', E3082} -> fun (V3973) -> {'Idris.Prelude.Left', V3973} end(E3082);
											{'Idris.Prelude.Right', E3083} ->
											    fun (V3974) ->
												    begin
												      V3975 = ('un--nfToCFType'(V0, V3936, 1, V3942))(V3943),
												      case V3975 of
													{'Idris.Prelude.Left', E3084} -> fun (V3976) -> {'Idris.Prelude.Left', V3976} end(E3084);
													{'Idris.Prelude.Right', E3085} ->
													    fun (V3977) ->
														    begin
														      V3978 = ((V3939(V3974))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3936, 1})))(V3943),
														      case V3978 of
															{'Idris.Prelude.Left', E3086} -> fun (V3979) -> {'Idris.Prelude.Left', V3979} end(E3086);
															{'Idris.Prelude.Right', E3087} ->
															    fun (V3980) ->
																    begin
																      V3981 = ('un--nfToCFType'(V0, V3936, 1, V3980))(V3943),
																      case V3981 of
																	{'Idris.Prelude.Left', E3088} -> fun (V3982) -> {'Idris.Prelude.Left', V3982} end(E3088);
																	{'Idris.Prelude.Right', E3089} -> fun (V3983) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V3977, V3983}} end(E3089);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E3087);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E3085);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E3083);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E3079, E3080, E3081);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E3044, E3045, E3046, E3047, E3048} ->
									  fun (V3984, V3985, V3986, V3987, V3988) ->
										  fun (V3989) ->
											  begin
											    V4018 = begin V4017 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3990) -> fun (V3991) -> fun (V3992) -> fun (V3993) -> fun (V3994) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V3992, V3993, V3994) end end end end end, fun (V3995) -> fun (V3996) -> fun (V3997) -> V3996 end end end, fun (V3998) -> fun (V3999) -> fun (V4000) -> fun (V4001) -> fun (V4002) -> begin V4003 = V4000(V4002), begin V4004 = V4001(V4002), V4003(V4004) end end end end end end end}, fun (V4005) -> fun (V4006) -> fun (V4007) -> fun (V4008) -> fun (V4009) -> begin V4010 = V4007(V4009), (V4008(V4010))(V4009) end end end end end end, fun (V4011) -> fun (V4012) -> fun (V4013) -> begin V4014 = V4012(V4013), V4014(V4013) end end end end}, fun (V4015) -> fun (V4016) -> V4016 end end}, V0))(V3989), {'Idris.Prelude.Right', V4017} end,
											    case V4018 of
											      {'Idris.Prelude.Left', E3049} -> fun (V4019) -> {'Idris.Prelude.Left', V4019} end(E3049);
											      {'Idris.Prelude.Right', E3050} ->
												  fun (V4020) ->
													  begin
													    V4025 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4021) -> fun (V4022) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4021, V4022) end end, fun (V4023) -> fun (V4024) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4023, V4024) end end}, V3985, V3989),
													    case V4025 of
													      {'Idris.Prelude.Left', E3051} -> fun (V4026) -> {'Idris.Prelude.Left', V4026} end(E3051);
													      {'Idris.Prelude.Right', E3052} ->
														  fun (V4027) ->
															  begin
															    V4028 = ('un--getNArgs'(V4020, V4027, V3988))(V3989),
															    case V4028 of
															      {'Idris.Prelude.Left', E3053} -> fun (V4029) -> {'Idris.Prelude.Left', V4029} end(E3053);
															      {'Idris.Prelude.Right', E3054} ->
																  fun (V4030) ->
																	  case V4030 of
																	    {'Idris.Compiler.CompileExpr.User', E3055, E3056} ->
																		fun (V4031, V4032) ->
																			begin
																			  V4034 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4033) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4020, V4033) end, V4032))(V3989),
																			  case V4034 of
																			    {'Idris.Prelude.Left', E3057} -> fun (V4035) -> {'Idris.Prelude.Left', V4035} end(E3057);
																			    {'Idris.Prelude.Right', E3058} ->
																				fun (V4036) ->
																					begin
																					  V4038 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4037) -> 'un--nfToCFType'(V0, V3984, V2, V4037) end, V4036))(V3989),
																					  case V4038 of
																					    {'Idris.Prelude.Left', E3059} -> fun (V4039) -> {'Idris.Prelude.Left', V4039} end(E3059);
																					    {'Idris.Prelude.Right', E3060} -> fun (V4040) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4027, V4040}} end(E3060);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3058);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3055, E3056);
																	    {'Idris.Compiler.CompileExpr.Struct', E3061, E3062} ->
																		fun (V4041, V4042) ->
																			begin
																			  V4053 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V4043) ->
																									    case V4043 of
																									      {'Idris.Builtin.MkPair', E3063, E3064} ->
																										  fun (V4044, V4045) ->
																											  fun (V4046) ->
																												  begin
																												    V4047 = ('Idris.Core.Normalise':'un--evalClosure'([], V4020, V4045))(V4046),
																												    case V4047 of
																												      {'Idris.Prelude.Left', E3065} -> fun (V4048) -> {'Idris.Prelude.Left', V4048} end(E3065);
																												      {'Idris.Prelude.Right', E3066} ->
																													  fun (V4049) ->
																														  begin
																														    V4050 = ('un--nfToCFType'(V0, V3984, 0, V4049))(V4046),
																														    case V4050 of
																														      {'Idris.Prelude.Left', E3067} -> fun (V4051) -> {'Idris.Prelude.Left', V4051} end(E3067);
																														      {'Idris.Prelude.Right', E3068} -> fun (V4052) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4044, V4052}} end(E3068);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E3066);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E3063, E3064);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V4042))(V3989),
																			  case V4053 of
																			    {'Idris.Prelude.Left', E3069} -> fun (V4054) -> {'Idris.Prelude.Left', V4054} end(E3069);
																			    {'Idris.Prelude.Right', E3070} -> fun (V4055) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4041, V4055}} end(E3070);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3061, E3062);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E3071} ->
																		fun (V4056) ->
																			begin
																			  V4057 = ('Idris.Core.Normalise':'un--evalClosure'([], V4020, V4056))(V3989),
																			  case V4057 of
																			    {'Idris.Prelude.Left', E3072} -> fun (V4058) -> {'Idris.Prelude.Left', V4058} end(E3072);
																			    {'Idris.Prelude.Right', E3073} ->
																				fun (V4059) ->
																					begin
																					  V4060 = ('un--nfToCFType'(V0, V3984, V2, V4059))(V3989),
																					  case V4060 of
																					    {'Idris.Prelude.Left', E3074} -> fun (V4061) -> {'Idris.Prelude.Left', V4061} end(E3074);
																					    {'Idris.Prelude.Right', E3075} -> fun (V4062) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4062}} end(E3075);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E3073);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E3071);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E3054);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E3052);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E3050);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E3044, E3045, E3046, E3047, E3048);
								      {'Idris.Core.Value.NType', E3076} -> fun (V4063) -> fun (V4064) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3076);
								      {'Idris.Core.Value.NErased', E3077, E3078} -> fun (V4065, V4066) -> fun (V4067) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3077, E3078);
								      _ ->
									  fun (V4068) ->
										  begin
										    V4097 = begin V4096 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4069) -> fun (V4070) -> fun (V4071) -> fun (V4072) -> fun (V4073) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4071, V4072, V4073) end end end end end, fun (V4074) -> fun (V4075) -> fun (V4076) -> V4075 end end end, fun (V4077) -> fun (V4078) -> fun (V4079) -> fun (V4080) -> fun (V4081) -> begin V4082 = V4079(V4081), begin V4083 = V4080(V4081), V4082(V4083) end end end end end end end}, fun (V4084) -> fun (V4085) -> fun (V4086) -> fun (V4087) -> fun (V4088) -> begin V4089 = V4086(V4088), (V4087(V4089))(V4088) end end end end end end, fun (V4090) -> fun (V4091) -> fun (V4092) -> begin V4093 = V4091(V4092), V4093(V4092) end end end end}, fun (V4094) -> fun (V4095) -> V4095 end end}, V0))(V4068), {'Idris.Prelude.Right', V4096} end,
										    case V4097 of
										      {'Idris.Prelude.Left', E3038} -> fun (V4098) -> {'Idris.Prelude.Left', V4098} end(E3038);
										      {'Idris.Prelude.Right', E3039} ->
											  fun (V4099) ->
												  begin
												    V4100 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4099, {'Idris.Core.Env.Nil'}, V3, V4068),
												    case V4100 of
												      {'Idris.Prelude.Left', E3040} -> fun (V4101) -> {'Idris.Prelude.Left', V4101} end(E3040);
												      {'Idris.Prelude.Right', E3041} ->
													  fun (V4102) ->
														  begin
														    V4107 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4103) -> fun (V4104) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4103, V4104) end end, fun (V4105) -> fun (V4106) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4105, V4106) end end}, V4102, V4068),
														    case V4107 of
														      {'Idris.Prelude.Left', E3042} -> fun (V4108) -> {'Idris.Prelude.Left', V4108} end(E3042);
														      {'Idris.Prelude.Right', E3043} -> fun (V4109) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4109))}, V4068) end(E3043);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E3041);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E3039);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E3034, E3035, E3036, E3037);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E2999, E3000, E3001, E3002, E3003} ->
							    fun (V4110, V4111, V4112, V4113, V4114) ->
								    fun (V4115) ->
									    begin
									      V4144 = begin V4143 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4116) -> fun (V4117) -> fun (V4118) -> fun (V4119) -> fun (V4120) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4118, V4119, V4120) end end end end end, fun (V4121) -> fun (V4122) -> fun (V4123) -> V4122 end end end, fun (V4124) -> fun (V4125) -> fun (V4126) -> fun (V4127) -> fun (V4128) -> begin V4129 = V4126(V4128), begin V4130 = V4127(V4128), V4129(V4130) end end end end end end end}, fun (V4131) -> fun (V4132) -> fun (V4133) -> fun (V4134) -> fun (V4135) -> begin V4136 = V4133(V4135), (V4134(V4136))(V4135) end end end end end end, fun (V4137) -> fun (V4138) -> fun (V4139) -> begin V4140 = V4138(V4139), V4140(V4139) end end end end}, fun (V4141) -> fun (V4142) -> V4142 end end}, V0))(V4115), {'Idris.Prelude.Right', V4143} end,
									      case V4144 of
										{'Idris.Prelude.Left', E3004} -> fun (V4145) -> {'Idris.Prelude.Left', V4145} end(E3004);
										{'Idris.Prelude.Right', E3005} ->
										    fun (V4146) ->
											    begin
											      V4151 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4147) -> fun (V4148) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4147, V4148) end end, fun (V4149) -> fun (V4150) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4149, V4150) end end}, V4111, V4115),
											      case V4151 of
												{'Idris.Prelude.Left', E3006} -> fun (V4152) -> {'Idris.Prelude.Left', V4152} end(E3006);
												{'Idris.Prelude.Right', E3007} ->
												    fun (V4153) ->
													    begin
													      V4154 = ('un--getNArgs'(V4146, V4153, V4114))(V4115),
													      case V4154 of
														{'Idris.Prelude.Left', E3008} -> fun (V4155) -> {'Idris.Prelude.Left', V4155} end(E3008);
														{'Idris.Prelude.Right', E3009} ->
														    fun (V4156) ->
															    case V4156 of
															      {'Idris.Compiler.CompileExpr.User', E3010, E3011} ->
																  fun (V4157, V4158) ->
																	  begin
																	    V4160 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4159) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4146, V4159) end, V4158))(V4115),
																	    case V4160 of
																	      {'Idris.Prelude.Left', E3012} -> fun (V4161) -> {'Idris.Prelude.Left', V4161} end(E3012);
																	      {'Idris.Prelude.Right', E3013} ->
																		  fun (V4162) ->
																			  begin
																			    V4164 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4163) -> 'un--nfToCFType'(V0, V4110, V2, V4163) end, V4162))(V4115),
																			    case V4164 of
																			      {'Idris.Prelude.Left', E3014} -> fun (V4165) -> {'Idris.Prelude.Left', V4165} end(E3014);
																			      {'Idris.Prelude.Right', E3015} -> fun (V4166) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4153, V4166}} end(E3015);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E3013);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3010, E3011);
															      {'Idris.Compiler.CompileExpr.Struct', E3016, E3017} ->
																  fun (V4167, V4168) ->
																	  begin
																	    V4179 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V4169) ->
																							      case V4169 of
																								{'Idris.Builtin.MkPair', E3018, E3019} ->
																								    fun (V4170, V4171) ->
																									    fun (V4172) ->
																										    begin
																										      V4173 = ('Idris.Core.Normalise':'un--evalClosure'([], V4146, V4171))(V4172),
																										      case V4173 of
																											{'Idris.Prelude.Left', E3020} -> fun (V4174) -> {'Idris.Prelude.Left', V4174} end(E3020);
																											{'Idris.Prelude.Right', E3021} ->
																											    fun (V4175) ->
																												    begin
																												      V4176 = ('un--nfToCFType'(V0, V4110, 0, V4175))(V4172),
																												      case V4176 of
																													{'Idris.Prelude.Left', E3022} -> fun (V4177) -> {'Idris.Prelude.Left', V4177} end(E3022);
																													{'Idris.Prelude.Right', E3023} -> fun (V4178) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4170, V4178}} end(E3023);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E3021);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E3018, E3019);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V4168))(V4115),
																	    case V4179 of
																	      {'Idris.Prelude.Left', E3024} -> fun (V4180) -> {'Idris.Prelude.Left', V4180} end(E3024);
																	      {'Idris.Prelude.Right', E3025} -> fun (V4181) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4167, V4181}} end(E3025);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3016, E3017);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E3026} ->
																  fun (V4182) ->
																	  begin
																	    V4183 = ('Idris.Core.Normalise':'un--evalClosure'([], V4146, V4182))(V4115),
																	    case V4183 of
																	      {'Idris.Prelude.Left', E3027} -> fun (V4184) -> {'Idris.Prelude.Left', V4184} end(E3027);
																	      {'Idris.Prelude.Right', E3028} ->
																		  fun (V4185) ->
																			  begin
																			    V4186 = ('un--nfToCFType'(V0, V4110, V2, V4185))(V4115),
																			    case V4186 of
																			      {'Idris.Prelude.Left', E3029} -> fun (V4187) -> {'Idris.Prelude.Left', V4187} end(E3029);
																			      {'Idris.Prelude.Right', E3030} -> fun (V4188) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4188}} end(E3030);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E3028);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3026);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E3009);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E3007);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E3005);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E2999, E3000, E3001, E3002, E3003);
							{'Idris.Core.Value.NType', E3031} -> fun (V4189) -> fun (V4190) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3031);
							{'Idris.Core.Value.NErased', E3032, E3033} -> fun (V4191, V4192) -> fun (V4193) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3032, E3033);
							_ ->
							    fun (V4194) ->
								    begin
								      V4223 = begin V4222 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4195) -> fun (V4196) -> fun (V4197) -> fun (V4198) -> fun (V4199) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4197, V4198, V4199) end end end end end, fun (V4200) -> fun (V4201) -> fun (V4202) -> V4201 end end end, fun (V4203) -> fun (V4204) -> fun (V4205) -> fun (V4206) -> fun (V4207) -> begin V4208 = V4205(V4207), begin V4209 = V4206(V4207), V4208(V4209) end end end end end end end}, fun (V4210) -> fun (V4211) -> fun (V4212) -> fun (V4213) -> fun (V4214) -> begin V4215 = V4212(V4214), (V4213(V4215))(V4214) end end end end end end, fun (V4216) -> fun (V4217) -> fun (V4218) -> begin V4219 = V4217(V4218), V4219(V4218) end end end end}, fun (V4220) -> fun (V4221) -> V4221 end end}, V0))(V4194), {'Idris.Prelude.Right', V4222} end,
								      case V4223 of
									{'Idris.Prelude.Left', E2993} -> fun (V4224) -> {'Idris.Prelude.Left', V4224} end(E2993);
									{'Idris.Prelude.Right', E2994} ->
									    fun (V4225) ->
										    begin
										      V4226 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4225, {'Idris.Core.Env.Nil'}, V3, V4194),
										      case V4226 of
											{'Idris.Prelude.Left', E2995} -> fun (V4227) -> {'Idris.Prelude.Left', V4227} end(E2995);
											{'Idris.Prelude.Right', E2996} ->
											    fun (V4228) ->
												    begin
												      V4233 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4229) -> fun (V4230) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4229, V4230) end end, fun (V4231) -> fun (V4232) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4231, V4232) end end}, V4228, V4194),
												      case V4233 of
													{'Idris.Prelude.Left', E2997} -> fun (V4234) -> {'Idris.Prelude.Left', V4234} end(E2997);
													{'Idris.Prelude.Right', E2998} -> fun (V4235) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4235))}, V4194) end(E2998);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2996);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E2994);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E3131, E3132, E3133, E3134} -> fun (V4236, V4237, V4238, V4239) -> fun (V4240) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V4236, <<"Function types not allowed in a foreign struct"/utf8>>}, V4240) end end(E3131, E3132, E3133, E3134);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E3096, E3097, E3098, E3099, E3100} ->
							    fun (V4241, V4242, V4243, V4244, V4245) ->
								    fun (V4246) ->
									    begin
									      V4275 = begin V4274 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4247) -> fun (V4248) -> fun (V4249) -> fun (V4250) -> fun (V4251) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4249, V4250, V4251) end end end end end, fun (V4252) -> fun (V4253) -> fun (V4254) -> V4253 end end end, fun (V4255) -> fun (V4256) -> fun (V4257) -> fun (V4258) -> fun (V4259) -> begin V4260 = V4257(V4259), begin V4261 = V4258(V4259), V4260(V4261) end end end end end end end}, fun (V4262) -> fun (V4263) -> fun (V4264) -> fun (V4265) -> fun (V4266) -> begin V4267 = V4264(V4266), (V4265(V4267))(V4266) end end end end end end, fun (V4268) -> fun (V4269) -> fun (V4270) -> begin V4271 = V4269(V4270), V4271(V4270) end end end end}, fun (V4272) -> fun (V4273) -> V4273 end end}, V0))(V4246), {'Idris.Prelude.Right', V4274} end,
									      case V4275 of
										{'Idris.Prelude.Left', E3101} -> fun (V4276) -> {'Idris.Prelude.Left', V4276} end(E3101);
										{'Idris.Prelude.Right', E3102} ->
										    fun (V4277) ->
											    begin
											      V4282 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4278) -> fun (V4279) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4278, V4279) end end, fun (V4280) -> fun (V4281) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4280, V4281) end end}, V4242, V4246),
											      case V4282 of
												{'Idris.Prelude.Left', E3103} -> fun (V4283) -> {'Idris.Prelude.Left', V4283} end(E3103);
												{'Idris.Prelude.Right', E3104} ->
												    fun (V4284) ->
													    begin
													      V4285 = ('un--getNArgs'(V4277, V4284, V4245))(V4246),
													      case V4285 of
														{'Idris.Prelude.Left', E3105} -> fun (V4286) -> {'Idris.Prelude.Left', V4286} end(E3105);
														{'Idris.Prelude.Right', E3106} ->
														    fun (V4287) ->
															    case V4287 of
															      {'Idris.Compiler.CompileExpr.User', E3107, E3108} ->
																  fun (V4288, V4289) ->
																	  begin
																	    V4291 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4290) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4277, V4290) end, V4289))(V4246),
																	    case V4291 of
																	      {'Idris.Prelude.Left', E3109} -> fun (V4292) -> {'Idris.Prelude.Left', V4292} end(E3109);
																	      {'Idris.Prelude.Right', E3110} ->
																		  fun (V4293) ->
																			  begin
																			    V4295 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4294) -> 'un--nfToCFType'(V0, V4241, V2, V4294) end, V4293))(V4246),
																			    case V4295 of
																			      {'Idris.Prelude.Left', E3111} -> fun (V4296) -> {'Idris.Prelude.Left', V4296} end(E3111);
																			      {'Idris.Prelude.Right', E3112} -> fun (V4297) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4284, V4297}} end(E3112);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E3110);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3107, E3108);
															      {'Idris.Compiler.CompileExpr.Struct', E3113, E3114} ->
																  fun (V4298, V4299) ->
																	  begin
																	    V4310 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V4300) ->
																							      case V4300 of
																								{'Idris.Builtin.MkPair', E3115, E3116} ->
																								    fun (V4301, V4302) ->
																									    fun (V4303) ->
																										    begin
																										      V4304 = ('Idris.Core.Normalise':'un--evalClosure'([], V4277, V4302))(V4303),
																										      case V4304 of
																											{'Idris.Prelude.Left', E3117} -> fun (V4305) -> {'Idris.Prelude.Left', V4305} end(E3117);
																											{'Idris.Prelude.Right', E3118} ->
																											    fun (V4306) ->
																												    begin
																												      V4307 = ('un--nfToCFType'(V0, V4241, 0, V4306))(V4303),
																												      case V4307 of
																													{'Idris.Prelude.Left', E3119} -> fun (V4308) -> {'Idris.Prelude.Left', V4308} end(E3119);
																													{'Idris.Prelude.Right', E3120} -> fun (V4309) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4301, V4309}} end(E3120);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E3118);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E3115, E3116);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V4299))(V4246),
																	    case V4310 of
																	      {'Idris.Prelude.Left', E3121} -> fun (V4311) -> {'Idris.Prelude.Left', V4311} end(E3121);
																	      {'Idris.Prelude.Right', E3122} -> fun (V4312) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4298, V4312}} end(E3122);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3113, E3114);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E3123} ->
																  fun (V4313) ->
																	  begin
																	    V4314 = ('Idris.Core.Normalise':'un--evalClosure'([], V4277, V4313))(V4246),
																	    case V4314 of
																	      {'Idris.Prelude.Left', E3124} -> fun (V4315) -> {'Idris.Prelude.Left', V4315} end(E3124);
																	      {'Idris.Prelude.Right', E3125} ->
																		  fun (V4316) ->
																			  begin
																			    V4317 = ('un--nfToCFType'(V0, V4241, V2, V4316))(V4246),
																			    case V4317 of
																			      {'Idris.Prelude.Left', E3126} -> fun (V4318) -> {'Idris.Prelude.Left', V4318} end(E3126);
																			      {'Idris.Prelude.Right', E3127} -> fun (V4319) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4319}} end(E3127);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E3125);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E3123);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E3106);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E3104);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E3102);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E3096, E3097, E3098, E3099, E3100);
							{'Idris.Core.Value.NType', E3128} -> fun (V4320) -> fun (V4321) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3128);
							{'Idris.Core.Value.NErased', E3129, E3130} -> fun (V4322, V4323) -> fun (V4324) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3129, E3130);
							_ ->
							    fun (V4325) ->
								    begin
								      V4354 = begin V4353 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4326) -> fun (V4327) -> fun (V4328) -> fun (V4329) -> fun (V4330) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4328, V4329, V4330) end end end end end, fun (V4331) -> fun (V4332) -> fun (V4333) -> V4332 end end end, fun (V4334) -> fun (V4335) -> fun (V4336) -> fun (V4337) -> fun (V4338) -> begin V4339 = V4336(V4338), begin V4340 = V4337(V4338), V4339(V4340) end end end end end end end}, fun (V4341) -> fun (V4342) -> fun (V4343) -> fun (V4344) -> fun (V4345) -> begin V4346 = V4343(V4345), (V4344(V4346))(V4345) end end end end end end, fun (V4347) -> fun (V4348) -> fun (V4349) -> begin V4350 = V4348(V4349), V4350(V4349) end end end end}, fun (V4351) -> fun (V4352) -> V4352 end end}, V0))(V4325), {'Idris.Prelude.Right', V4353} end,
								      case V4354 of
									{'Idris.Prelude.Left', E3090} -> fun (V4355) -> {'Idris.Prelude.Left', V4355} end(E3090);
									{'Idris.Prelude.Right', E3091} ->
									    fun (V4356) ->
										    begin
										      V4357 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4356, {'Idris.Core.Env.Nil'}, V3, V4325),
										      case V4357 of
											{'Idris.Prelude.Left', E3092} -> fun (V4358) -> {'Idris.Prelude.Left', V4358} end(E3092);
											{'Idris.Prelude.Right', E3093} ->
											    fun (V4359) ->
												    begin
												      V4364 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4360) -> fun (V4361) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4360, V4361) end end, fun (V4362) -> fun (V4363) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4362, V4363) end end}, V4359, V4325),
												      case V4364 of
													{'Idris.Prelude.Left', E3094} -> fun (V4365) -> {'Idris.Prelude.Left', V4365} end(E3094);
													{'Idris.Prelude.Right', E3095} -> fun (V4366) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4366))}, V4325) end(E3095);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E3093);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E3091);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E2958, E2959, E2960, E2961, E2962} ->
						      fun (V4367, V4368, V4369, V4370, V4371) ->
							      fun (V4372) ->
								      begin
									V4401 = begin V4400 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4373) -> fun (V4374) -> fun (V4375) -> fun (V4376) -> fun (V4377) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4375, V4376, V4377) end end end end end, fun (V4378) -> fun (V4379) -> fun (V4380) -> V4379 end end end, fun (V4381) -> fun (V4382) -> fun (V4383) -> fun (V4384) -> fun (V4385) -> begin V4386 = V4383(V4385), begin V4387 = V4384(V4385), V4386(V4387) end end end end end end end}, fun (V4388) -> fun (V4389) -> fun (V4390) -> fun (V4391) -> fun (V4392) -> begin V4393 = V4390(V4392), (V4391(V4393))(V4392) end end end end end end, fun (V4394) -> fun (V4395) -> fun (V4396) -> begin V4397 = V4395(V4396), V4397(V4396) end end end end}, fun (V4398) -> fun (V4399) -> V4399 end end}, V0))(V4372), {'Idris.Prelude.Right', V4400} end,
									case V4401 of
									  {'Idris.Prelude.Left', E2963} -> fun (V4402) -> {'Idris.Prelude.Left', V4402} end(E2963);
									  {'Idris.Prelude.Right', E2964} ->
									      fun (V4403) ->
										      begin
											V4408 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4404) -> fun (V4405) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4404, V4405) end end, fun (V4406) -> fun (V4407) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4406, V4407) end end}, V4368, V4372),
											case V4408 of
											  {'Idris.Prelude.Left', E2965} -> fun (V4409) -> {'Idris.Prelude.Left', V4409} end(E2965);
											  {'Idris.Prelude.Right', E2966} ->
											      fun (V4410) ->
												      begin
													V4411 = ('un--getNArgs'(V4403, V4410, V4371))(V4372),
													case V4411 of
													  {'Idris.Prelude.Left', E2967} -> fun (V4412) -> {'Idris.Prelude.Left', V4412} end(E2967);
													  {'Idris.Prelude.Right', E2968} ->
													      fun (V4413) ->
														      case V4413 of
															{'Idris.Compiler.CompileExpr.User', E2969, E2970} ->
															    fun (V4414, V4415) ->
																    begin
																      V4417 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4416) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4403, V4416) end, V4415))(V4372),
																      case V4417 of
																	{'Idris.Prelude.Left', E2971} -> fun (V4418) -> {'Idris.Prelude.Left', V4418} end(E2971);
																	{'Idris.Prelude.Right', E2972} ->
																	    fun (V4419) ->
																		    begin
																		      V4421 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4420) -> 'un--nfToCFType'(V0, V4367, V2, V4420) end, V4419))(V4372),
																		      case V4421 of
																			{'Idris.Prelude.Left', E2973} -> fun (V4422) -> {'Idris.Prelude.Left', V4422} end(E2973);
																			{'Idris.Prelude.Right', E2974} -> fun (V4423) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4410, V4423}} end(E2974);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2972);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2969, E2970);
															{'Idris.Compiler.CompileExpr.Struct', E2975, E2976} ->
															    fun (V4424, V4425) ->
																    begin
																      V4436 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V4426) ->
																							case V4426 of
																							  {'Idris.Builtin.MkPair', E2977, E2978} ->
																							      fun (V4427, V4428) ->
																								      fun (V4429) ->
																									      begin
																										V4430 = ('Idris.Core.Normalise':'un--evalClosure'([], V4403, V4428))(V4429),
																										case V4430 of
																										  {'Idris.Prelude.Left', E2979} -> fun (V4431) -> {'Idris.Prelude.Left', V4431} end(E2979);
																										  {'Idris.Prelude.Right', E2980} ->
																										      fun (V4432) ->
																											      begin
																												V4433 = ('un--nfToCFType'(V0, V4367, 0, V4432))(V4429),
																												case V4433 of
																												  {'Idris.Prelude.Left', E2981} -> fun (V4434) -> {'Idris.Prelude.Left', V4434} end(E2981);
																												  {'Idris.Prelude.Right', E2982} -> fun (V4435) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4427, V4435}} end(E2982);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E2980);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E2977, E2978);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V4425))(V4372),
																      case V4436 of
																	{'Idris.Prelude.Left', E2983} -> fun (V4437) -> {'Idris.Prelude.Left', V4437} end(E2983);
																	{'Idris.Prelude.Right', E2984} -> fun (V4438) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4424, V4438}} end(E2984);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2975, E2976);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E2985} ->
															    fun (V4439) ->
																    begin
																      V4440 = ('Idris.Core.Normalise':'un--evalClosure'([], V4403, V4439))(V4372),
																      case V4440 of
																	{'Idris.Prelude.Left', E2986} -> fun (V4441) -> {'Idris.Prelude.Left', V4441} end(E2986);
																	{'Idris.Prelude.Right', E2987} ->
																	    fun (V4442) ->
																		    begin
																		      V4443 = ('un--nfToCFType'(V0, V4367, V2, V4442))(V4372),
																		      case V4443 of
																			{'Idris.Prelude.Left', E2988} -> fun (V4444) -> {'Idris.Prelude.Left', V4444} end(E2988);
																			{'Idris.Prelude.Right', E2989} -> fun (V4445) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4445}} end(E2989);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2987);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2985);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E2968);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E2966);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E2964);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E2958, E2959, E2960, E2961, E2962);
						  {'Idris.Core.Value.NType', E2990} -> fun (V4446) -> fun (V4447) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2990);
						  {'Idris.Core.Value.NErased', E2991, E2992} -> fun (V4448, V4449) -> fun (V4450) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2991, E2992);
						  _ ->
						      fun (V4451) ->
							      begin
								V4480 = begin V4479 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4452) -> fun (V4453) -> fun (V4454) -> fun (V4455) -> fun (V4456) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4454, V4455, V4456) end end end end end, fun (V4457) -> fun (V4458) -> fun (V4459) -> V4458 end end end, fun (V4460) -> fun (V4461) -> fun (V4462) -> fun (V4463) -> fun (V4464) -> begin V4465 = V4462(V4464), begin V4466 = V4463(V4464), V4465(V4466) end end end end end end end}, fun (V4467) -> fun (V4468) -> fun (V4469) -> fun (V4470) -> fun (V4471) -> begin V4472 = V4469(V4471), (V4470(V4472))(V4471) end end end end end end, fun (V4473) -> fun (V4474) -> fun (V4475) -> begin V4476 = V4474(V4475), V4476(V4475) end end end end}, fun (V4477) -> fun (V4478) -> V4478 end end}, V0))(V4451), {'Idris.Prelude.Right', V4479} end,
								case V4480 of
								  {'Idris.Prelude.Left', E2952} -> fun (V4481) -> {'Idris.Prelude.Left', V4481} end(E2952);
								  {'Idris.Prelude.Right', E2953} ->
								      fun (V4482) ->
									      begin
										V4483 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4482, {'Idris.Core.Env.Nil'}, V3, V4451),
										case V4483 of
										  {'Idris.Prelude.Left', E2954} -> fun (V4484) -> {'Idris.Prelude.Left', V4484} end(E2954);
										  {'Idris.Prelude.Right', E2955} ->
										      fun (V4485) ->
											      begin
												V4490 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4486) -> fun (V4487) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4486, V4487) end end, fun (V4488) -> fun (V4489) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4488, V4489) end end}, V4485, V4451),
												case V4490 of
												  {'Idris.Prelude.Left', E2956} -> fun (V4491) -> {'Idris.Prelude.Left', V4491} end(E2956);
												  {'Idris.Prelude.Right', E2957} -> fun (V4492) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4492))}, V4451) end(E2957);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E2955);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E2953);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			      end;
			  _ ->
			      case V3 of
				{'Idris.Core.Value.NPrimVal', E2029, E2030} ->
				    fun (V4493, V4494) ->
					    case V4494 of
					      {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V4495) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
					      {'Idris.Core.TT.CharType'} -> fun () -> fun (V4496) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
					      {'Idris.Core.TT.WorldType'} -> fun () -> fun (V4497) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
					      _ ->
						  case V2 of
						    1 ->
							case V3 of
							  {'Idris.Core.Value.NBind', E2113, E2114, E2115, E2116} ->
							      fun (V4498, V4499, V4500, V4501) ->
								      case V4500 of
									{'Idris.Core.TT.Pi', E2158, E2159, E2160} ->
									    fun (V4502, V4503, V4504) ->
										    fun (V4505) ->
											    begin
											      V4534 = begin V4533 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4506) -> fun (V4507) -> fun (V4508) -> fun (V4509) -> fun (V4510) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4508, V4509, V4510) end end end end end, fun (V4511) -> fun (V4512) -> fun (V4513) -> V4512 end end end, fun (V4514) -> fun (V4515) -> fun (V4516) -> fun (V4517) -> fun (V4518) -> begin V4519 = V4516(V4518), begin V4520 = V4517(V4518), V4519(V4520) end end end end end end end}, fun (V4521) -> fun (V4522) -> fun (V4523) -> fun (V4524) -> fun (V4525) -> begin V4526 = V4523(V4525), (V4524(V4526))(V4525) end end end end end end, fun (V4527) -> fun (V4528) -> fun (V4529) -> begin V4530 = V4528(V4529), V4530(V4529) end end end end}, fun (V4531) -> fun (V4532) -> V4532 end end}, V0))(V4505), {'Idris.Prelude.Right', V4533} end,
											      case V4534 of
												{'Idris.Prelude.Left', E2161} -> fun (V4535) -> {'Idris.Prelude.Left', V4535} end(E2161);
												{'Idris.Prelude.Right', E2162} ->
												    fun (V4536) ->
													    begin
													      V4537 = ('un--nfToCFType'(V0, V4498, 1, V4504))(V4505),
													      case V4537 of
														{'Idris.Prelude.Left', E2163} -> fun (V4538) -> {'Idris.Prelude.Left', V4538} end(E2163);
														{'Idris.Prelude.Right', E2164} ->
														    fun (V4539) ->
															    begin
															      V4540 = ((V4501(V4536))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4498, 1})))(V4505),
															      case V4540 of
																{'Idris.Prelude.Left', E2165} -> fun (V4541) -> {'Idris.Prelude.Left', V4541} end(E2165);
																{'Idris.Prelude.Right', E2166} ->
																    fun (V4542) ->
																	    begin
																	      V4543 = ('un--nfToCFType'(V0, V4498, 1, V4542))(V4505),
																	      case V4543 of
																		{'Idris.Prelude.Left', E2167} -> fun (V4544) -> {'Idris.Prelude.Left', V4544} end(E2167);
																		{'Idris.Prelude.Right', E2168} -> fun (V4545) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V4539, V4545}} end(E2168);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E2166);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E2164);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2162);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end
									    end(E2158, E2159, E2160);
									_ ->
									    case V3 of
									      {'Idris.Core.Value.NTCon', E2123, E2124, E2125, E2126, E2127} ->
										  fun (V4546, V4547, V4548, V4549, V4550) ->
											  fun (V4551) ->
												  begin
												    V4580 = begin V4579 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4552) -> fun (V4553) -> fun (V4554) -> fun (V4555) -> fun (V4556) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4554, V4555, V4556) end end end end end, fun (V4557) -> fun (V4558) -> fun (V4559) -> V4558 end end end, fun (V4560) -> fun (V4561) -> fun (V4562) -> fun (V4563) -> fun (V4564) -> begin V4565 = V4562(V4564), begin V4566 = V4563(V4564), V4565(V4566) end end end end end end end}, fun (V4567) -> fun (V4568) -> fun (V4569) -> fun (V4570) -> fun (V4571) -> begin V4572 = V4569(V4571), (V4570(V4572))(V4571) end end end end end end, fun (V4573) -> fun (V4574) -> fun (V4575) -> begin V4576 = V4574(V4575), V4576(V4575) end end end end}, fun (V4577) -> fun (V4578) -> V4578 end end}, V0))(V4551), {'Idris.Prelude.Right', V4579} end,
												    case V4580 of
												      {'Idris.Prelude.Left', E2128} -> fun (V4581) -> {'Idris.Prelude.Left', V4581} end(E2128);
												      {'Idris.Prelude.Right', E2129} ->
													  fun (V4582) ->
														  begin
														    V4587 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4583) -> fun (V4584) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4583, V4584) end end, fun (V4585) -> fun (V4586) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4585, V4586) end end}, V4547, V4551),
														    case V4587 of
														      {'Idris.Prelude.Left', E2130} -> fun (V4588) -> {'Idris.Prelude.Left', V4588} end(E2130);
														      {'Idris.Prelude.Right', E2131} ->
															  fun (V4589) ->
																  begin
																    V4590 = ('un--getNArgs'(V4582, V4589, V4550))(V4551),
																    case V4590 of
																      {'Idris.Prelude.Left', E2132} -> fun (V4591) -> {'Idris.Prelude.Left', V4591} end(E2132);
																      {'Idris.Prelude.Right', E2133} ->
																	  fun (V4592) ->
																		  case V4592 of
																		    {'Idris.Compiler.CompileExpr.User', E2134, E2135} ->
																			fun (V4593, V4594) ->
																				begin
																				  V4596 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4595) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4582, V4595) end, V4594))(V4551),
																				  case V4596 of
																				    {'Idris.Prelude.Left', E2136} -> fun (V4597) -> {'Idris.Prelude.Left', V4597} end(E2136);
																				    {'Idris.Prelude.Right', E2137} ->
																					fun (V4598) ->
																						begin
																						  V4600 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4599) -> 'un--nfToCFType'(V0, V4546, V2, V4599) end, V4598))(V4551),
																						  case V4600 of
																						    {'Idris.Prelude.Left', E2138} -> fun (V4601) -> {'Idris.Prelude.Left', V4601} end(E2138);
																						    {'Idris.Prelude.Right', E2139} -> fun (V4602) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4589, V4602}} end(E2139);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E2137);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2134, E2135);
																		    {'Idris.Compiler.CompileExpr.Struct', E2140, E2141} ->
																			fun (V4603, V4604) ->
																				begin
																				  V4615 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																									    fun (V4605) ->
																										    case V4605 of
																										      {'Idris.Builtin.MkPair', E2142, E2143} ->
																											  fun (V4606, V4607) ->
																												  fun (V4608) ->
																													  begin
																													    V4609 = ('Idris.Core.Normalise':'un--evalClosure'([], V4582, V4607))(V4608),
																													    case V4609 of
																													      {'Idris.Prelude.Left', E2144} -> fun (V4610) -> {'Idris.Prelude.Left', V4610} end(E2144);
																													      {'Idris.Prelude.Right', E2145} ->
																														  fun (V4611) ->
																															  begin
																															    V4612 = ('un--nfToCFType'(V0, V4546, 0, V4611))(V4608),
																															    case V4612 of
																															      {'Idris.Prelude.Left', E2146} -> fun (V4613) -> {'Idris.Prelude.Left', V4613} end(E2146);
																															      {'Idris.Prelude.Right', E2147} -> fun (V4614) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4606, V4614}} end(E2147);
																															      _ -> erlang:throw("Error: Unreachable branch")
																															    end
																															  end
																														  end(E2145);
																													      _ -> erlang:throw("Error: Unreachable branch")
																													    end
																													  end
																												  end
																											  end(E2142, E2143);
																										      _ -> erlang:throw("Error: Unreachable branch")
																										    end
																									    end,
																									    V4604))(V4551),
																				  case V4615 of
																				    {'Idris.Prelude.Left', E2148} -> fun (V4616) -> {'Idris.Prelude.Left', V4616} end(E2148);
																				    {'Idris.Prelude.Right', E2149} -> fun (V4617) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4603, V4617}} end(E2149);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2140, E2141);
																		    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																		    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																		    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																		    {'Idris.Compiler.CompileExpr.NIORes', E2150} ->
																			fun (V4618) ->
																				begin
																				  V4619 = ('Idris.Core.Normalise':'un--evalClosure'([], V4582, V4618))(V4551),
																				  case V4619 of
																				    {'Idris.Prelude.Left', E2151} -> fun (V4620) -> {'Idris.Prelude.Left', V4620} end(E2151);
																				    {'Idris.Prelude.Right', E2152} ->
																					fun (V4621) ->
																						begin
																						  V4622 = ('un--nfToCFType'(V0, V4546, V2, V4621))(V4551),
																						  case V4622 of
																						    {'Idris.Prelude.Left', E2153} -> fun (V4623) -> {'Idris.Prelude.Left', V4623} end(E2153);
																						    {'Idris.Prelude.Right', E2154} -> fun (V4624) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4624}} end(E2154);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																						end
																					end(E2152);
																				    _ -> erlang:throw("Error: Unreachable branch")
																				  end
																				end
																			end(E2150);
																		    _ -> erlang:throw("Error: Unreachable branch")
																		  end
																	  end(E2133);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E2131);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E2129);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E2123, E2124, E2125, E2126, E2127);
									      {'Idris.Core.Value.NType', E2155} -> fun (V4625) -> fun (V4626) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2155);
									      {'Idris.Core.Value.NErased', E2156, E2157} -> fun (V4627, V4628) -> fun (V4629) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2156, E2157);
									      _ ->
										  fun (V4630) ->
											  begin
											    V4659 = begin V4658 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4631) -> fun (V4632) -> fun (V4633) -> fun (V4634) -> fun (V4635) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4633, V4634, V4635) end end end end end, fun (V4636) -> fun (V4637) -> fun (V4638) -> V4637 end end end, fun (V4639) -> fun (V4640) -> fun (V4641) -> fun (V4642) -> fun (V4643) -> begin V4644 = V4641(V4643), begin V4645 = V4642(V4643), V4644(V4645) end end end end end end end}, fun (V4646) -> fun (V4647) -> fun (V4648) -> fun (V4649) -> fun (V4650) -> begin V4651 = V4648(V4650), (V4649(V4651))(V4650) end end end end end end, fun (V4652) -> fun (V4653) -> fun (V4654) -> begin V4655 = V4653(V4654), V4655(V4654) end end end end}, fun (V4656) -> fun (V4657) -> V4657 end end}, V0))(V4630), {'Idris.Prelude.Right', V4658} end,
											    case V4659 of
											      {'Idris.Prelude.Left', E2117} -> fun (V4660) -> {'Idris.Prelude.Left', V4660} end(E2117);
											      {'Idris.Prelude.Right', E2118} ->
												  fun (V4661) ->
													  begin
													    V4662 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4661, {'Idris.Core.Env.Nil'}, V3, V4630),
													    case V4662 of
													      {'Idris.Prelude.Left', E2119} -> fun (V4663) -> {'Idris.Prelude.Left', V4663} end(E2119);
													      {'Idris.Prelude.Right', E2120} ->
														  fun (V4664) ->
															  begin
															    V4669 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4665) -> fun (V4666) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4665, V4666) end end, fun (V4667) -> fun (V4668) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4667, V4668) end end}, V4664, V4630),
															    case V4669 of
															      {'Idris.Prelude.Left', E2121} -> fun (V4670) -> {'Idris.Prelude.Left', V4670} end(E2121);
															      {'Idris.Prelude.Right', E2122} -> fun (V4671) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4671))}, V4630) end(E2122);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E2120);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E2118);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									    end
								      end
							      end(E2113, E2114, E2115, E2116);
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E2078, E2079, E2080, E2081, E2082} ->
								    fun (V4672, V4673, V4674, V4675, V4676) ->
									    fun (V4677) ->
										    begin
										      V4706 = begin V4705 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4678) -> fun (V4679) -> fun (V4680) -> fun (V4681) -> fun (V4682) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4680, V4681, V4682) end end end end end, fun (V4683) -> fun (V4684) -> fun (V4685) -> V4684 end end end, fun (V4686) -> fun (V4687) -> fun (V4688) -> fun (V4689) -> fun (V4690) -> begin V4691 = V4688(V4690), begin V4692 = V4689(V4690), V4691(V4692) end end end end end end end}, fun (V4693) -> fun (V4694) -> fun (V4695) -> fun (V4696) -> fun (V4697) -> begin V4698 = V4695(V4697), (V4696(V4698))(V4697) end end end end end end, fun (V4699) -> fun (V4700) -> fun (V4701) -> begin V4702 = V4700(V4701), V4702(V4701) end end end end}, fun (V4703) -> fun (V4704) -> V4704 end end}, V0))(V4677), {'Idris.Prelude.Right', V4705} end,
										      case V4706 of
											{'Idris.Prelude.Left', E2083} -> fun (V4707) -> {'Idris.Prelude.Left', V4707} end(E2083);
											{'Idris.Prelude.Right', E2084} ->
											    fun (V4708) ->
												    begin
												      V4713 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4709) -> fun (V4710) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4709, V4710) end end, fun (V4711) -> fun (V4712) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4711, V4712) end end}, V4673, V4677),
												      case V4713 of
													{'Idris.Prelude.Left', E2085} -> fun (V4714) -> {'Idris.Prelude.Left', V4714} end(E2085);
													{'Idris.Prelude.Right', E2086} ->
													    fun (V4715) ->
														    begin
														      V4716 = ('un--getNArgs'(V4708, V4715, V4676))(V4677),
														      case V4716 of
															{'Idris.Prelude.Left', E2087} -> fun (V4717) -> {'Idris.Prelude.Left', V4717} end(E2087);
															{'Idris.Prelude.Right', E2088} ->
															    fun (V4718) ->
																    case V4718 of
																      {'Idris.Compiler.CompileExpr.User', E2089, E2090} ->
																	  fun (V4719, V4720) ->
																		  begin
																		    V4722 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4721) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4708, V4721) end, V4720))(V4677),
																		    case V4722 of
																		      {'Idris.Prelude.Left', E2091} -> fun (V4723) -> {'Idris.Prelude.Left', V4723} end(E2091);
																		      {'Idris.Prelude.Right', E2092} ->
																			  fun (V4724) ->
																				  begin
																				    V4726 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4725) -> 'un--nfToCFType'(V0, V4672, V2, V4725) end, V4724))(V4677),
																				    case V4726 of
																				      {'Idris.Prelude.Left', E2093} -> fun (V4727) -> {'Idris.Prelude.Left', V4727} end(E2093);
																				      {'Idris.Prelude.Right', E2094} -> fun (V4728) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4715, V4728}} end(E2094);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2092);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2089, E2090);
																      {'Idris.Compiler.CompileExpr.Struct', E2095, E2096} ->
																	  fun (V4729, V4730) ->
																		  begin
																		    V4741 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V4731) ->
																								      case V4731 of
																									{'Idris.Builtin.MkPair', E2097, E2098} ->
																									    fun (V4732, V4733) ->
																										    fun (V4734) ->
																											    begin
																											      V4735 = ('Idris.Core.Normalise':'un--evalClosure'([], V4708, V4733))(V4734),
																											      case V4735 of
																												{'Idris.Prelude.Left', E2099} -> fun (V4736) -> {'Idris.Prelude.Left', V4736} end(E2099);
																												{'Idris.Prelude.Right', E2100} ->
																												    fun (V4737) ->
																													    begin
																													      V4738 = ('un--nfToCFType'(V0, V4672, 0, V4737))(V4734),
																													      case V4738 of
																														{'Idris.Prelude.Left', E2101} -> fun (V4739) -> {'Idris.Prelude.Left', V4739} end(E2101);
																														{'Idris.Prelude.Right', E2102} -> fun (V4740) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4732, V4740}} end(E2102);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E2100);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E2097, E2098);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V4730))(V4677),
																		    case V4741 of
																		      {'Idris.Prelude.Left', E2103} -> fun (V4742) -> {'Idris.Prelude.Left', V4742} end(E2103);
																		      {'Idris.Prelude.Right', E2104} -> fun (V4743) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4729, V4743}} end(E2104);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2095, E2096);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E2105} ->
																	  fun (V4744) ->
																		  begin
																		    V4745 = ('Idris.Core.Normalise':'un--evalClosure'([], V4708, V4744))(V4677),
																		    case V4745 of
																		      {'Idris.Prelude.Left', E2106} -> fun (V4746) -> {'Idris.Prelude.Left', V4746} end(E2106);
																		      {'Idris.Prelude.Right', E2107} ->
																			  fun (V4747) ->
																				  begin
																				    V4748 = ('un--nfToCFType'(V0, V4672, V2, V4747))(V4677),
																				    case V4748 of
																				      {'Idris.Prelude.Left', E2108} -> fun (V4749) -> {'Idris.Prelude.Left', V4749} end(E2108);
																				      {'Idris.Prelude.Right', E2109} -> fun (V4750) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4750}} end(E2109);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2107);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2105);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E2088);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E2086);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2084);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E2078, E2079, E2080, E2081, E2082);
								{'Idris.Core.Value.NType', E2110} -> fun (V4751) -> fun (V4752) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2110);
								{'Idris.Core.Value.NErased', E2111, E2112} -> fun (V4753, V4754) -> fun (V4755) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2111, E2112);
								_ ->
								    fun (V4756) ->
									    begin
									      V4785 = begin V4784 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4757) -> fun (V4758) -> fun (V4759) -> fun (V4760) -> fun (V4761) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4759, V4760, V4761) end end end end end, fun (V4762) -> fun (V4763) -> fun (V4764) -> V4763 end end end, fun (V4765) -> fun (V4766) -> fun (V4767) -> fun (V4768) -> fun (V4769) -> begin V4770 = V4767(V4769), begin V4771 = V4768(V4769), V4770(V4771) end end end end end end end}, fun (V4772) -> fun (V4773) -> fun (V4774) -> fun (V4775) -> fun (V4776) -> begin V4777 = V4774(V4776), (V4775(V4777))(V4776) end end end end end end, fun (V4778) -> fun (V4779) -> fun (V4780) -> begin V4781 = V4779(V4780), V4781(V4780) end end end end}, fun (V4782) -> fun (V4783) -> V4783 end end}, V0))(V4756), {'Idris.Prelude.Right', V4784} end,
									      case V4785 of
										{'Idris.Prelude.Left', E2072} -> fun (V4786) -> {'Idris.Prelude.Left', V4786} end(E2072);
										{'Idris.Prelude.Right', E2073} ->
										    fun (V4787) ->
											    begin
											      V4788 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4787, {'Idris.Core.Env.Nil'}, V3, V4756),
											      case V4788 of
												{'Idris.Prelude.Left', E2074} -> fun (V4789) -> {'Idris.Prelude.Left', V4789} end(E2074);
												{'Idris.Prelude.Right', E2075} ->
												    fun (V4790) ->
													    begin
													      V4795 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4791) -> fun (V4792) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4791, V4792) end end, fun (V4793) -> fun (V4794) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4793, V4794) end end}, V4790, V4756),
													      case V4795 of
														{'Idris.Prelude.Left', E2076} -> fun (V4796) -> {'Idris.Prelude.Left', V4796} end(E2076);
														{'Idris.Prelude.Right', E2077} -> fun (V4797) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4797))}, V4756) end(E2077);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2075);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2073);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end;
						    0 ->
							case V3 of
							  {'Idris.Core.Value.NBind', E2210, E2211, E2212, E2213} -> fun (V4798, V4799, V4800, V4801) -> fun (V4802) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V4798, <<"Function types not allowed in a foreign struct"/utf8>>}, V4802) end end(E2210, E2211, E2212, E2213);
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E2175, E2176, E2177, E2178, E2179} ->
								    fun (V4803, V4804, V4805, V4806, V4807) ->
									    fun (V4808) ->
										    begin
										      V4837 = begin V4836 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4809) -> fun (V4810) -> fun (V4811) -> fun (V4812) -> fun (V4813) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4811, V4812, V4813) end end end end end, fun (V4814) -> fun (V4815) -> fun (V4816) -> V4815 end end end, fun (V4817) -> fun (V4818) -> fun (V4819) -> fun (V4820) -> fun (V4821) -> begin V4822 = V4819(V4821), begin V4823 = V4820(V4821), V4822(V4823) end end end end end end end}, fun (V4824) -> fun (V4825) -> fun (V4826) -> fun (V4827) -> fun (V4828) -> begin V4829 = V4826(V4828), (V4827(V4829))(V4828) end end end end end end, fun (V4830) -> fun (V4831) -> fun (V4832) -> begin V4833 = V4831(V4832), V4833(V4832) end end end end}, fun (V4834) -> fun (V4835) -> V4835 end end}, V0))(V4808), {'Idris.Prelude.Right', V4836} end,
										      case V4837 of
											{'Idris.Prelude.Left', E2180} -> fun (V4838) -> {'Idris.Prelude.Left', V4838} end(E2180);
											{'Idris.Prelude.Right', E2181} ->
											    fun (V4839) ->
												    begin
												      V4844 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4840) -> fun (V4841) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4840, V4841) end end, fun (V4842) -> fun (V4843) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4842, V4843) end end}, V4804, V4808),
												      case V4844 of
													{'Idris.Prelude.Left', E2182} -> fun (V4845) -> {'Idris.Prelude.Left', V4845} end(E2182);
													{'Idris.Prelude.Right', E2183} ->
													    fun (V4846) ->
														    begin
														      V4847 = ('un--getNArgs'(V4839, V4846, V4807))(V4808),
														      case V4847 of
															{'Idris.Prelude.Left', E2184} -> fun (V4848) -> {'Idris.Prelude.Left', V4848} end(E2184);
															{'Idris.Prelude.Right', E2185} ->
															    fun (V4849) ->
																    case V4849 of
																      {'Idris.Compiler.CompileExpr.User', E2186, E2187} ->
																	  fun (V4850, V4851) ->
																		  begin
																		    V4853 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4852) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4839, V4852) end, V4851))(V4808),
																		    case V4853 of
																		      {'Idris.Prelude.Left', E2188} -> fun (V4854) -> {'Idris.Prelude.Left', V4854} end(E2188);
																		      {'Idris.Prelude.Right', E2189} ->
																			  fun (V4855) ->
																				  begin
																				    V4857 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4856) -> 'un--nfToCFType'(V0, V4803, V2, V4856) end, V4855))(V4808),
																				    case V4857 of
																				      {'Idris.Prelude.Left', E2190} -> fun (V4858) -> {'Idris.Prelude.Left', V4858} end(E2190);
																				      {'Idris.Prelude.Right', E2191} -> fun (V4859) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4846, V4859}} end(E2191);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2189);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2186, E2187);
																      {'Idris.Compiler.CompileExpr.Struct', E2192, E2193} ->
																	  fun (V4860, V4861) ->
																		  begin
																		    V4872 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V4862) ->
																								      case V4862 of
																									{'Idris.Builtin.MkPair', E2194, E2195} ->
																									    fun (V4863, V4864) ->
																										    fun (V4865) ->
																											    begin
																											      V4866 = ('Idris.Core.Normalise':'un--evalClosure'([], V4839, V4864))(V4865),
																											      case V4866 of
																												{'Idris.Prelude.Left', E2196} -> fun (V4867) -> {'Idris.Prelude.Left', V4867} end(E2196);
																												{'Idris.Prelude.Right', E2197} ->
																												    fun (V4868) ->
																													    begin
																													      V4869 = ('un--nfToCFType'(V0, V4803, 0, V4868))(V4865),
																													      case V4869 of
																														{'Idris.Prelude.Left', E2198} -> fun (V4870) -> {'Idris.Prelude.Left', V4870} end(E2198);
																														{'Idris.Prelude.Right', E2199} -> fun (V4871) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4863, V4871}} end(E2199);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E2197);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E2194, E2195);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V4861))(V4808),
																		    case V4872 of
																		      {'Idris.Prelude.Left', E2200} -> fun (V4873) -> {'Idris.Prelude.Left', V4873} end(E2200);
																		      {'Idris.Prelude.Right', E2201} -> fun (V4874) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4860, V4874}} end(E2201);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2192, E2193);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E2202} ->
																	  fun (V4875) ->
																		  begin
																		    V4876 = ('Idris.Core.Normalise':'un--evalClosure'([], V4839, V4875))(V4808),
																		    case V4876 of
																		      {'Idris.Prelude.Left', E2203} -> fun (V4877) -> {'Idris.Prelude.Left', V4877} end(E2203);
																		      {'Idris.Prelude.Right', E2204} ->
																			  fun (V4878) ->
																				  begin
																				    V4879 = ('un--nfToCFType'(V0, V4803, V2, V4878))(V4808),
																				    case V4879 of
																				      {'Idris.Prelude.Left', E2205} -> fun (V4880) -> {'Idris.Prelude.Left', V4880} end(E2205);
																				      {'Idris.Prelude.Right', E2206} -> fun (V4881) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V4881}} end(E2206);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E2204);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E2202);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E2185);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E2183);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E2181);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E2175, E2176, E2177, E2178, E2179);
								{'Idris.Core.Value.NType', E2207} -> fun (V4882) -> fun (V4883) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2207);
								{'Idris.Core.Value.NErased', E2208, E2209} -> fun (V4884, V4885) -> fun (V4886) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2208, E2209);
								_ ->
								    fun (V4887) ->
									    begin
									      V4916 = begin V4915 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4888) -> fun (V4889) -> fun (V4890) -> fun (V4891) -> fun (V4892) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4890, V4891, V4892) end end end end end, fun (V4893) -> fun (V4894) -> fun (V4895) -> V4894 end end end, fun (V4896) -> fun (V4897) -> fun (V4898) -> fun (V4899) -> fun (V4900) -> begin V4901 = V4898(V4900), begin V4902 = V4899(V4900), V4901(V4902) end end end end end end end}, fun (V4903) -> fun (V4904) -> fun (V4905) -> fun (V4906) -> fun (V4907) -> begin V4908 = V4905(V4907), (V4906(V4908))(V4907) end end end end end end, fun (V4909) -> fun (V4910) -> fun (V4911) -> begin V4912 = V4910(V4911), V4912(V4911) end end end end}, fun (V4913) -> fun (V4914) -> V4914 end end}, V0))(V4887), {'Idris.Prelude.Right', V4915} end,
									      case V4916 of
										{'Idris.Prelude.Left', E2169} -> fun (V4917) -> {'Idris.Prelude.Left', V4917} end(E2169);
										{'Idris.Prelude.Right', E2170} ->
										    fun (V4918) ->
											    begin
											      V4919 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V4918, {'Idris.Core.Env.Nil'}, V3, V4887),
											      case V4919 of
												{'Idris.Prelude.Left', E2171} -> fun (V4920) -> {'Idris.Prelude.Left', V4920} end(E2171);
												{'Idris.Prelude.Right', E2172} ->
												    fun (V4921) ->
													    begin
													      V4926 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4922) -> fun (V4923) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V4922, V4923) end end, fun (V4924) -> fun (V4925) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V4924, V4925) end end}, V4921, V4887),
													      case V4926 of
														{'Idris.Prelude.Left', E2173} -> fun (V4927) -> {'Idris.Prelude.Left', V4927} end(E2173);
														{'Idris.Prelude.Right', E2174} -> fun (V4928) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V4928))}, V4887) end(E2174);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E2172);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E2170);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end;
						    _ ->
							case V3 of
							  {'Idris.Core.Value.NTCon', E2037, E2038, E2039, E2040, E2041} ->
							      fun (V4929, V4930, V4931, V4932, V4933) ->
								      fun (V4934) ->
									      begin
										V4963 = begin V4962 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V4935) -> fun (V4936) -> fun (V4937) -> fun (V4938) -> fun (V4939) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V4937, V4938, V4939) end end end end end, fun (V4940) -> fun (V4941) -> fun (V4942) -> V4941 end end end, fun (V4943) -> fun (V4944) -> fun (V4945) -> fun (V4946) -> fun (V4947) -> begin V4948 = V4945(V4947), begin V4949 = V4946(V4947), V4948(V4949) end end end end end end end}, fun (V4950) -> fun (V4951) -> fun (V4952) -> fun (V4953) -> fun (V4954) -> begin V4955 = V4952(V4954), (V4953(V4955))(V4954) end end end end end end, fun (V4956) -> fun (V4957) -> fun (V4958) -> begin V4959 = V4957(V4958), V4959(V4958) end end end end}, fun (V4960) -> fun (V4961) -> V4961 end end}, V0))(V4934), {'Idris.Prelude.Right', V4962} end,
										case V4963 of
										  {'Idris.Prelude.Left', E2042} -> fun (V4964) -> {'Idris.Prelude.Left', V4964} end(E2042);
										  {'Idris.Prelude.Right', E2043} ->
										      fun (V4965) ->
											      begin
												V4970 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4966) -> fun (V4967) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V4966, V4967) end end, fun (V4968) -> fun (V4969) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V4968, V4969) end end}, V4930, V4934),
												case V4970 of
												  {'Idris.Prelude.Left', E2044} -> fun (V4971) -> {'Idris.Prelude.Left', V4971} end(E2044);
												  {'Idris.Prelude.Right', E2045} ->
												      fun (V4972) ->
													      begin
														V4973 = ('un--getNArgs'(V4965, V4972, V4933))(V4934),
														case V4973 of
														  {'Idris.Prelude.Left', E2046} -> fun (V4974) -> {'Idris.Prelude.Left', V4974} end(E2046);
														  {'Idris.Prelude.Right', E2047} ->
														      fun (V4975) ->
															      case V4975 of
																{'Idris.Compiler.CompileExpr.User', E2048, E2049} ->
																    fun (V4976, V4977) ->
																	    begin
																	      V4979 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4978) -> 'Idris.Core.Normalise':'un--evalClosure'([], V4965, V4978) end, V4977))(V4934),
																	      case V4979 of
																		{'Idris.Prelude.Left', E2050} -> fun (V4980) -> {'Idris.Prelude.Left', V4980} end(E2050);
																		{'Idris.Prelude.Right', E2051} ->
																		    fun (V4981) ->
																			    begin
																			      V4983 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V4982) -> 'un--nfToCFType'(V0, V4929, V2, V4982) end, V4981))(V4934),
																			      case V4983 of
																				{'Idris.Prelude.Left', E2052} -> fun (V4984) -> {'Idris.Prelude.Left', V4984} end(E2052);
																				{'Idris.Prelude.Right', E2053} -> fun (V4985) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V4972, V4985}} end(E2053);
																				_ -> erlang:throw("Error: Unreachable branch")
																			      end
																			    end
																		    end(E2051);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E2048, E2049);
																{'Idris.Compiler.CompileExpr.Struct', E2054, E2055} ->
																    fun (V4986, V4987) ->
																	    begin
																	      V4998 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							fun (V4988) ->
																								case V4988 of
																								  {'Idris.Builtin.MkPair', E2056, E2057} ->
																								      fun (V4989, V4990) ->
																									      fun (V4991) ->
																										      begin
																											V4992 = ('Idris.Core.Normalise':'un--evalClosure'([], V4965, V4990))(V4991),
																											case V4992 of
																											  {'Idris.Prelude.Left', E2058} -> fun (V4993) -> {'Idris.Prelude.Left', V4993} end(E2058);
																											  {'Idris.Prelude.Right', E2059} ->
																											      fun (V4994) ->
																												      begin
																													V4995 = ('un--nfToCFType'(V0, V4929, 0, V4994))(V4991),
																													case V4995 of
																													  {'Idris.Prelude.Left', E2060} -> fun (V4996) -> {'Idris.Prelude.Left', V4996} end(E2060);
																													  {'Idris.Prelude.Right', E2061} -> fun (V4997) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V4989, V4997}} end(E2061);
																													  _ -> erlang:throw("Error: Unreachable branch")
																													end
																												      end
																											      end(E2059);
																											  _ -> erlang:throw("Error: Unreachable branch")
																											end
																										      end
																									      end
																								      end(E2056, E2057);
																								  _ -> erlang:throw("Error: Unreachable branch")
																								end
																							end,
																							V4987))(V4934),
																	      case V4998 of
																		{'Idris.Prelude.Left', E2062} -> fun (V4999) -> {'Idris.Prelude.Left', V4999} end(E2062);
																		{'Idris.Prelude.Right', E2063} -> fun (V5000) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V4986, V5000}} end(E2063);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E2054, E2055);
																{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																{'Idris.Compiler.CompileExpr.NIORes', E2064} ->
																    fun (V5001) ->
																	    begin
																	      V5002 = ('Idris.Core.Normalise':'un--evalClosure'([], V4965, V5001))(V4934),
																	      case V5002 of
																		{'Idris.Prelude.Left', E2065} -> fun (V5003) -> {'Idris.Prelude.Left', V5003} end(E2065);
																		{'Idris.Prelude.Right', E2066} ->
																		    fun (V5004) ->
																			    begin
																			      V5005 = ('un--nfToCFType'(V0, V4929, V2, V5004))(V4934),
																			      case V5005 of
																				{'Idris.Prelude.Left', E2067} -> fun (V5006) -> {'Idris.Prelude.Left', V5006} end(E2067);
																				{'Idris.Prelude.Right', E2068} -> fun (V5007) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5007}} end(E2068);
																				_ -> erlang:throw("Error: Unreachable branch")
																			      end
																			    end
																		    end(E2066);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E2064);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
														      end(E2047);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													      end
												      end(E2045);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E2043);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end
							      end(E2037, E2038, E2039, E2040, E2041);
							  {'Idris.Core.Value.NType', E2069} -> fun (V5008) -> fun (V5009) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2069);
							  {'Idris.Core.Value.NErased', E2070, E2071} -> fun (V5010, V5011) -> fun (V5012) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2070, E2071);
							  _ ->
							      fun (V5013) ->
								      begin
									V5042 = begin V5041 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5014) -> fun (V5015) -> fun (V5016) -> fun (V5017) -> fun (V5018) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5016, V5017, V5018) end end end end end, fun (V5019) -> fun (V5020) -> fun (V5021) -> V5020 end end end, fun (V5022) -> fun (V5023) -> fun (V5024) -> fun (V5025) -> fun (V5026) -> begin V5027 = V5024(V5026), begin V5028 = V5025(V5026), V5027(V5028) end end end end end end end}, fun (V5029) -> fun (V5030) -> fun (V5031) -> fun (V5032) -> fun (V5033) -> begin V5034 = V5031(V5033), (V5032(V5034))(V5033) end end end end end end, fun (V5035) -> fun (V5036) -> fun (V5037) -> begin V5038 = V5036(V5037), V5038(V5037) end end end end}, fun (V5039) -> fun (V5040) -> V5040 end end}, V0))(V5013), {'Idris.Prelude.Right', V5041} end,
									case V5042 of
									  {'Idris.Prelude.Left', E2031} -> fun (V5043) -> {'Idris.Prelude.Left', V5043} end(E2031);
									  {'Idris.Prelude.Right', E2032} ->
									      fun (V5044) ->
										      begin
											V5045 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5044, {'Idris.Core.Env.Nil'}, V3, V5013),
											case V5045 of
											  {'Idris.Prelude.Left', E2033} -> fun (V5046) -> {'Idris.Prelude.Left', V5046} end(E2033);
											  {'Idris.Prelude.Right', E2034} ->
											      fun (V5047) ->
												      begin
													V5052 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5048) -> fun (V5049) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5048, V5049) end end, fun (V5050) -> fun (V5051) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5050, V5051) end end}, V5047, V5013),
													case V5052 of
													  {'Idris.Prelude.Left', E2035} -> fun (V5053) -> {'Idris.Prelude.Left', V5053} end(E2035);
													  {'Idris.Prelude.Right', E2036} -> fun (V5054) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5054))}, V5013) end(E2036);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E2034);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E2032);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
							end
						  end
					    end
				    end(E2029, E2030);
				_ ->
				    case V2 of
				      1 ->
					  case V3 of
					    {'Idris.Core.Value.NBind', E1928, E1929, E1930, E1931} ->
						fun (V5055, V5056, V5057, V5058) ->
							case V5057 of
							  {'Idris.Core.TT.Pi', E1973, E1974, E1975} ->
							      fun (V5059, V5060, V5061) ->
								      fun (V5062) ->
									      begin
										V5091 = begin V5090 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5063) -> fun (V5064) -> fun (V5065) -> fun (V5066) -> fun (V5067) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5065, V5066, V5067) end end end end end, fun (V5068) -> fun (V5069) -> fun (V5070) -> V5069 end end end, fun (V5071) -> fun (V5072) -> fun (V5073) -> fun (V5074) -> fun (V5075) -> begin V5076 = V5073(V5075), begin V5077 = V5074(V5075), V5076(V5077) end end end end end end end}, fun (V5078) -> fun (V5079) -> fun (V5080) -> fun (V5081) -> fun (V5082) -> begin V5083 = V5080(V5082), (V5081(V5083))(V5082) end end end end end end, fun (V5084) -> fun (V5085) -> fun (V5086) -> begin V5087 = V5085(V5086), V5087(V5086) end end end end}, fun (V5088) -> fun (V5089) -> V5089 end end}, V0))(V5062), {'Idris.Prelude.Right', V5090} end,
										case V5091 of
										  {'Idris.Prelude.Left', E1976} -> fun (V5092) -> {'Idris.Prelude.Left', V5092} end(E1976);
										  {'Idris.Prelude.Right', E1977} ->
										      fun (V5093) ->
											      begin
												V5094 = ('un--nfToCFType'(V0, V5055, 1, V5061))(V5062),
												case V5094 of
												  {'Idris.Prelude.Left', E1978} -> fun (V5095) -> {'Idris.Prelude.Left', V5095} end(E1978);
												  {'Idris.Prelude.Right', E1979} ->
												      fun (V5096) ->
													      begin
														V5097 = ((V5058(V5093))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5055, 1})))(V5062),
														case V5097 of
														  {'Idris.Prelude.Left', E1980} -> fun (V5098) -> {'Idris.Prelude.Left', V5098} end(E1980);
														  {'Idris.Prelude.Right', E1981} ->
														      fun (V5099) ->
															      begin
																V5100 = ('un--nfToCFType'(V0, V5055, 1, V5099))(V5062),
																case V5100 of
																  {'Idris.Prelude.Left', E1982} -> fun (V5101) -> {'Idris.Prelude.Left', V5101} end(E1982);
																  {'Idris.Prelude.Right', E1983} -> fun (V5102) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V5096, V5102}} end(E1983);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E1981);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													      end
												      end(E1979);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1977);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end
							      end(E1973, E1974, E1975);
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E1938, E1939, E1940, E1941, E1942} ->
								    fun (V5103, V5104, V5105, V5106, V5107) ->
									    fun (V5108) ->
										    begin
										      V5137 = begin V5136 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5109) -> fun (V5110) -> fun (V5111) -> fun (V5112) -> fun (V5113) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5111, V5112, V5113) end end end end end, fun (V5114) -> fun (V5115) -> fun (V5116) -> V5115 end end end, fun (V5117) -> fun (V5118) -> fun (V5119) -> fun (V5120) -> fun (V5121) -> begin V5122 = V5119(V5121), begin V5123 = V5120(V5121), V5122(V5123) end end end end end end end}, fun (V5124) -> fun (V5125) -> fun (V5126) -> fun (V5127) -> fun (V5128) -> begin V5129 = V5126(V5128), (V5127(V5129))(V5128) end end end end end end, fun (V5130) -> fun (V5131) -> fun (V5132) -> begin V5133 = V5131(V5132), V5133(V5132) end end end end}, fun (V5134) -> fun (V5135) -> V5135 end end}, V0))(V5108), {'Idris.Prelude.Right', V5136} end,
										      case V5137 of
											{'Idris.Prelude.Left', E1943} -> fun (V5138) -> {'Idris.Prelude.Left', V5138} end(E1943);
											{'Idris.Prelude.Right', E1944} ->
											    fun (V5139) ->
												    begin
												      V5144 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5140) -> fun (V5141) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5140, V5141) end end, fun (V5142) -> fun (V5143) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5142, V5143) end end}, V5104, V5108),
												      case V5144 of
													{'Idris.Prelude.Left', E1945} -> fun (V5145) -> {'Idris.Prelude.Left', V5145} end(E1945);
													{'Idris.Prelude.Right', E1946} ->
													    fun (V5146) ->
														    begin
														      V5147 = ('un--getNArgs'(V5139, V5146, V5107))(V5108),
														      case V5147 of
															{'Idris.Prelude.Left', E1947} -> fun (V5148) -> {'Idris.Prelude.Left', V5148} end(E1947);
															{'Idris.Prelude.Right', E1948} ->
															    fun (V5149) ->
																    case V5149 of
																      {'Idris.Compiler.CompileExpr.User', E1949, E1950} ->
																	  fun (V5150, V5151) ->
																		  begin
																		    V5153 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5152) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5139, V5152) end, V5151))(V5108),
																		    case V5153 of
																		      {'Idris.Prelude.Left', E1951} -> fun (V5154) -> {'Idris.Prelude.Left', V5154} end(E1951);
																		      {'Idris.Prelude.Right', E1952} ->
																			  fun (V5155) ->
																				  begin
																				    V5157 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5156) -> 'un--nfToCFType'(V0, V5103, V2, V5156) end, V5155))(V5108),
																				    case V5157 of
																				      {'Idris.Prelude.Left', E1953} -> fun (V5158) -> {'Idris.Prelude.Left', V5158} end(E1953);
																				      {'Idris.Prelude.Right', E1954} -> fun (V5159) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5146, V5159}} end(E1954);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E1952);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1949, E1950);
																      {'Idris.Compiler.CompileExpr.Struct', E1955, E1956} ->
																	  fun (V5160, V5161) ->
																		  begin
																		    V5172 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V5162) ->
																								      case V5162 of
																									{'Idris.Builtin.MkPair', E1957, E1958} ->
																									    fun (V5163, V5164) ->
																										    fun (V5165) ->
																											    begin
																											      V5166 = ('Idris.Core.Normalise':'un--evalClosure'([], V5139, V5164))(V5165),
																											      case V5166 of
																												{'Idris.Prelude.Left', E1959} -> fun (V5167) -> {'Idris.Prelude.Left', V5167} end(E1959);
																												{'Idris.Prelude.Right', E1960} ->
																												    fun (V5168) ->
																													    begin
																													      V5169 = ('un--nfToCFType'(V0, V5103, 0, V5168))(V5165),
																													      case V5169 of
																														{'Idris.Prelude.Left', E1961} -> fun (V5170) -> {'Idris.Prelude.Left', V5170} end(E1961);
																														{'Idris.Prelude.Right', E1962} -> fun (V5171) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5163, V5171}} end(E1962);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E1960);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E1957, E1958);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V5161))(V5108),
																		    case V5172 of
																		      {'Idris.Prelude.Left', E1963} -> fun (V5173) -> {'Idris.Prelude.Left', V5173} end(E1963);
																		      {'Idris.Prelude.Right', E1964} -> fun (V5174) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5160, V5174}} end(E1964);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1955, E1956);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E1965} ->
																	  fun (V5175) ->
																		  begin
																		    V5176 = ('Idris.Core.Normalise':'un--evalClosure'([], V5139, V5175))(V5108),
																		    case V5176 of
																		      {'Idris.Prelude.Left', E1966} -> fun (V5177) -> {'Idris.Prelude.Left', V5177} end(E1966);
																		      {'Idris.Prelude.Right', E1967} ->
																			  fun (V5178) ->
																				  begin
																				    V5179 = ('un--nfToCFType'(V0, V5103, V2, V5178))(V5108),
																				    case V5179 of
																				      {'Idris.Prelude.Left', E1968} -> fun (V5180) -> {'Idris.Prelude.Left', V5180} end(E1968);
																				      {'Idris.Prelude.Right', E1969} -> fun (V5181) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5181}} end(E1969);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E1967);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1965);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E1948);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E1946);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1944);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E1938, E1939, E1940, E1941, E1942);
								{'Idris.Core.Value.NType', E1970} -> fun (V5182) -> fun (V5183) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1970);
								{'Idris.Core.Value.NErased', E1971, E1972} -> fun (V5184, V5185) -> fun (V5186) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1971, E1972);
								_ ->
								    fun (V5187) ->
									    begin
									      V5216 = begin V5215 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5188) -> fun (V5189) -> fun (V5190) -> fun (V5191) -> fun (V5192) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5190, V5191, V5192) end end end end end, fun (V5193) -> fun (V5194) -> fun (V5195) -> V5194 end end end, fun (V5196) -> fun (V5197) -> fun (V5198) -> fun (V5199) -> fun (V5200) -> begin V5201 = V5198(V5200), begin V5202 = V5199(V5200), V5201(V5202) end end end end end end end}, fun (V5203) -> fun (V5204) -> fun (V5205) -> fun (V5206) -> fun (V5207) -> begin V5208 = V5205(V5207), (V5206(V5208))(V5207) end end end end end end, fun (V5209) -> fun (V5210) -> fun (V5211) -> begin V5212 = V5210(V5211), V5212(V5211) end end end end}, fun (V5213) -> fun (V5214) -> V5214 end end}, V0))(V5187), {'Idris.Prelude.Right', V5215} end,
									      case V5216 of
										{'Idris.Prelude.Left', E1932} -> fun (V5217) -> {'Idris.Prelude.Left', V5217} end(E1932);
										{'Idris.Prelude.Right', E1933} ->
										    fun (V5218) ->
											    begin
											      V5219 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5218, {'Idris.Core.Env.Nil'}, V3, V5187),
											      case V5219 of
												{'Idris.Prelude.Left', E1934} -> fun (V5220) -> {'Idris.Prelude.Left', V5220} end(E1934);
												{'Idris.Prelude.Right', E1935} ->
												    fun (V5221) ->
													    begin
													      V5226 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5222) -> fun (V5223) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5222, V5223) end end, fun (V5224) -> fun (V5225) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5224, V5225) end end}, V5221, V5187),
													      case V5226 of
														{'Idris.Prelude.Left', E1936} -> fun (V5227) -> {'Idris.Prelude.Left', V5227} end(E1936);
														{'Idris.Prelude.Right', E1937} -> fun (V5228) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5228))}, V5187) end(E1937);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1935);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1933);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						end(E1928, E1929, E1930, E1931);
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E1893, E1894, E1895, E1896, E1897} ->
						      fun (V5229, V5230, V5231, V5232, V5233) ->
							      fun (V5234) ->
								      begin
									V5263 = begin V5262 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5235) -> fun (V5236) -> fun (V5237) -> fun (V5238) -> fun (V5239) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5237, V5238, V5239) end end end end end, fun (V5240) -> fun (V5241) -> fun (V5242) -> V5241 end end end, fun (V5243) -> fun (V5244) -> fun (V5245) -> fun (V5246) -> fun (V5247) -> begin V5248 = V5245(V5247), begin V5249 = V5246(V5247), V5248(V5249) end end end end end end end}, fun (V5250) -> fun (V5251) -> fun (V5252) -> fun (V5253) -> fun (V5254) -> begin V5255 = V5252(V5254), (V5253(V5255))(V5254) end end end end end end, fun (V5256) -> fun (V5257) -> fun (V5258) -> begin V5259 = V5257(V5258), V5259(V5258) end end end end}, fun (V5260) -> fun (V5261) -> V5261 end end}, V0))(V5234), {'Idris.Prelude.Right', V5262} end,
									case V5263 of
									  {'Idris.Prelude.Left', E1898} -> fun (V5264) -> {'Idris.Prelude.Left', V5264} end(E1898);
									  {'Idris.Prelude.Right', E1899} ->
									      fun (V5265) ->
										      begin
											V5270 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5266) -> fun (V5267) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5266, V5267) end end, fun (V5268) -> fun (V5269) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5268, V5269) end end}, V5230, V5234),
											case V5270 of
											  {'Idris.Prelude.Left', E1900} -> fun (V5271) -> {'Idris.Prelude.Left', V5271} end(E1900);
											  {'Idris.Prelude.Right', E1901} ->
											      fun (V5272) ->
												      begin
													V5273 = ('un--getNArgs'(V5265, V5272, V5233))(V5234),
													case V5273 of
													  {'Idris.Prelude.Left', E1902} -> fun (V5274) -> {'Idris.Prelude.Left', V5274} end(E1902);
													  {'Idris.Prelude.Right', E1903} ->
													      fun (V5275) ->
														      case V5275 of
															{'Idris.Compiler.CompileExpr.User', E1904, E1905} ->
															    fun (V5276, V5277) ->
																    begin
																      V5279 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5278) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5265, V5278) end, V5277))(V5234),
																      case V5279 of
																	{'Idris.Prelude.Left', E1906} -> fun (V5280) -> {'Idris.Prelude.Left', V5280} end(E1906);
																	{'Idris.Prelude.Right', E1907} ->
																	    fun (V5281) ->
																		    begin
																		      V5283 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5282) -> 'un--nfToCFType'(V0, V5229, V2, V5282) end, V5281))(V5234),
																		      case V5283 of
																			{'Idris.Prelude.Left', E1908} -> fun (V5284) -> {'Idris.Prelude.Left', V5284} end(E1908);
																			{'Idris.Prelude.Right', E1909} -> fun (V5285) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5272, V5285}} end(E1909);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1907);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1904, E1905);
															{'Idris.Compiler.CompileExpr.Struct', E1910, E1911} ->
															    fun (V5286, V5287) ->
																    begin
																      V5298 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V5288) ->
																							case V5288 of
																							  {'Idris.Builtin.MkPair', E1912, E1913} ->
																							      fun (V5289, V5290) ->
																								      fun (V5291) ->
																									      begin
																										V5292 = ('Idris.Core.Normalise':'un--evalClosure'([], V5265, V5290))(V5291),
																										case V5292 of
																										  {'Idris.Prelude.Left', E1914} -> fun (V5293) -> {'Idris.Prelude.Left', V5293} end(E1914);
																										  {'Idris.Prelude.Right', E1915} ->
																										      fun (V5294) ->
																											      begin
																												V5295 = ('un--nfToCFType'(V0, V5229, 0, V5294))(V5291),
																												case V5295 of
																												  {'Idris.Prelude.Left', E1916} -> fun (V5296) -> {'Idris.Prelude.Left', V5296} end(E1916);
																												  {'Idris.Prelude.Right', E1917} -> fun (V5297) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5289, V5297}} end(E1917);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E1915);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E1912, E1913);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V5287))(V5234),
																      case V5298 of
																	{'Idris.Prelude.Left', E1918} -> fun (V5299) -> {'Idris.Prelude.Left', V5299} end(E1918);
																	{'Idris.Prelude.Right', E1919} -> fun (V5300) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5286, V5300}} end(E1919);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1910, E1911);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E1920} ->
															    fun (V5301) ->
																    begin
																      V5302 = ('Idris.Core.Normalise':'un--evalClosure'([], V5265, V5301))(V5234),
																      case V5302 of
																	{'Idris.Prelude.Left', E1921} -> fun (V5303) -> {'Idris.Prelude.Left', V5303} end(E1921);
																	{'Idris.Prelude.Right', E1922} ->
																	    fun (V5304) ->
																		    begin
																		      V5305 = ('un--nfToCFType'(V0, V5229, V2, V5304))(V5234),
																		      case V5305 of
																			{'Idris.Prelude.Left', E1923} -> fun (V5306) -> {'Idris.Prelude.Left', V5306} end(E1923);
																			{'Idris.Prelude.Right', E1924} -> fun (V5307) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5307}} end(E1924);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1922);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1920);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E1903);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E1901);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1899);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E1893, E1894, E1895, E1896, E1897);
						  {'Idris.Core.Value.NType', E1925} -> fun (V5308) -> fun (V5309) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1925);
						  {'Idris.Core.Value.NErased', E1926, E1927} -> fun (V5310, V5311) -> fun (V5312) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1926, E1927);
						  _ ->
						      fun (V5313) ->
							      begin
								V5342 = begin V5341 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5314) -> fun (V5315) -> fun (V5316) -> fun (V5317) -> fun (V5318) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5316, V5317, V5318) end end end end end, fun (V5319) -> fun (V5320) -> fun (V5321) -> V5320 end end end, fun (V5322) -> fun (V5323) -> fun (V5324) -> fun (V5325) -> fun (V5326) -> begin V5327 = V5324(V5326), begin V5328 = V5325(V5326), V5327(V5328) end end end end end end end}, fun (V5329) -> fun (V5330) -> fun (V5331) -> fun (V5332) -> fun (V5333) -> begin V5334 = V5331(V5333), (V5332(V5334))(V5333) end end end end end end, fun (V5335) -> fun (V5336) -> fun (V5337) -> begin V5338 = V5336(V5337), V5338(V5337) end end end end}, fun (V5339) -> fun (V5340) -> V5340 end end}, V0))(V5313), {'Idris.Prelude.Right', V5341} end,
								case V5342 of
								  {'Idris.Prelude.Left', E1887} -> fun (V5343) -> {'Idris.Prelude.Left', V5343} end(E1887);
								  {'Idris.Prelude.Right', E1888} ->
								      fun (V5344) ->
									      begin
										V5345 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5344, {'Idris.Core.Env.Nil'}, V3, V5313),
										case V5345 of
										  {'Idris.Prelude.Left', E1889} -> fun (V5346) -> {'Idris.Prelude.Left', V5346} end(E1889);
										  {'Idris.Prelude.Right', E1890} ->
										      fun (V5347) ->
											      begin
												V5352 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5348) -> fun (V5349) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5348, V5349) end end, fun (V5350) -> fun (V5351) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5350, V5351) end end}, V5347, V5313),
												case V5352 of
												  {'Idris.Prelude.Left', E1891} -> fun (V5353) -> {'Idris.Prelude.Left', V5353} end(E1891);
												  {'Idris.Prelude.Right', E1892} -> fun (V5354) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5354))}, V5313) end(E1892);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1890);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1888);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end;
				      0 ->
					  case V3 of
					    {'Idris.Core.Value.NBind', E2025, E2026, E2027, E2028} -> fun (V5355, V5356, V5357, V5358) -> fun (V5359) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V5355, <<"Function types not allowed in a foreign struct"/utf8>>}, V5359) end end(E2025, E2026, E2027, E2028);
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E1990, E1991, E1992, E1993, E1994} ->
						      fun (V5360, V5361, V5362, V5363, V5364) ->
							      fun (V5365) ->
								      begin
									V5394 = begin V5393 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5366) -> fun (V5367) -> fun (V5368) -> fun (V5369) -> fun (V5370) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5368, V5369, V5370) end end end end end, fun (V5371) -> fun (V5372) -> fun (V5373) -> V5372 end end end, fun (V5374) -> fun (V5375) -> fun (V5376) -> fun (V5377) -> fun (V5378) -> begin V5379 = V5376(V5378), begin V5380 = V5377(V5378), V5379(V5380) end end end end end end end}, fun (V5381) -> fun (V5382) -> fun (V5383) -> fun (V5384) -> fun (V5385) -> begin V5386 = V5383(V5385), (V5384(V5386))(V5385) end end end end end end, fun (V5387) -> fun (V5388) -> fun (V5389) -> begin V5390 = V5388(V5389), V5390(V5389) end end end end}, fun (V5391) -> fun (V5392) -> V5392 end end}, V0))(V5365), {'Idris.Prelude.Right', V5393} end,
									case V5394 of
									  {'Idris.Prelude.Left', E1995} -> fun (V5395) -> {'Idris.Prelude.Left', V5395} end(E1995);
									  {'Idris.Prelude.Right', E1996} ->
									      fun (V5396) ->
										      begin
											V5401 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5397) -> fun (V5398) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5397, V5398) end end, fun (V5399) -> fun (V5400) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5399, V5400) end end}, V5361, V5365),
											case V5401 of
											  {'Idris.Prelude.Left', E1997} -> fun (V5402) -> {'Idris.Prelude.Left', V5402} end(E1997);
											  {'Idris.Prelude.Right', E1998} ->
											      fun (V5403) ->
												      begin
													V5404 = ('un--getNArgs'(V5396, V5403, V5364))(V5365),
													case V5404 of
													  {'Idris.Prelude.Left', E1999} -> fun (V5405) -> {'Idris.Prelude.Left', V5405} end(E1999);
													  {'Idris.Prelude.Right', E2000} ->
													      fun (V5406) ->
														      case V5406 of
															{'Idris.Compiler.CompileExpr.User', E2001, E2002} ->
															    fun (V5407, V5408) ->
																    begin
																      V5410 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5409) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5396, V5409) end, V5408))(V5365),
																      case V5410 of
																	{'Idris.Prelude.Left', E2003} -> fun (V5411) -> {'Idris.Prelude.Left', V5411} end(E2003);
																	{'Idris.Prelude.Right', E2004} ->
																	    fun (V5412) ->
																		    begin
																		      V5414 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5413) -> 'un--nfToCFType'(V0, V5360, V2, V5413) end, V5412))(V5365),
																		      case V5414 of
																			{'Idris.Prelude.Left', E2005} -> fun (V5415) -> {'Idris.Prelude.Left', V5415} end(E2005);
																			{'Idris.Prelude.Right', E2006} -> fun (V5416) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5403, V5416}} end(E2006);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2004);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2001, E2002);
															{'Idris.Compiler.CompileExpr.Struct', E2007, E2008} ->
															    fun (V5417, V5418) ->
																    begin
																      V5429 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V5419) ->
																							case V5419 of
																							  {'Idris.Builtin.MkPair', E2009, E2010} ->
																							      fun (V5420, V5421) ->
																								      fun (V5422) ->
																									      begin
																										V5423 = ('Idris.Core.Normalise':'un--evalClosure'([], V5396, V5421))(V5422),
																										case V5423 of
																										  {'Idris.Prelude.Left', E2011} -> fun (V5424) -> {'Idris.Prelude.Left', V5424} end(E2011);
																										  {'Idris.Prelude.Right', E2012} ->
																										      fun (V5425) ->
																											      begin
																												V5426 = ('un--nfToCFType'(V0, V5360, 0, V5425))(V5422),
																												case V5426 of
																												  {'Idris.Prelude.Left', E2013} -> fun (V5427) -> {'Idris.Prelude.Left', V5427} end(E2013);
																												  {'Idris.Prelude.Right', E2014} -> fun (V5428) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5420, V5428}} end(E2014);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E2012);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E2009, E2010);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V5418))(V5365),
																      case V5429 of
																	{'Idris.Prelude.Left', E2015} -> fun (V5430) -> {'Idris.Prelude.Left', V5430} end(E2015);
																	{'Idris.Prelude.Right', E2016} -> fun (V5431) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5417, V5431}} end(E2016);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2007, E2008);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E2017} ->
															    fun (V5432) ->
																    begin
																      V5433 = ('Idris.Core.Normalise':'un--evalClosure'([], V5396, V5432))(V5365),
																      case V5433 of
																	{'Idris.Prelude.Left', E2018} -> fun (V5434) -> {'Idris.Prelude.Left', V5434} end(E2018);
																	{'Idris.Prelude.Right', E2019} ->
																	    fun (V5435) ->
																		    begin
																		      V5436 = ('un--nfToCFType'(V0, V5360, V2, V5435))(V5365),
																		      case V5436 of
																			{'Idris.Prelude.Left', E2020} -> fun (V5437) -> {'Idris.Prelude.Left', V5437} end(E2020);
																			{'Idris.Prelude.Right', E2021} -> fun (V5438) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5438}} end(E2021);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E2019);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E2017);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E2000);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E1998);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1996);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E1990, E1991, E1992, E1993, E1994);
						  {'Idris.Core.Value.NType', E2022} -> fun (V5439) -> fun (V5440) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2022);
						  {'Idris.Core.Value.NErased', E2023, E2024} -> fun (V5441, V5442) -> fun (V5443) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2023, E2024);
						  _ ->
						      fun (V5444) ->
							      begin
								V5473 = begin V5472 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5445) -> fun (V5446) -> fun (V5447) -> fun (V5448) -> fun (V5449) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5447, V5448, V5449) end end end end end, fun (V5450) -> fun (V5451) -> fun (V5452) -> V5451 end end end, fun (V5453) -> fun (V5454) -> fun (V5455) -> fun (V5456) -> fun (V5457) -> begin V5458 = V5455(V5457), begin V5459 = V5456(V5457), V5458(V5459) end end end end end end end}, fun (V5460) -> fun (V5461) -> fun (V5462) -> fun (V5463) -> fun (V5464) -> begin V5465 = V5462(V5464), (V5463(V5465))(V5464) end end end end end end, fun (V5466) -> fun (V5467) -> fun (V5468) -> begin V5469 = V5467(V5468), V5469(V5468) end end end end}, fun (V5470) -> fun (V5471) -> V5471 end end}, V0))(V5444), {'Idris.Prelude.Right', V5472} end,
								case V5473 of
								  {'Idris.Prelude.Left', E1984} -> fun (V5474) -> {'Idris.Prelude.Left', V5474} end(E1984);
								  {'Idris.Prelude.Right', E1985} ->
								      fun (V5475) ->
									      begin
										V5476 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5475, {'Idris.Core.Env.Nil'}, V3, V5444),
										case V5476 of
										  {'Idris.Prelude.Left', E1986} -> fun (V5477) -> {'Idris.Prelude.Left', V5477} end(E1986);
										  {'Idris.Prelude.Right', E1987} ->
										      fun (V5478) ->
											      begin
												V5483 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5479) -> fun (V5480) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5479, V5480) end end, fun (V5481) -> fun (V5482) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5481, V5482) end end}, V5478, V5444),
												case V5483 of
												  {'Idris.Prelude.Left', E1988} -> fun (V5484) -> {'Idris.Prelude.Left', V5484} end(E1988);
												  {'Idris.Prelude.Right', E1989} -> fun (V5485) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5485))}, V5444) end(E1989);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1987);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1985);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end;
				      _ ->
					  case V3 of
					    {'Idris.Core.Value.NTCon', E1852, E1853, E1854, E1855, E1856} ->
						fun (V5486, V5487, V5488, V5489, V5490) ->
							fun (V5491) ->
								begin
								  V5520 = begin V5519 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5492) -> fun (V5493) -> fun (V5494) -> fun (V5495) -> fun (V5496) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5494, V5495, V5496) end end end end end, fun (V5497) -> fun (V5498) -> fun (V5499) -> V5498 end end end, fun (V5500) -> fun (V5501) -> fun (V5502) -> fun (V5503) -> fun (V5504) -> begin V5505 = V5502(V5504), begin V5506 = V5503(V5504), V5505(V5506) end end end end end end end}, fun (V5507) -> fun (V5508) -> fun (V5509) -> fun (V5510) -> fun (V5511) -> begin V5512 = V5509(V5511), (V5510(V5512))(V5511) end end end end end end, fun (V5513) -> fun (V5514) -> fun (V5515) -> begin V5516 = V5514(V5515), V5516(V5515) end end end end}, fun (V5517) -> fun (V5518) -> V5518 end end}, V0))(V5491), {'Idris.Prelude.Right', V5519} end,
								  case V5520 of
								    {'Idris.Prelude.Left', E1857} -> fun (V5521) -> {'Idris.Prelude.Left', V5521} end(E1857);
								    {'Idris.Prelude.Right', E1858} ->
									fun (V5522) ->
										begin
										  V5527 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5523) -> fun (V5524) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5523, V5524) end end, fun (V5525) -> fun (V5526) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5525, V5526) end end}, V5487, V5491),
										  case V5527 of
										    {'Idris.Prelude.Left', E1859} -> fun (V5528) -> {'Idris.Prelude.Left', V5528} end(E1859);
										    {'Idris.Prelude.Right', E1860} ->
											fun (V5529) ->
												begin
												  V5530 = ('un--getNArgs'(V5522, V5529, V5490))(V5491),
												  case V5530 of
												    {'Idris.Prelude.Left', E1861} -> fun (V5531) -> {'Idris.Prelude.Left', V5531} end(E1861);
												    {'Idris.Prelude.Right', E1862} ->
													fun (V5532) ->
														case V5532 of
														  {'Idris.Compiler.CompileExpr.User', E1863, E1864} ->
														      fun (V5533, V5534) ->
															      begin
																V5536 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5535) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5522, V5535) end, V5534))(V5491),
																case V5536 of
																  {'Idris.Prelude.Left', E1865} -> fun (V5537) -> {'Idris.Prelude.Left', V5537} end(E1865);
																  {'Idris.Prelude.Right', E1866} ->
																      fun (V5538) ->
																	      begin
																		V5540 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5539) -> 'un--nfToCFType'(V0, V5486, V2, V5539) end, V5538))(V5491),
																		case V5540 of
																		  {'Idris.Prelude.Left', E1867} -> fun (V5541) -> {'Idris.Prelude.Left', V5541} end(E1867);
																		  {'Idris.Prelude.Right', E1868} -> fun (V5542) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5529, V5542}} end(E1868);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E1866);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E1863, E1864);
														  {'Idris.Compiler.CompileExpr.Struct', E1869, E1870} ->
														      fun (V5543, V5544) ->
															      begin
																V5555 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					  fun (V5545) ->
																						  case V5545 of
																						    {'Idris.Builtin.MkPair', E1871, E1872} ->
																							fun (V5546, V5547) ->
																								fun (V5548) ->
																									begin
																									  V5549 = ('Idris.Core.Normalise':'un--evalClosure'([], V5522, V5547))(V5548),
																									  case V5549 of
																									    {'Idris.Prelude.Left', E1873} -> fun (V5550) -> {'Idris.Prelude.Left', V5550} end(E1873);
																									    {'Idris.Prelude.Right', E1874} ->
																										fun (V5551) ->
																											begin
																											  V5552 = ('un--nfToCFType'(V0, V5486, 0, V5551))(V5548),
																											  case V5552 of
																											    {'Idris.Prelude.Left', E1875} -> fun (V5553) -> {'Idris.Prelude.Left', V5553} end(E1875);
																											    {'Idris.Prelude.Right', E1876} -> fun (V5554) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5546, V5554}} end(E1876);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																											end
																										end(E1874);
																									    _ -> erlang:throw("Error: Unreachable branch")
																									  end
																									end
																								end
																							end(E1871, E1872);
																						    _ -> erlang:throw("Error: Unreachable branch")
																						  end
																					  end,
																					  V5544))(V5491),
																case V5555 of
																  {'Idris.Prelude.Left', E1877} -> fun (V5556) -> {'Idris.Prelude.Left', V5556} end(E1877);
																  {'Idris.Prelude.Right', E1878} -> fun (V5557) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5543, V5557}} end(E1878);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E1869, E1870);
														  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														  {'Idris.Compiler.CompileExpr.NIORes', E1879} ->
														      fun (V5558) ->
															      begin
																V5559 = ('Idris.Core.Normalise':'un--evalClosure'([], V5522, V5558))(V5491),
																case V5559 of
																  {'Idris.Prelude.Left', E1880} -> fun (V5560) -> {'Idris.Prelude.Left', V5560} end(E1880);
																  {'Idris.Prelude.Right', E1881} ->
																      fun (V5561) ->
																	      begin
																		V5562 = ('un--nfToCFType'(V0, V5486, V2, V5561))(V5491),
																		case V5562 of
																		  {'Idris.Prelude.Left', E1882} -> fun (V5563) -> {'Idris.Prelude.Left', V5563} end(E1882);
																		  {'Idris.Prelude.Right', E1883} -> fun (V5564) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5564}} end(E1883);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E1881);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E1879);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													end(E1862);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end(E1860);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E1858);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end
						end(E1852, E1853, E1854, E1855, E1856);
					    {'Idris.Core.Value.NType', E1884} -> fun (V5565) -> fun (V5566) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1884);
					    {'Idris.Core.Value.NErased', E1885, E1886} -> fun (V5567, V5568) -> fun (V5569) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1885, E1886);
					    _ ->
						fun (V5570) ->
							begin
							  V5599 = begin V5598 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5571) -> fun (V5572) -> fun (V5573) -> fun (V5574) -> fun (V5575) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5573, V5574, V5575) end end end end end, fun (V5576) -> fun (V5577) -> fun (V5578) -> V5577 end end end, fun (V5579) -> fun (V5580) -> fun (V5581) -> fun (V5582) -> fun (V5583) -> begin V5584 = V5581(V5583), begin V5585 = V5582(V5583), V5584(V5585) end end end end end end end}, fun (V5586) -> fun (V5587) -> fun (V5588) -> fun (V5589) -> fun (V5590) -> begin V5591 = V5588(V5590), (V5589(V5591))(V5590) end end end end end end, fun (V5592) -> fun (V5593) -> fun (V5594) -> begin V5595 = V5593(V5594), V5595(V5594) end end end end}, fun (V5596) -> fun (V5597) -> V5597 end end}, V0))(V5570), {'Idris.Prelude.Right', V5598} end,
							  case V5599 of
							    {'Idris.Prelude.Left', E1846} -> fun (V5600) -> {'Idris.Prelude.Left', V5600} end(E1846);
							    {'Idris.Prelude.Right', E1847} ->
								fun (V5601) ->
									begin
									  V5602 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5601, {'Idris.Core.Env.Nil'}, V3, V5570),
									  case V5602 of
									    {'Idris.Prelude.Left', E1848} -> fun (V5603) -> {'Idris.Prelude.Left', V5603} end(E1848);
									    {'Idris.Prelude.Right', E1849} ->
										fun (V5604) ->
											begin
											  V5609 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5605) -> fun (V5606) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5605, V5606) end end, fun (V5607) -> fun (V5608) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5607, V5608) end end}, V5604, V5570),
											  case V5609 of
											    {'Idris.Prelude.Left', E1850} -> fun (V5610) -> {'Idris.Prelude.Left', V5610} end(E1850);
											    {'Idris.Prelude.Right', E1851} -> fun (V5611) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5611))}, V5570) end(E1851);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E1849);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E1847);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					  end
				    end
			      end
			end
		  end
	  end(E1844, E1845);
      _ ->
	  case V2 of
	    1 ->
		case V3 of
		  {'Idris.Core.Value.NPrimVal', E736, E737} ->
		      fun (V5612, V5613) ->
			      case V5613 of
				{'Idris.Core.TT.StringType'} -> fun () -> fun (V5614) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFString'}} end end();
				_ ->
				    case V3 of
				      {'Idris.Core.Value.NPrimVal', E921, E922} ->
					  fun (V5615, V5616) ->
						  case V5616 of
						    {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V5617) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
						    {'Idris.Core.TT.CharType'} -> fun () -> fun (V5618) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
						    {'Idris.Core.TT.WorldType'} -> fun () -> fun (V5619) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E1005, E1006, E1007, E1008} ->
								    fun (V5620, V5621, V5622, V5623) ->
									    case V5622 of
									      {'Idris.Core.TT.Pi', E1050, E1051, E1052} ->
										  fun (V5624, V5625, V5626) ->
											  fun (V5627) ->
												  begin
												    V5656 = begin V5655 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5628) -> fun (V5629) -> fun (V5630) -> fun (V5631) -> fun (V5632) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5630, V5631, V5632) end end end end end, fun (V5633) -> fun (V5634) -> fun (V5635) -> V5634 end end end, fun (V5636) -> fun (V5637) -> fun (V5638) -> fun (V5639) -> fun (V5640) -> begin V5641 = V5638(V5640), begin V5642 = V5639(V5640), V5641(V5642) end end end end end end end}, fun (V5643) -> fun (V5644) -> fun (V5645) -> fun (V5646) -> fun (V5647) -> begin V5648 = V5645(V5647), (V5646(V5648))(V5647) end end end end end end, fun (V5649) -> fun (V5650) -> fun (V5651) -> begin V5652 = V5650(V5651), V5652(V5651) end end end end}, fun (V5653) -> fun (V5654) -> V5654 end end}, V0))(V5627), {'Idris.Prelude.Right', V5655} end,
												    case V5656 of
												      {'Idris.Prelude.Left', E1053} -> fun (V5657) -> {'Idris.Prelude.Left', V5657} end(E1053);
												      {'Idris.Prelude.Right', E1054} ->
													  fun (V5658) ->
														  begin
														    V5659 = ('un--nfToCFType'(V0, V5620, 1, V5626))(V5627),
														    case V5659 of
														      {'Idris.Prelude.Left', E1055} -> fun (V5660) -> {'Idris.Prelude.Left', V5660} end(E1055);
														      {'Idris.Prelude.Right', E1056} ->
															  fun (V5661) ->
																  begin
																    V5662 = ((V5623(V5658))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5620, 1})))(V5627),
																    case V5662 of
																      {'Idris.Prelude.Left', E1057} -> fun (V5663) -> {'Idris.Prelude.Left', V5663} end(E1057);
																      {'Idris.Prelude.Right', E1058} ->
																	  fun (V5664) ->
																		  begin
																		    V5665 = ('un--nfToCFType'(V0, V5620, 1, V5664))(V5627),
																		    case V5665 of
																		      {'Idris.Prelude.Left', E1059} -> fun (V5666) -> {'Idris.Prelude.Left', V5666} end(E1059);
																		      {'Idris.Prelude.Right', E1060} -> fun (V5667) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V5661, V5667}} end(E1060);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1058);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E1056);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1054);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E1050, E1051, E1052);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E1015, E1016, E1017, E1018, E1019} ->
											fun (V5668, V5669, V5670, V5671, V5672) ->
												fun (V5673) ->
													begin
													  V5702 = begin V5701 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5674) -> fun (V5675) -> fun (V5676) -> fun (V5677) -> fun (V5678) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5676, V5677, V5678) end end end end end, fun (V5679) -> fun (V5680) -> fun (V5681) -> V5680 end end end, fun (V5682) -> fun (V5683) -> fun (V5684) -> fun (V5685) -> fun (V5686) -> begin V5687 = V5684(V5686), begin V5688 = V5685(V5686), V5687(V5688) end end end end end end end}, fun (V5689) -> fun (V5690) -> fun (V5691) -> fun (V5692) -> fun (V5693) -> begin V5694 = V5691(V5693), (V5692(V5694))(V5693) end end end end end end, fun (V5695) -> fun (V5696) -> fun (V5697) -> begin V5698 = V5696(V5697), V5698(V5697) end end end end}, fun (V5699) -> fun (V5700) -> V5700 end end}, V0))(V5673), {'Idris.Prelude.Right', V5701} end,
													  case V5702 of
													    {'Idris.Prelude.Left', E1020} -> fun (V5703) -> {'Idris.Prelude.Left', V5703} end(E1020);
													    {'Idris.Prelude.Right', E1021} ->
														fun (V5704) ->
															begin
															  V5709 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5705) -> fun (V5706) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5705, V5706) end end, fun (V5707) -> fun (V5708) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5707, V5708) end end}, V5669, V5673),
															  case V5709 of
															    {'Idris.Prelude.Left', E1022} -> fun (V5710) -> {'Idris.Prelude.Left', V5710} end(E1022);
															    {'Idris.Prelude.Right', E1023} ->
																fun (V5711) ->
																	begin
																	  V5712 = ('un--getNArgs'(V5704, V5711, V5672))(V5673),
																	  case V5712 of
																	    {'Idris.Prelude.Left', E1024} -> fun (V5713) -> {'Idris.Prelude.Left', V5713} end(E1024);
																	    {'Idris.Prelude.Right', E1025} ->
																		fun (V5714) ->
																			case V5714 of
																			  {'Idris.Compiler.CompileExpr.User', E1026, E1027} ->
																			      fun (V5715, V5716) ->
																				      begin
																					V5718 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5717) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5704, V5717) end, V5716))(V5673),
																					case V5718 of
																					  {'Idris.Prelude.Left', E1028} -> fun (V5719) -> {'Idris.Prelude.Left', V5719} end(E1028);
																					  {'Idris.Prelude.Right', E1029} ->
																					      fun (V5720) ->
																						      begin
																							V5722 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5721) -> 'un--nfToCFType'(V0, V5668, V2, V5721) end, V5720))(V5673),
																							case V5722 of
																							  {'Idris.Prelude.Left', E1030} -> fun (V5723) -> {'Idris.Prelude.Left', V5723} end(E1030);
																							  {'Idris.Prelude.Right', E1031} -> fun (V5724) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5711, V5724}} end(E1031);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E1029);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1026, E1027);
																			  {'Idris.Compiler.CompileExpr.Struct', E1032, E1033} ->
																			      fun (V5725, V5726) ->
																				      begin
																					V5737 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V5727) ->
																											  case V5727 of
																											    {'Idris.Builtin.MkPair', E1034, E1035} ->
																												fun (V5728, V5729) ->
																													fun (V5730) ->
																														begin
																														  V5731 = ('Idris.Core.Normalise':'un--evalClosure'([], V5704, V5729))(V5730),
																														  case V5731 of
																														    {'Idris.Prelude.Left', E1036} -> fun (V5732) -> {'Idris.Prelude.Left', V5732} end(E1036);
																														    {'Idris.Prelude.Right', E1037} ->
																															fun (V5733) ->
																																begin
																																  V5734 = ('un--nfToCFType'(V0, V5668, 0, V5733))(V5730),
																																  case V5734 of
																																    {'Idris.Prelude.Left', E1038} -> fun (V5735) -> {'Idris.Prelude.Left', V5735} end(E1038);
																																    {'Idris.Prelude.Right', E1039} -> fun (V5736) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5728, V5736}} end(E1039);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E1037);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E1034, E1035);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V5726))(V5673),
																					case V5737 of
																					  {'Idris.Prelude.Left', E1040} -> fun (V5738) -> {'Idris.Prelude.Left', V5738} end(E1040);
																					  {'Idris.Prelude.Right', E1041} -> fun (V5739) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5725, V5739}} end(E1041);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1032, E1033);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E1042} ->
																			      fun (V5740) ->
																				      begin
																					V5741 = ('Idris.Core.Normalise':'un--evalClosure'([], V5704, V5740))(V5673),
																					case V5741 of
																					  {'Idris.Prelude.Left', E1043} -> fun (V5742) -> {'Idris.Prelude.Left', V5742} end(E1043);
																					  {'Idris.Prelude.Right', E1044} ->
																					      fun (V5743) ->
																						      begin
																							V5744 = ('un--nfToCFType'(V0, V5668, V2, V5743))(V5673),
																							case V5744 of
																							  {'Idris.Prelude.Left', E1045} -> fun (V5745) -> {'Idris.Prelude.Left', V5745} end(E1045);
																							  {'Idris.Prelude.Right', E1046} -> fun (V5746) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5746}} end(E1046);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E1044);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1042);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E1025);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E1023);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E1021);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E1015, E1016, E1017, E1018, E1019);
										    {'Idris.Core.Value.NType', E1047} -> fun (V5747) -> fun (V5748) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1047);
										    {'Idris.Core.Value.NErased', E1048, E1049} -> fun (V5749, V5750) -> fun (V5751) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1048, E1049);
										    _ ->
											fun (V5752) ->
												begin
												  V5781 = begin V5780 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5753) -> fun (V5754) -> fun (V5755) -> fun (V5756) -> fun (V5757) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5755, V5756, V5757) end end end end end, fun (V5758) -> fun (V5759) -> fun (V5760) -> V5759 end end end, fun (V5761) -> fun (V5762) -> fun (V5763) -> fun (V5764) -> fun (V5765) -> begin V5766 = V5763(V5765), begin V5767 = V5764(V5765), V5766(V5767) end end end end end end end}, fun (V5768) -> fun (V5769) -> fun (V5770) -> fun (V5771) -> fun (V5772) -> begin V5773 = V5770(V5772), (V5771(V5773))(V5772) end end end end end end, fun (V5774) -> fun (V5775) -> fun (V5776) -> begin V5777 = V5775(V5776), V5777(V5776) end end end end}, fun (V5778) -> fun (V5779) -> V5779 end end}, V0))(V5752), {'Idris.Prelude.Right', V5780} end,
												  case V5781 of
												    {'Idris.Prelude.Left', E1009} -> fun (V5782) -> {'Idris.Prelude.Left', V5782} end(E1009);
												    {'Idris.Prelude.Right', E1010} ->
													fun (V5783) ->
														begin
														  V5784 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5783, {'Idris.Core.Env.Nil'}, V3, V5752),
														  case V5784 of
														    {'Idris.Prelude.Left', E1011} -> fun (V5785) -> {'Idris.Prelude.Left', V5785} end(E1011);
														    {'Idris.Prelude.Right', E1012} ->
															fun (V5786) ->
																begin
																  V5791 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5787) -> fun (V5788) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5787, V5788) end end, fun (V5789) -> fun (V5790) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5789, V5790) end end}, V5786, V5752),
																  case V5791 of
																    {'Idris.Prelude.Left', E1013} -> fun (V5792) -> {'Idris.Prelude.Left', V5792} end(E1013);
																    {'Idris.Prelude.Right', E1014} -> fun (V5793) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5793))}, V5752) end(E1014);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E1012);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E1010);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E1005, E1006, E1007, E1008);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E970, E971, E972, E973, E974} ->
									  fun (V5794, V5795, V5796, V5797, V5798) ->
										  fun (V5799) ->
											  begin
											    V5828 = begin V5827 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5800) -> fun (V5801) -> fun (V5802) -> fun (V5803) -> fun (V5804) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5802, V5803, V5804) end end end end end, fun (V5805) -> fun (V5806) -> fun (V5807) -> V5806 end end end, fun (V5808) -> fun (V5809) -> fun (V5810) -> fun (V5811) -> fun (V5812) -> begin V5813 = V5810(V5812), begin V5814 = V5811(V5812), V5813(V5814) end end end end end end end}, fun (V5815) -> fun (V5816) -> fun (V5817) -> fun (V5818) -> fun (V5819) -> begin V5820 = V5817(V5819), (V5818(V5820))(V5819) end end end end end end, fun (V5821) -> fun (V5822) -> fun (V5823) -> begin V5824 = V5822(V5823), V5824(V5823) end end end end}, fun (V5825) -> fun (V5826) -> V5826 end end}, V0))(V5799), {'Idris.Prelude.Right', V5827} end,
											    case V5828 of
											      {'Idris.Prelude.Left', E975} -> fun (V5829) -> {'Idris.Prelude.Left', V5829} end(E975);
											      {'Idris.Prelude.Right', E976} ->
												  fun (V5830) ->
													  begin
													    V5835 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5831) -> fun (V5832) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5831, V5832) end end, fun (V5833) -> fun (V5834) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5833, V5834) end end}, V5795, V5799),
													    case V5835 of
													      {'Idris.Prelude.Left', E977} -> fun (V5836) -> {'Idris.Prelude.Left', V5836} end(E977);
													      {'Idris.Prelude.Right', E978} ->
														  fun (V5837) ->
															  begin
															    V5838 = ('un--getNArgs'(V5830, V5837, V5798))(V5799),
															    case V5838 of
															      {'Idris.Prelude.Left', E979} -> fun (V5839) -> {'Idris.Prelude.Left', V5839} end(E979);
															      {'Idris.Prelude.Right', E980} ->
																  fun (V5840) ->
																	  case V5840 of
																	    {'Idris.Compiler.CompileExpr.User', E981, E982} ->
																		fun (V5841, V5842) ->
																			begin
																			  V5844 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5843) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5830, V5843) end, V5842))(V5799),
																			  case V5844 of
																			    {'Idris.Prelude.Left', E983} -> fun (V5845) -> {'Idris.Prelude.Left', V5845} end(E983);
																			    {'Idris.Prelude.Right', E984} ->
																				fun (V5846) ->
																					begin
																					  V5848 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5847) -> 'un--nfToCFType'(V0, V5794, V2, V5847) end, V5846))(V5799),
																					  case V5848 of
																					    {'Idris.Prelude.Left', E985} -> fun (V5849) -> {'Idris.Prelude.Left', V5849} end(E985);
																					    {'Idris.Prelude.Right', E986} -> fun (V5850) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5837, V5850}} end(E986);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E984);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E981, E982);
																	    {'Idris.Compiler.CompileExpr.Struct', E987, E988} ->
																		fun (V5851, V5852) ->
																			begin
																			  V5863 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V5853) ->
																									    case V5853 of
																									      {'Idris.Builtin.MkPair', E989, E990} ->
																										  fun (V5854, V5855) ->
																											  fun (V5856) ->
																												  begin
																												    V5857 = ('Idris.Core.Normalise':'un--evalClosure'([], V5830, V5855))(V5856),
																												    case V5857 of
																												      {'Idris.Prelude.Left', E991} -> fun (V5858) -> {'Idris.Prelude.Left', V5858} end(E991);
																												      {'Idris.Prelude.Right', E992} ->
																													  fun (V5859) ->
																														  begin
																														    V5860 = ('un--nfToCFType'(V0, V5794, 0, V5859))(V5856),
																														    case V5860 of
																														      {'Idris.Prelude.Left', E993} -> fun (V5861) -> {'Idris.Prelude.Left', V5861} end(E993);
																														      {'Idris.Prelude.Right', E994} -> fun (V5862) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5854, V5862}} end(E994);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E992);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E989, E990);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V5852))(V5799),
																			  case V5863 of
																			    {'Idris.Prelude.Left', E995} -> fun (V5864) -> {'Idris.Prelude.Left', V5864} end(E995);
																			    {'Idris.Prelude.Right', E996} -> fun (V5865) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5851, V5865}} end(E996);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E987, E988);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E997} ->
																		fun (V5866) ->
																			begin
																			  V5867 = ('Idris.Core.Normalise':'un--evalClosure'([], V5830, V5866))(V5799),
																			  case V5867 of
																			    {'Idris.Prelude.Left', E998} -> fun (V5868) -> {'Idris.Prelude.Left', V5868} end(E998);
																			    {'Idris.Prelude.Right', E999} ->
																				fun (V5869) ->
																					begin
																					  V5870 = ('un--nfToCFType'(V0, V5794, V2, V5869))(V5799),
																					  case V5870 of
																					    {'Idris.Prelude.Left', E1000} -> fun (V5871) -> {'Idris.Prelude.Left', V5871} end(E1000);
																					    {'Idris.Prelude.Right', E1001} -> fun (V5872) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V5872}} end(E1001);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E999);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E997);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E980);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E978);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E976);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E970, E971, E972, E973, E974);
								      {'Idris.Core.Value.NType', E1002} -> fun (V5873) -> fun (V5874) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1002);
								      {'Idris.Core.Value.NErased', E1003, E1004} -> fun (V5875, V5876) -> fun (V5877) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1003, E1004);
								      _ ->
									  fun (V5878) ->
										  begin
										    V5907 = begin V5906 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5879) -> fun (V5880) -> fun (V5881) -> fun (V5882) -> fun (V5883) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5881, V5882, V5883) end end end end end, fun (V5884) -> fun (V5885) -> fun (V5886) -> V5885 end end end, fun (V5887) -> fun (V5888) -> fun (V5889) -> fun (V5890) -> fun (V5891) -> begin V5892 = V5889(V5891), begin V5893 = V5890(V5891), V5892(V5893) end end end end end end end}, fun (V5894) -> fun (V5895) -> fun (V5896) -> fun (V5897) -> fun (V5898) -> begin V5899 = V5896(V5898), (V5897(V5899))(V5898) end end end end end end, fun (V5900) -> fun (V5901) -> fun (V5902) -> begin V5903 = V5901(V5902), V5903(V5902) end end end end}, fun (V5904) -> fun (V5905) -> V5905 end end}, V0))(V5878), {'Idris.Prelude.Right', V5906} end,
										    case V5907 of
										      {'Idris.Prelude.Left', E964} -> fun (V5908) -> {'Idris.Prelude.Left', V5908} end(E964);
										      {'Idris.Prelude.Right', E965} ->
											  fun (V5909) ->
												  begin
												    V5910 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V5909, {'Idris.Core.Env.Nil'}, V3, V5878),
												    case V5910 of
												      {'Idris.Prelude.Left', E966} -> fun (V5911) -> {'Idris.Prelude.Left', V5911} end(E966);
												      {'Idris.Prelude.Right', E967} ->
													  fun (V5912) ->
														  begin
														    V5917 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5913) -> fun (V5914) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V5913, V5914) end end, fun (V5915) -> fun (V5916) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V5915, V5916) end end}, V5912, V5878),
														    case V5917 of
														      {'Idris.Prelude.Left', E968} -> fun (V5918) -> {'Idris.Prelude.Left', V5918} end(E968);
														      {'Idris.Prelude.Right', E969} -> fun (V5919) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V5919))}, V5878) end(E969);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E967);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E965);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E1102, E1103, E1104, E1105} -> fun (V5920, V5921, V5922, V5923) -> fun (V5924) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V5920, <<"Function types not allowed in a foreign struct"/utf8>>}, V5924) end end(E1102, E1103, E1104, E1105);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E1067, E1068, E1069, E1070, E1071} ->
									  fun (V5925, V5926, V5927, V5928, V5929) ->
										  fun (V5930) ->
											  begin
											    V5959 = begin V5958 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V5931) -> fun (V5932) -> fun (V5933) -> fun (V5934) -> fun (V5935) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5933, V5934, V5935) end end end end end, fun (V5936) -> fun (V5937) -> fun (V5938) -> V5937 end end end, fun (V5939) -> fun (V5940) -> fun (V5941) -> fun (V5942) -> fun (V5943) -> begin V5944 = V5941(V5943), begin V5945 = V5942(V5943), V5944(V5945) end end end end end end end}, fun (V5946) -> fun (V5947) -> fun (V5948) -> fun (V5949) -> fun (V5950) -> begin V5951 = V5948(V5950), (V5949(V5951))(V5950) end end end end end end, fun (V5952) -> fun (V5953) -> fun (V5954) -> begin V5955 = V5953(V5954), V5955(V5954) end end end end}, fun (V5956) -> fun (V5957) -> V5957 end end}, V0))(V5930), {'Idris.Prelude.Right', V5958} end,
											    case V5959 of
											      {'Idris.Prelude.Left', E1072} -> fun (V5960) -> {'Idris.Prelude.Left', V5960} end(E1072);
											      {'Idris.Prelude.Right', E1073} ->
												  fun (V5961) ->
													  begin
													    V5966 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5962) -> fun (V5963) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V5962, V5963) end end, fun (V5964) -> fun (V5965) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V5964, V5965) end end}, V5926, V5930),
													    case V5966 of
													      {'Idris.Prelude.Left', E1074} -> fun (V5967) -> {'Idris.Prelude.Left', V5967} end(E1074);
													      {'Idris.Prelude.Right', E1075} ->
														  fun (V5968) ->
															  begin
															    V5969 = ('un--getNArgs'(V5961, V5968, V5929))(V5930),
															    case V5969 of
															      {'Idris.Prelude.Left', E1076} -> fun (V5970) -> {'Idris.Prelude.Left', V5970} end(E1076);
															      {'Idris.Prelude.Right', E1077} ->
																  fun (V5971) ->
																	  case V5971 of
																	    {'Idris.Compiler.CompileExpr.User', E1078, E1079} ->
																		fun (V5972, V5973) ->
																			begin
																			  V5975 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5974) -> 'Idris.Core.Normalise':'un--evalClosure'([], V5961, V5974) end, V5973))(V5930),
																			  case V5975 of
																			    {'Idris.Prelude.Left', E1080} -> fun (V5976) -> {'Idris.Prelude.Left', V5976} end(E1080);
																			    {'Idris.Prelude.Right', E1081} ->
																				fun (V5977) ->
																					begin
																					  V5979 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V5978) -> 'un--nfToCFType'(V0, V5925, V2, V5978) end, V5977))(V5930),
																					  case V5979 of
																					    {'Idris.Prelude.Left', E1082} -> fun (V5980) -> {'Idris.Prelude.Left', V5980} end(E1082);
																					    {'Idris.Prelude.Right', E1083} -> fun (V5981) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V5968, V5981}} end(E1083);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1081);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1078, E1079);
																	    {'Idris.Compiler.CompileExpr.Struct', E1084, E1085} ->
																		fun (V5982, V5983) ->
																			begin
																			  V5994 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V5984) ->
																									    case V5984 of
																									      {'Idris.Builtin.MkPair', E1086, E1087} ->
																										  fun (V5985, V5986) ->
																											  fun (V5987) ->
																												  begin
																												    V5988 = ('Idris.Core.Normalise':'un--evalClosure'([], V5961, V5986))(V5987),
																												    case V5988 of
																												      {'Idris.Prelude.Left', E1088} -> fun (V5989) -> {'Idris.Prelude.Left', V5989} end(E1088);
																												      {'Idris.Prelude.Right', E1089} ->
																													  fun (V5990) ->
																														  begin
																														    V5991 = ('un--nfToCFType'(V0, V5925, 0, V5990))(V5987),
																														    case V5991 of
																														      {'Idris.Prelude.Left', E1090} -> fun (V5992) -> {'Idris.Prelude.Left', V5992} end(E1090);
																														      {'Idris.Prelude.Right', E1091} -> fun (V5993) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V5985, V5993}} end(E1091);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E1089);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E1086, E1087);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V5983))(V5930),
																			  case V5994 of
																			    {'Idris.Prelude.Left', E1092} -> fun (V5995) -> {'Idris.Prelude.Left', V5995} end(E1092);
																			    {'Idris.Prelude.Right', E1093} -> fun (V5996) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V5982, V5996}} end(E1093);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1084, E1085);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E1094} ->
																		fun (V5997) ->
																			begin
																			  V5998 = ('Idris.Core.Normalise':'un--evalClosure'([], V5961, V5997))(V5930),
																			  case V5998 of
																			    {'Idris.Prelude.Left', E1095} -> fun (V5999) -> {'Idris.Prelude.Left', V5999} end(E1095);
																			    {'Idris.Prelude.Right', E1096} ->
																				fun (V6000) ->
																					begin
																					  V6001 = ('un--nfToCFType'(V0, V5925, V2, V6000))(V5930),
																					  case V6001 of
																					    {'Idris.Prelude.Left', E1097} -> fun (V6002) -> {'Idris.Prelude.Left', V6002} end(E1097);
																					    {'Idris.Prelude.Right', E1098} -> fun (V6003) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6003}} end(E1098);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1096);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1094);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E1077);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E1075);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E1073);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E1067, E1068, E1069, E1070, E1071);
								      {'Idris.Core.Value.NType', E1099} -> fun (V6004) -> fun (V6005) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1099);
								      {'Idris.Core.Value.NErased', E1100, E1101} -> fun (V6006, V6007) -> fun (V6008) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1100, E1101);
								      _ ->
									  fun (V6009) ->
										  begin
										    V6038 = begin V6037 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6010) -> fun (V6011) -> fun (V6012) -> fun (V6013) -> fun (V6014) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6012, V6013, V6014) end end end end end, fun (V6015) -> fun (V6016) -> fun (V6017) -> V6016 end end end, fun (V6018) -> fun (V6019) -> fun (V6020) -> fun (V6021) -> fun (V6022) -> begin V6023 = V6020(V6022), begin V6024 = V6021(V6022), V6023(V6024) end end end end end end end}, fun (V6025) -> fun (V6026) -> fun (V6027) -> fun (V6028) -> fun (V6029) -> begin V6030 = V6027(V6029), (V6028(V6030))(V6029) end end end end end end, fun (V6031) -> fun (V6032) -> fun (V6033) -> begin V6034 = V6032(V6033), V6034(V6033) end end end end}, fun (V6035) -> fun (V6036) -> V6036 end end}, V0))(V6009), {'Idris.Prelude.Right', V6037} end,
										    case V6038 of
										      {'Idris.Prelude.Left', E1061} -> fun (V6039) -> {'Idris.Prelude.Left', V6039} end(E1061);
										      {'Idris.Prelude.Right', E1062} ->
											  fun (V6040) ->
												  begin
												    V6041 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6040, {'Idris.Core.Env.Nil'}, V3, V6009),
												    case V6041 of
												      {'Idris.Prelude.Left', E1063} -> fun (V6042) -> {'Idris.Prelude.Left', V6042} end(E1063);
												      {'Idris.Prelude.Right', E1064} ->
													  fun (V6043) ->
														  begin
														    V6048 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6044) -> fun (V6045) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6044, V6045) end end, fun (V6046) -> fun (V6047) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6046, V6047) end end}, V6043, V6009),
														    case V6048 of
														      {'Idris.Prelude.Left', E1065} -> fun (V6049) -> {'Idris.Prelude.Left', V6049} end(E1065);
														      {'Idris.Prelude.Right', E1066} -> fun (V6050) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6050))}, V6009) end(E1066);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1064);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E1062);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E929, E930, E931, E932, E933} ->
								    fun (V6051, V6052, V6053, V6054, V6055) ->
									    fun (V6056) ->
										    begin
										      V6085 = begin V6084 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6057) -> fun (V6058) -> fun (V6059) -> fun (V6060) -> fun (V6061) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6059, V6060, V6061) end end end end end, fun (V6062) -> fun (V6063) -> fun (V6064) -> V6063 end end end, fun (V6065) -> fun (V6066) -> fun (V6067) -> fun (V6068) -> fun (V6069) -> begin V6070 = V6067(V6069), begin V6071 = V6068(V6069), V6070(V6071) end end end end end end end}, fun (V6072) -> fun (V6073) -> fun (V6074) -> fun (V6075) -> fun (V6076) -> begin V6077 = V6074(V6076), (V6075(V6077))(V6076) end end end end end end, fun (V6078) -> fun (V6079) -> fun (V6080) -> begin V6081 = V6079(V6080), V6081(V6080) end end end end}, fun (V6082) -> fun (V6083) -> V6083 end end}, V0))(V6056), {'Idris.Prelude.Right', V6084} end,
										      case V6085 of
											{'Idris.Prelude.Left', E934} -> fun (V6086) -> {'Idris.Prelude.Left', V6086} end(E934);
											{'Idris.Prelude.Right', E935} ->
											    fun (V6087) ->
												    begin
												      V6092 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6088) -> fun (V6089) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6088, V6089) end end, fun (V6090) -> fun (V6091) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6090, V6091) end end}, V6052, V6056),
												      case V6092 of
													{'Idris.Prelude.Left', E936} -> fun (V6093) -> {'Idris.Prelude.Left', V6093} end(E936);
													{'Idris.Prelude.Right', E937} ->
													    fun (V6094) ->
														    begin
														      V6095 = ('un--getNArgs'(V6087, V6094, V6055))(V6056),
														      case V6095 of
															{'Idris.Prelude.Left', E938} -> fun (V6096) -> {'Idris.Prelude.Left', V6096} end(E938);
															{'Idris.Prelude.Right', E939} ->
															    fun (V6097) ->
																    case V6097 of
																      {'Idris.Compiler.CompileExpr.User', E940, E941} ->
																	  fun (V6098, V6099) ->
																		  begin
																		    V6101 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6100) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6087, V6100) end, V6099))(V6056),
																		    case V6101 of
																		      {'Idris.Prelude.Left', E942} -> fun (V6102) -> {'Idris.Prelude.Left', V6102} end(E942);
																		      {'Idris.Prelude.Right', E943} ->
																			  fun (V6103) ->
																				  begin
																				    V6105 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6104) -> 'un--nfToCFType'(V0, V6051, V2, V6104) end, V6103))(V6056),
																				    case V6105 of
																				      {'Idris.Prelude.Left', E944} -> fun (V6106) -> {'Idris.Prelude.Left', V6106} end(E944);
																				      {'Idris.Prelude.Right', E945} -> fun (V6107) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6094, V6107}} end(E945);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E943);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E940, E941);
																      {'Idris.Compiler.CompileExpr.Struct', E946, E947} ->
																	  fun (V6108, V6109) ->
																		  begin
																		    V6120 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V6110) ->
																								      case V6110 of
																									{'Idris.Builtin.MkPair', E948, E949} ->
																									    fun (V6111, V6112) ->
																										    fun (V6113) ->
																											    begin
																											      V6114 = ('Idris.Core.Normalise':'un--evalClosure'([], V6087, V6112))(V6113),
																											      case V6114 of
																												{'Idris.Prelude.Left', E950} -> fun (V6115) -> {'Idris.Prelude.Left', V6115} end(E950);
																												{'Idris.Prelude.Right', E951} ->
																												    fun (V6116) ->
																													    begin
																													      V6117 = ('un--nfToCFType'(V0, V6051, 0, V6116))(V6113),
																													      case V6117 of
																														{'Idris.Prelude.Left', E952} -> fun (V6118) -> {'Idris.Prelude.Left', V6118} end(E952);
																														{'Idris.Prelude.Right', E953} -> fun (V6119) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6111, V6119}} end(E953);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E951);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E948, E949);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V6109))(V6056),
																		    case V6120 of
																		      {'Idris.Prelude.Left', E954} -> fun (V6121) -> {'Idris.Prelude.Left', V6121} end(E954);
																		      {'Idris.Prelude.Right', E955} -> fun (V6122) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6108, V6122}} end(E955);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E946, E947);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E956} ->
																	  fun (V6123) ->
																		  begin
																		    V6124 = ('Idris.Core.Normalise':'un--evalClosure'([], V6087, V6123))(V6056),
																		    case V6124 of
																		      {'Idris.Prelude.Left', E957} -> fun (V6125) -> {'Idris.Prelude.Left', V6125} end(E957);
																		      {'Idris.Prelude.Right', E958} ->
																			  fun (V6126) ->
																				  begin
																				    V6127 = ('un--nfToCFType'(V0, V6051, V2, V6126))(V6056),
																				    case V6127 of
																				      {'Idris.Prelude.Left', E959} -> fun (V6128) -> {'Idris.Prelude.Left', V6128} end(E959);
																				      {'Idris.Prelude.Right', E960} -> fun (V6129) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6129}} end(E960);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E958);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E956);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E939);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E937);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E935);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E929, E930, E931, E932, E933);
								{'Idris.Core.Value.NType', E961} -> fun (V6130) -> fun (V6131) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E961);
								{'Idris.Core.Value.NErased', E962, E963} -> fun (V6132, V6133) -> fun (V6134) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E962, E963);
								_ ->
								    fun (V6135) ->
									    begin
									      V6164 = begin V6163 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6136) -> fun (V6137) -> fun (V6138) -> fun (V6139) -> fun (V6140) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6138, V6139, V6140) end end end end end, fun (V6141) -> fun (V6142) -> fun (V6143) -> V6142 end end end, fun (V6144) -> fun (V6145) -> fun (V6146) -> fun (V6147) -> fun (V6148) -> begin V6149 = V6146(V6148), begin V6150 = V6147(V6148), V6149(V6150) end end end end end end end}, fun (V6151) -> fun (V6152) -> fun (V6153) -> fun (V6154) -> fun (V6155) -> begin V6156 = V6153(V6155), (V6154(V6156))(V6155) end end end end end end, fun (V6157) -> fun (V6158) -> fun (V6159) -> begin V6160 = V6158(V6159), V6160(V6159) end end end end}, fun (V6161) -> fun (V6162) -> V6162 end end}, V0))(V6135), {'Idris.Prelude.Right', V6163} end,
									      case V6164 of
										{'Idris.Prelude.Left', E923} -> fun (V6165) -> {'Idris.Prelude.Left', V6165} end(E923);
										{'Idris.Prelude.Right', E924} ->
										    fun (V6166) ->
											    begin
											      V6167 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6166, {'Idris.Core.Env.Nil'}, V3, V6135),
											      case V6167 of
												{'Idris.Prelude.Left', E925} -> fun (V6168) -> {'Idris.Prelude.Left', V6168} end(E925);
												{'Idris.Prelude.Right', E926} ->
												    fun (V6169) ->
													    begin
													      V6174 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6170) -> fun (V6171) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6170, V6171) end end, fun (V6172) -> fun (V6173) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6172, V6173) end end}, V6169, V6135),
													      case V6174 of
														{'Idris.Prelude.Left', E927} -> fun (V6175) -> {'Idris.Prelude.Left', V6175} end(E927);
														{'Idris.Prelude.Right', E928} -> fun (V6176) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6176))}, V6135) end(E928);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E926);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E924);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					  end(E921, E922);
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E820, E821, E822, E823} ->
						      fun (V6177, V6178, V6179, V6180) ->
							      case V6179 of
								{'Idris.Core.TT.Pi', E865, E866, E867} ->
								    fun (V6181, V6182, V6183) ->
									    fun (V6184) ->
										    begin
										      V6213 = begin V6212 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6185) -> fun (V6186) -> fun (V6187) -> fun (V6188) -> fun (V6189) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6187, V6188, V6189) end end end end end, fun (V6190) -> fun (V6191) -> fun (V6192) -> V6191 end end end, fun (V6193) -> fun (V6194) -> fun (V6195) -> fun (V6196) -> fun (V6197) -> begin V6198 = V6195(V6197), begin V6199 = V6196(V6197), V6198(V6199) end end end end end end end}, fun (V6200) -> fun (V6201) -> fun (V6202) -> fun (V6203) -> fun (V6204) -> begin V6205 = V6202(V6204), (V6203(V6205))(V6204) end end end end end end, fun (V6206) -> fun (V6207) -> fun (V6208) -> begin V6209 = V6207(V6208), V6209(V6208) end end end end}, fun (V6210) -> fun (V6211) -> V6211 end end}, V0))(V6184), {'Idris.Prelude.Right', V6212} end,
										      case V6213 of
											{'Idris.Prelude.Left', E868} -> fun (V6214) -> {'Idris.Prelude.Left', V6214} end(E868);
											{'Idris.Prelude.Right', E869} ->
											    fun (V6215) ->
												    begin
												      V6216 = ('un--nfToCFType'(V0, V6177, 1, V6183))(V6184),
												      case V6216 of
													{'Idris.Prelude.Left', E870} -> fun (V6217) -> {'Idris.Prelude.Left', V6217} end(E870);
													{'Idris.Prelude.Right', E871} ->
													    fun (V6218) ->
														    begin
														      V6219 = ((V6180(V6215))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V6177, 1})))(V6184),
														      case V6219 of
															{'Idris.Prelude.Left', E872} -> fun (V6220) -> {'Idris.Prelude.Left', V6220} end(E872);
															{'Idris.Prelude.Right', E873} ->
															    fun (V6221) ->
																    begin
																      V6222 = ('un--nfToCFType'(V0, V6177, 1, V6221))(V6184),
																      case V6222 of
																	{'Idris.Prelude.Left', E874} -> fun (V6223) -> {'Idris.Prelude.Left', V6223} end(E874);
																	{'Idris.Prelude.Right', E875} -> fun (V6224) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V6218, V6224}} end(E875);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E873);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E871);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E869);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E865, E866, E867);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E830, E831, E832, E833, E834} ->
									  fun (V6225, V6226, V6227, V6228, V6229) ->
										  fun (V6230) ->
											  begin
											    V6259 = begin V6258 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6231) -> fun (V6232) -> fun (V6233) -> fun (V6234) -> fun (V6235) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6233, V6234, V6235) end end end end end, fun (V6236) -> fun (V6237) -> fun (V6238) -> V6237 end end end, fun (V6239) -> fun (V6240) -> fun (V6241) -> fun (V6242) -> fun (V6243) -> begin V6244 = V6241(V6243), begin V6245 = V6242(V6243), V6244(V6245) end end end end end end end}, fun (V6246) -> fun (V6247) -> fun (V6248) -> fun (V6249) -> fun (V6250) -> begin V6251 = V6248(V6250), (V6249(V6251))(V6250) end end end end end end, fun (V6252) -> fun (V6253) -> fun (V6254) -> begin V6255 = V6253(V6254), V6255(V6254) end end end end}, fun (V6256) -> fun (V6257) -> V6257 end end}, V0))(V6230), {'Idris.Prelude.Right', V6258} end,
											    case V6259 of
											      {'Idris.Prelude.Left', E835} -> fun (V6260) -> {'Idris.Prelude.Left', V6260} end(E835);
											      {'Idris.Prelude.Right', E836} ->
												  fun (V6261) ->
													  begin
													    V6266 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6262) -> fun (V6263) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6262, V6263) end end, fun (V6264) -> fun (V6265) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6264, V6265) end end}, V6226, V6230),
													    case V6266 of
													      {'Idris.Prelude.Left', E837} -> fun (V6267) -> {'Idris.Prelude.Left', V6267} end(E837);
													      {'Idris.Prelude.Right', E838} ->
														  fun (V6268) ->
															  begin
															    V6269 = ('un--getNArgs'(V6261, V6268, V6229))(V6230),
															    case V6269 of
															      {'Idris.Prelude.Left', E839} -> fun (V6270) -> {'Idris.Prelude.Left', V6270} end(E839);
															      {'Idris.Prelude.Right', E840} ->
																  fun (V6271) ->
																	  case V6271 of
																	    {'Idris.Compiler.CompileExpr.User', E841, E842} ->
																		fun (V6272, V6273) ->
																			begin
																			  V6275 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6274) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6261, V6274) end, V6273))(V6230),
																			  case V6275 of
																			    {'Idris.Prelude.Left', E843} -> fun (V6276) -> {'Idris.Prelude.Left', V6276} end(E843);
																			    {'Idris.Prelude.Right', E844} ->
																				fun (V6277) ->
																					begin
																					  V6279 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6278) -> 'un--nfToCFType'(V0, V6225, V2, V6278) end, V6277))(V6230),
																					  case V6279 of
																					    {'Idris.Prelude.Left', E845} -> fun (V6280) -> {'Idris.Prelude.Left', V6280} end(E845);
																					    {'Idris.Prelude.Right', E846} -> fun (V6281) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6268, V6281}} end(E846);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E844);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E841, E842);
																	    {'Idris.Compiler.CompileExpr.Struct', E847, E848} ->
																		fun (V6282, V6283) ->
																			begin
																			  V6294 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V6284) ->
																									    case V6284 of
																									      {'Idris.Builtin.MkPair', E849, E850} ->
																										  fun (V6285, V6286) ->
																											  fun (V6287) ->
																												  begin
																												    V6288 = ('Idris.Core.Normalise':'un--evalClosure'([], V6261, V6286))(V6287),
																												    case V6288 of
																												      {'Idris.Prelude.Left', E851} -> fun (V6289) -> {'Idris.Prelude.Left', V6289} end(E851);
																												      {'Idris.Prelude.Right', E852} ->
																													  fun (V6290) ->
																														  begin
																														    V6291 = ('un--nfToCFType'(V0, V6225, 0, V6290))(V6287),
																														    case V6291 of
																														      {'Idris.Prelude.Left', E853} -> fun (V6292) -> {'Idris.Prelude.Left', V6292} end(E853);
																														      {'Idris.Prelude.Right', E854} -> fun (V6293) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6285, V6293}} end(E854);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E852);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E849, E850);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V6283))(V6230),
																			  case V6294 of
																			    {'Idris.Prelude.Left', E855} -> fun (V6295) -> {'Idris.Prelude.Left', V6295} end(E855);
																			    {'Idris.Prelude.Right', E856} -> fun (V6296) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6282, V6296}} end(E856);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E847, E848);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E857} ->
																		fun (V6297) ->
																			begin
																			  V6298 = ('Idris.Core.Normalise':'un--evalClosure'([], V6261, V6297))(V6230),
																			  case V6298 of
																			    {'Idris.Prelude.Left', E858} -> fun (V6299) -> {'Idris.Prelude.Left', V6299} end(E858);
																			    {'Idris.Prelude.Right', E859} ->
																				fun (V6300) ->
																					begin
																					  V6301 = ('un--nfToCFType'(V0, V6225, V2, V6300))(V6230),
																					  case V6301 of
																					    {'Idris.Prelude.Left', E860} -> fun (V6302) -> {'Idris.Prelude.Left', V6302} end(E860);
																					    {'Idris.Prelude.Right', E861} -> fun (V6303) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6303}} end(E861);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E859);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E857);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E840);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E838);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E836);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E830, E831, E832, E833, E834);
								      {'Idris.Core.Value.NType', E862} -> fun (V6304) -> fun (V6305) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E862);
								      {'Idris.Core.Value.NErased', E863, E864} -> fun (V6306, V6307) -> fun (V6308) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E863, E864);
								      _ ->
									  fun (V6309) ->
										  begin
										    V6338 = begin V6337 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6310) -> fun (V6311) -> fun (V6312) -> fun (V6313) -> fun (V6314) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6312, V6313, V6314) end end end end end, fun (V6315) -> fun (V6316) -> fun (V6317) -> V6316 end end end, fun (V6318) -> fun (V6319) -> fun (V6320) -> fun (V6321) -> fun (V6322) -> begin V6323 = V6320(V6322), begin V6324 = V6321(V6322), V6323(V6324) end end end end end end end}, fun (V6325) -> fun (V6326) -> fun (V6327) -> fun (V6328) -> fun (V6329) -> begin V6330 = V6327(V6329), (V6328(V6330))(V6329) end end end end end end, fun (V6331) -> fun (V6332) -> fun (V6333) -> begin V6334 = V6332(V6333), V6334(V6333) end end end end}, fun (V6335) -> fun (V6336) -> V6336 end end}, V0))(V6309), {'Idris.Prelude.Right', V6337} end,
										    case V6338 of
										      {'Idris.Prelude.Left', E824} -> fun (V6339) -> {'Idris.Prelude.Left', V6339} end(E824);
										      {'Idris.Prelude.Right', E825} ->
											  fun (V6340) ->
												  begin
												    V6341 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6340, {'Idris.Core.Env.Nil'}, V3, V6309),
												    case V6341 of
												      {'Idris.Prelude.Left', E826} -> fun (V6342) -> {'Idris.Prelude.Left', V6342} end(E826);
												      {'Idris.Prelude.Right', E827} ->
													  fun (V6343) ->
														  begin
														    V6348 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6344) -> fun (V6345) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6344, V6345) end end, fun (V6346) -> fun (V6347) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6346, V6347) end end}, V6343, V6309),
														    case V6348 of
														      {'Idris.Prelude.Left', E828} -> fun (V6349) -> {'Idris.Prelude.Left', V6349} end(E828);
														      {'Idris.Prelude.Right', E829} -> fun (V6350) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6350))}, V6309) end(E829);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E827);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E825);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E820, E821, E822, E823);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E785, E786, E787, E788, E789} ->
							    fun (V6351, V6352, V6353, V6354, V6355) ->
								    fun (V6356) ->
									    begin
									      V6385 = begin V6384 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6357) -> fun (V6358) -> fun (V6359) -> fun (V6360) -> fun (V6361) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6359, V6360, V6361) end end end end end, fun (V6362) -> fun (V6363) -> fun (V6364) -> V6363 end end end, fun (V6365) -> fun (V6366) -> fun (V6367) -> fun (V6368) -> fun (V6369) -> begin V6370 = V6367(V6369), begin V6371 = V6368(V6369), V6370(V6371) end end end end end end end}, fun (V6372) -> fun (V6373) -> fun (V6374) -> fun (V6375) -> fun (V6376) -> begin V6377 = V6374(V6376), (V6375(V6377))(V6376) end end end end end end, fun (V6378) -> fun (V6379) -> fun (V6380) -> begin V6381 = V6379(V6380), V6381(V6380) end end end end}, fun (V6382) -> fun (V6383) -> V6383 end end}, V0))(V6356), {'Idris.Prelude.Right', V6384} end,
									      case V6385 of
										{'Idris.Prelude.Left', E790} -> fun (V6386) -> {'Idris.Prelude.Left', V6386} end(E790);
										{'Idris.Prelude.Right', E791} ->
										    fun (V6387) ->
											    begin
											      V6392 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6388) -> fun (V6389) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6388, V6389) end end, fun (V6390) -> fun (V6391) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6390, V6391) end end}, V6352, V6356),
											      case V6392 of
												{'Idris.Prelude.Left', E792} -> fun (V6393) -> {'Idris.Prelude.Left', V6393} end(E792);
												{'Idris.Prelude.Right', E793} ->
												    fun (V6394) ->
													    begin
													      V6395 = ('un--getNArgs'(V6387, V6394, V6355))(V6356),
													      case V6395 of
														{'Idris.Prelude.Left', E794} -> fun (V6396) -> {'Idris.Prelude.Left', V6396} end(E794);
														{'Idris.Prelude.Right', E795} ->
														    fun (V6397) ->
															    case V6397 of
															      {'Idris.Compiler.CompileExpr.User', E796, E797} ->
																  fun (V6398, V6399) ->
																	  begin
																	    V6401 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6400) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6387, V6400) end, V6399))(V6356),
																	    case V6401 of
																	      {'Idris.Prelude.Left', E798} -> fun (V6402) -> {'Idris.Prelude.Left', V6402} end(E798);
																	      {'Idris.Prelude.Right', E799} ->
																		  fun (V6403) ->
																			  begin
																			    V6405 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6404) -> 'un--nfToCFType'(V0, V6351, V2, V6404) end, V6403))(V6356),
																			    case V6405 of
																			      {'Idris.Prelude.Left', E800} -> fun (V6406) -> {'Idris.Prelude.Left', V6406} end(E800);
																			      {'Idris.Prelude.Right', E801} -> fun (V6407) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6394, V6407}} end(E801);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E799);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E796, E797);
															      {'Idris.Compiler.CompileExpr.Struct', E802, E803} ->
																  fun (V6408, V6409) ->
																	  begin
																	    V6420 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V6410) ->
																							      case V6410 of
																								{'Idris.Builtin.MkPair', E804, E805} ->
																								    fun (V6411, V6412) ->
																									    fun (V6413) ->
																										    begin
																										      V6414 = ('Idris.Core.Normalise':'un--evalClosure'([], V6387, V6412))(V6413),
																										      case V6414 of
																											{'Idris.Prelude.Left', E806} -> fun (V6415) -> {'Idris.Prelude.Left', V6415} end(E806);
																											{'Idris.Prelude.Right', E807} ->
																											    fun (V6416) ->
																												    begin
																												      V6417 = ('un--nfToCFType'(V0, V6351, 0, V6416))(V6413),
																												      case V6417 of
																													{'Idris.Prelude.Left', E808} -> fun (V6418) -> {'Idris.Prelude.Left', V6418} end(E808);
																													{'Idris.Prelude.Right', E809} -> fun (V6419) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6411, V6419}} end(E809);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E807);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E804, E805);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V6409))(V6356),
																	    case V6420 of
																	      {'Idris.Prelude.Left', E810} -> fun (V6421) -> {'Idris.Prelude.Left', V6421} end(E810);
																	      {'Idris.Prelude.Right', E811} -> fun (V6422) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6408, V6422}} end(E811);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E802, E803);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E812} ->
																  fun (V6423) ->
																	  begin
																	    V6424 = ('Idris.Core.Normalise':'un--evalClosure'([], V6387, V6423))(V6356),
																	    case V6424 of
																	      {'Idris.Prelude.Left', E813} -> fun (V6425) -> {'Idris.Prelude.Left', V6425} end(E813);
																	      {'Idris.Prelude.Right', E814} ->
																		  fun (V6426) ->
																			  begin
																			    V6427 = ('un--nfToCFType'(V0, V6351, V2, V6426))(V6356),
																			    case V6427 of
																			      {'Idris.Prelude.Left', E815} -> fun (V6428) -> {'Idris.Prelude.Left', V6428} end(E815);
																			      {'Idris.Prelude.Right', E816} -> fun (V6429) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6429}} end(E816);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E814);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E812);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E795);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E793);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E791);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E785, E786, E787, E788, E789);
							{'Idris.Core.Value.NType', E817} -> fun (V6430) -> fun (V6431) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E817);
							{'Idris.Core.Value.NErased', E818, E819} -> fun (V6432, V6433) -> fun (V6434) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E818, E819);
							_ ->
							    fun (V6435) ->
								    begin
								      V6464 = begin V6463 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6436) -> fun (V6437) -> fun (V6438) -> fun (V6439) -> fun (V6440) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6438, V6439, V6440) end end end end end, fun (V6441) -> fun (V6442) -> fun (V6443) -> V6442 end end end, fun (V6444) -> fun (V6445) -> fun (V6446) -> fun (V6447) -> fun (V6448) -> begin V6449 = V6446(V6448), begin V6450 = V6447(V6448), V6449(V6450) end end end end end end end}, fun (V6451) -> fun (V6452) -> fun (V6453) -> fun (V6454) -> fun (V6455) -> begin V6456 = V6453(V6455), (V6454(V6456))(V6455) end end end end end end, fun (V6457) -> fun (V6458) -> fun (V6459) -> begin V6460 = V6458(V6459), V6460(V6459) end end end end}, fun (V6461) -> fun (V6462) -> V6462 end end}, V0))(V6435), {'Idris.Prelude.Right', V6463} end,
								      case V6464 of
									{'Idris.Prelude.Left', E779} -> fun (V6465) -> {'Idris.Prelude.Left', V6465} end(E779);
									{'Idris.Prelude.Right', E780} ->
									    fun (V6466) ->
										    begin
										      V6467 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6466, {'Idris.Core.Env.Nil'}, V3, V6435),
										      case V6467 of
											{'Idris.Prelude.Left', E781} -> fun (V6468) -> {'Idris.Prelude.Left', V6468} end(E781);
											{'Idris.Prelude.Right', E782} ->
											    fun (V6469) ->
												    begin
												      V6474 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6470) -> fun (V6471) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6470, V6471) end end, fun (V6472) -> fun (V6473) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6472, V6473) end end}, V6469, V6435),
												      case V6474 of
													{'Idris.Prelude.Left', E783} -> fun (V6475) -> {'Idris.Prelude.Left', V6475} end(E783);
													{'Idris.Prelude.Right', E784} -> fun (V6476) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6476))}, V6435) end(E784);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E782);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E780);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E917, E918, E919, E920} -> fun (V6477, V6478, V6479, V6480) -> fun (V6481) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V6477, <<"Function types not allowed in a foreign struct"/utf8>>}, V6481) end end(E917, E918, E919, E920);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E882, E883, E884, E885, E886} ->
							    fun (V6482, V6483, V6484, V6485, V6486) ->
								    fun (V6487) ->
									    begin
									      V6516 = begin V6515 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6488) -> fun (V6489) -> fun (V6490) -> fun (V6491) -> fun (V6492) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6490, V6491, V6492) end end end end end, fun (V6493) -> fun (V6494) -> fun (V6495) -> V6494 end end end, fun (V6496) -> fun (V6497) -> fun (V6498) -> fun (V6499) -> fun (V6500) -> begin V6501 = V6498(V6500), begin V6502 = V6499(V6500), V6501(V6502) end end end end end end end}, fun (V6503) -> fun (V6504) -> fun (V6505) -> fun (V6506) -> fun (V6507) -> begin V6508 = V6505(V6507), (V6506(V6508))(V6507) end end end end end end, fun (V6509) -> fun (V6510) -> fun (V6511) -> begin V6512 = V6510(V6511), V6512(V6511) end end end end}, fun (V6513) -> fun (V6514) -> V6514 end end}, V0))(V6487), {'Idris.Prelude.Right', V6515} end,
									      case V6516 of
										{'Idris.Prelude.Left', E887} -> fun (V6517) -> {'Idris.Prelude.Left', V6517} end(E887);
										{'Idris.Prelude.Right', E888} ->
										    fun (V6518) ->
											    begin
											      V6523 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6519) -> fun (V6520) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6519, V6520) end end, fun (V6521) -> fun (V6522) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6521, V6522) end end}, V6483, V6487),
											      case V6523 of
												{'Idris.Prelude.Left', E889} -> fun (V6524) -> {'Idris.Prelude.Left', V6524} end(E889);
												{'Idris.Prelude.Right', E890} ->
												    fun (V6525) ->
													    begin
													      V6526 = ('un--getNArgs'(V6518, V6525, V6486))(V6487),
													      case V6526 of
														{'Idris.Prelude.Left', E891} -> fun (V6527) -> {'Idris.Prelude.Left', V6527} end(E891);
														{'Idris.Prelude.Right', E892} ->
														    fun (V6528) ->
															    case V6528 of
															      {'Idris.Compiler.CompileExpr.User', E893, E894} ->
																  fun (V6529, V6530) ->
																	  begin
																	    V6532 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6531) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6518, V6531) end, V6530))(V6487),
																	    case V6532 of
																	      {'Idris.Prelude.Left', E895} -> fun (V6533) -> {'Idris.Prelude.Left', V6533} end(E895);
																	      {'Idris.Prelude.Right', E896} ->
																		  fun (V6534) ->
																			  begin
																			    V6536 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6535) -> 'un--nfToCFType'(V0, V6482, V2, V6535) end, V6534))(V6487),
																			    case V6536 of
																			      {'Idris.Prelude.Left', E897} -> fun (V6537) -> {'Idris.Prelude.Left', V6537} end(E897);
																			      {'Idris.Prelude.Right', E898} -> fun (V6538) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6525, V6538}} end(E898);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E896);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E893, E894);
															      {'Idris.Compiler.CompileExpr.Struct', E899, E900} ->
																  fun (V6539, V6540) ->
																	  begin
																	    V6551 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V6541) ->
																							      case V6541 of
																								{'Idris.Builtin.MkPair', E901, E902} ->
																								    fun (V6542, V6543) ->
																									    fun (V6544) ->
																										    begin
																										      V6545 = ('Idris.Core.Normalise':'un--evalClosure'([], V6518, V6543))(V6544),
																										      case V6545 of
																											{'Idris.Prelude.Left', E903} -> fun (V6546) -> {'Idris.Prelude.Left', V6546} end(E903);
																											{'Idris.Prelude.Right', E904} ->
																											    fun (V6547) ->
																												    begin
																												      V6548 = ('un--nfToCFType'(V0, V6482, 0, V6547))(V6544),
																												      case V6548 of
																													{'Idris.Prelude.Left', E905} -> fun (V6549) -> {'Idris.Prelude.Left', V6549} end(E905);
																													{'Idris.Prelude.Right', E906} -> fun (V6550) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6542, V6550}} end(E906);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E904);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E901, E902);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V6540))(V6487),
																	    case V6551 of
																	      {'Idris.Prelude.Left', E907} -> fun (V6552) -> {'Idris.Prelude.Left', V6552} end(E907);
																	      {'Idris.Prelude.Right', E908} -> fun (V6553) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6539, V6553}} end(E908);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E899, E900);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E909} ->
																  fun (V6554) ->
																	  begin
																	    V6555 = ('Idris.Core.Normalise':'un--evalClosure'([], V6518, V6554))(V6487),
																	    case V6555 of
																	      {'Idris.Prelude.Left', E910} -> fun (V6556) -> {'Idris.Prelude.Left', V6556} end(E910);
																	      {'Idris.Prelude.Right', E911} ->
																		  fun (V6557) ->
																			  begin
																			    V6558 = ('un--nfToCFType'(V0, V6482, V2, V6557))(V6487),
																			    case V6558 of
																			      {'Idris.Prelude.Left', E912} -> fun (V6559) -> {'Idris.Prelude.Left', V6559} end(E912);
																			      {'Idris.Prelude.Right', E913} -> fun (V6560) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6560}} end(E913);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E911);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E909);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E892);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E890);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E888);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E882, E883, E884, E885, E886);
							{'Idris.Core.Value.NType', E914} -> fun (V6561) -> fun (V6562) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E914);
							{'Idris.Core.Value.NErased', E915, E916} -> fun (V6563, V6564) -> fun (V6565) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E915, E916);
							_ ->
							    fun (V6566) ->
								    begin
								      V6595 = begin V6594 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6567) -> fun (V6568) -> fun (V6569) -> fun (V6570) -> fun (V6571) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6569, V6570, V6571) end end end end end, fun (V6572) -> fun (V6573) -> fun (V6574) -> V6573 end end end, fun (V6575) -> fun (V6576) -> fun (V6577) -> fun (V6578) -> fun (V6579) -> begin V6580 = V6577(V6579), begin V6581 = V6578(V6579), V6580(V6581) end end end end end end end}, fun (V6582) -> fun (V6583) -> fun (V6584) -> fun (V6585) -> fun (V6586) -> begin V6587 = V6584(V6586), (V6585(V6587))(V6586) end end end end end end, fun (V6588) -> fun (V6589) -> fun (V6590) -> begin V6591 = V6589(V6590), V6591(V6590) end end end end}, fun (V6592) -> fun (V6593) -> V6593 end end}, V0))(V6566), {'Idris.Prelude.Right', V6594} end,
								      case V6595 of
									{'Idris.Prelude.Left', E876} -> fun (V6596) -> {'Idris.Prelude.Left', V6596} end(E876);
									{'Idris.Prelude.Right', E877} ->
									    fun (V6597) ->
										    begin
										      V6598 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6597, {'Idris.Core.Env.Nil'}, V3, V6566),
										      case V6598 of
											{'Idris.Prelude.Left', E878} -> fun (V6599) -> {'Idris.Prelude.Left', V6599} end(E878);
											{'Idris.Prelude.Right', E879} ->
											    fun (V6600) ->
												    begin
												      V6605 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6601) -> fun (V6602) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6601, V6602) end end, fun (V6603) -> fun (V6604) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6603, V6604) end end}, V6600, V6566),
												      case V6605 of
													{'Idris.Prelude.Left', E880} -> fun (V6606) -> {'Idris.Prelude.Left', V6606} end(E880);
													{'Idris.Prelude.Right', E881} -> fun (V6607) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6607))}, V6566) end(E881);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E879);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E877);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E744, E745, E746, E747, E748} ->
						      fun (V6608, V6609, V6610, V6611, V6612) ->
							      fun (V6613) ->
								      begin
									V6642 = begin V6641 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6614) -> fun (V6615) -> fun (V6616) -> fun (V6617) -> fun (V6618) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6616, V6617, V6618) end end end end end, fun (V6619) -> fun (V6620) -> fun (V6621) -> V6620 end end end, fun (V6622) -> fun (V6623) -> fun (V6624) -> fun (V6625) -> fun (V6626) -> begin V6627 = V6624(V6626), begin V6628 = V6625(V6626), V6627(V6628) end end end end end end end}, fun (V6629) -> fun (V6630) -> fun (V6631) -> fun (V6632) -> fun (V6633) -> begin V6634 = V6631(V6633), (V6632(V6634))(V6633) end end end end end end, fun (V6635) -> fun (V6636) -> fun (V6637) -> begin V6638 = V6636(V6637), V6638(V6637) end end end end}, fun (V6639) -> fun (V6640) -> V6640 end end}, V0))(V6613), {'Idris.Prelude.Right', V6641} end,
									case V6642 of
									  {'Idris.Prelude.Left', E749} -> fun (V6643) -> {'Idris.Prelude.Left', V6643} end(E749);
									  {'Idris.Prelude.Right', E750} ->
									      fun (V6644) ->
										      begin
											V6649 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6645) -> fun (V6646) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6645, V6646) end end, fun (V6647) -> fun (V6648) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6647, V6648) end end}, V6609, V6613),
											case V6649 of
											  {'Idris.Prelude.Left', E751} -> fun (V6650) -> {'Idris.Prelude.Left', V6650} end(E751);
											  {'Idris.Prelude.Right', E752} ->
											      fun (V6651) ->
												      begin
													V6652 = ('un--getNArgs'(V6644, V6651, V6612))(V6613),
													case V6652 of
													  {'Idris.Prelude.Left', E753} -> fun (V6653) -> {'Idris.Prelude.Left', V6653} end(E753);
													  {'Idris.Prelude.Right', E754} ->
													      fun (V6654) ->
														      case V6654 of
															{'Idris.Compiler.CompileExpr.User', E755, E756} ->
															    fun (V6655, V6656) ->
																    begin
																      V6658 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6657) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6644, V6657) end, V6656))(V6613),
																      case V6658 of
																	{'Idris.Prelude.Left', E757} -> fun (V6659) -> {'Idris.Prelude.Left', V6659} end(E757);
																	{'Idris.Prelude.Right', E758} ->
																	    fun (V6660) ->
																		    begin
																		      V6662 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6661) -> 'un--nfToCFType'(V0, V6608, V2, V6661) end, V6660))(V6613),
																		      case V6662 of
																			{'Idris.Prelude.Left', E759} -> fun (V6663) -> {'Idris.Prelude.Left', V6663} end(E759);
																			{'Idris.Prelude.Right', E760} -> fun (V6664) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6651, V6664}} end(E760);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E758);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E755, E756);
															{'Idris.Compiler.CompileExpr.Struct', E761, E762} ->
															    fun (V6665, V6666) ->
																    begin
																      V6677 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V6667) ->
																							case V6667 of
																							  {'Idris.Builtin.MkPair', E763, E764} ->
																							      fun (V6668, V6669) ->
																								      fun (V6670) ->
																									      begin
																										V6671 = ('Idris.Core.Normalise':'un--evalClosure'([], V6644, V6669))(V6670),
																										case V6671 of
																										  {'Idris.Prelude.Left', E765} -> fun (V6672) -> {'Idris.Prelude.Left', V6672} end(E765);
																										  {'Idris.Prelude.Right', E766} ->
																										      fun (V6673) ->
																											      begin
																												V6674 = ('un--nfToCFType'(V0, V6608, 0, V6673))(V6670),
																												case V6674 of
																												  {'Idris.Prelude.Left', E767} -> fun (V6675) -> {'Idris.Prelude.Left', V6675} end(E767);
																												  {'Idris.Prelude.Right', E768} -> fun (V6676) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6668, V6676}} end(E768);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E766);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E763, E764);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V6666))(V6613),
																      case V6677 of
																	{'Idris.Prelude.Left', E769} -> fun (V6678) -> {'Idris.Prelude.Left', V6678} end(E769);
																	{'Idris.Prelude.Right', E770} -> fun (V6679) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6665, V6679}} end(E770);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E761, E762);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E771} ->
															    fun (V6680) ->
																    begin
																      V6681 = ('Idris.Core.Normalise':'un--evalClosure'([], V6644, V6680))(V6613),
																      case V6681 of
																	{'Idris.Prelude.Left', E772} -> fun (V6682) -> {'Idris.Prelude.Left', V6682} end(E772);
																	{'Idris.Prelude.Right', E773} ->
																	    fun (V6683) ->
																		    begin
																		      V6684 = ('un--nfToCFType'(V0, V6608, V2, V6683))(V6613),
																		      case V6684 of
																			{'Idris.Prelude.Left', E774} -> fun (V6685) -> {'Idris.Prelude.Left', V6685} end(E774);
																			{'Idris.Prelude.Right', E775} -> fun (V6686) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6686}} end(E775);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E773);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E771);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E754);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E752);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E750);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E744, E745, E746, E747, E748);
						  {'Idris.Core.Value.NType', E776} -> fun (V6687) -> fun (V6688) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E776);
						  {'Idris.Core.Value.NErased', E777, E778} -> fun (V6689, V6690) -> fun (V6691) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E777, E778);
						  _ ->
						      fun (V6692) ->
							      begin
								V6721 = begin V6720 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6693) -> fun (V6694) -> fun (V6695) -> fun (V6696) -> fun (V6697) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6695, V6696, V6697) end end end end end, fun (V6698) -> fun (V6699) -> fun (V6700) -> V6699 end end end, fun (V6701) -> fun (V6702) -> fun (V6703) -> fun (V6704) -> fun (V6705) -> begin V6706 = V6703(V6705), begin V6707 = V6704(V6705), V6706(V6707) end end end end end end end}, fun (V6708) -> fun (V6709) -> fun (V6710) -> fun (V6711) -> fun (V6712) -> begin V6713 = V6710(V6712), (V6711(V6713))(V6712) end end end end end end, fun (V6714) -> fun (V6715) -> fun (V6716) -> begin V6717 = V6715(V6716), V6717(V6716) end end end end}, fun (V6718) -> fun (V6719) -> V6719 end end}, V0))(V6692), {'Idris.Prelude.Right', V6720} end,
								case V6721 of
								  {'Idris.Prelude.Left', E738} -> fun (V6722) -> {'Idris.Prelude.Left', V6722} end(E738);
								  {'Idris.Prelude.Right', E739} ->
								      fun (V6723) ->
									      begin
										V6724 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6723, {'Idris.Core.Env.Nil'}, V3, V6692),
										case V6724 of
										  {'Idris.Prelude.Left', E740} -> fun (V6725) -> {'Idris.Prelude.Left', V6725} end(E740);
										  {'Idris.Prelude.Right', E741} ->
										      fun (V6726) ->
											      begin
												V6731 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6727) -> fun (V6728) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6727, V6728) end end, fun (V6729) -> fun (V6730) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6729, V6730) end end}, V6726, V6692),
												case V6731 of
												  {'Idris.Prelude.Left', E742} -> fun (V6732) -> {'Idris.Prelude.Left', V6732} end(E742);
												  {'Idris.Prelude.Right', E743} -> fun (V6733) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6733))}, V6692) end(E743);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E741);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E739);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			      end
		      end(E736, E737);
		  _ ->
		      case V3 of
			{'Idris.Core.Value.NPrimVal', E551, E552} ->
			    fun (V6734, V6735) ->
				    case V6735 of
				      {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V6736) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
				      {'Idris.Core.TT.CharType'} -> fun () -> fun (V6737) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
				      {'Idris.Core.TT.WorldType'} -> fun () -> fun (V6738) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E635, E636, E637, E638} ->
						      fun (V6739, V6740, V6741, V6742) ->
							      case V6741 of
								{'Idris.Core.TT.Pi', E680, E681, E682} ->
								    fun (V6743, V6744, V6745) ->
									    fun (V6746) ->
										    begin
										      V6775 = begin V6774 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6747) -> fun (V6748) -> fun (V6749) -> fun (V6750) -> fun (V6751) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6749, V6750, V6751) end end end end end, fun (V6752) -> fun (V6753) -> fun (V6754) -> V6753 end end end, fun (V6755) -> fun (V6756) -> fun (V6757) -> fun (V6758) -> fun (V6759) -> begin V6760 = V6757(V6759), begin V6761 = V6758(V6759), V6760(V6761) end end end end end end end}, fun (V6762) -> fun (V6763) -> fun (V6764) -> fun (V6765) -> fun (V6766) -> begin V6767 = V6764(V6766), (V6765(V6767))(V6766) end end end end end end, fun (V6768) -> fun (V6769) -> fun (V6770) -> begin V6771 = V6769(V6770), V6771(V6770) end end end end}, fun (V6772) -> fun (V6773) -> V6773 end end}, V0))(V6746), {'Idris.Prelude.Right', V6774} end,
										      case V6775 of
											{'Idris.Prelude.Left', E683} -> fun (V6776) -> {'Idris.Prelude.Left', V6776} end(E683);
											{'Idris.Prelude.Right', E684} ->
											    fun (V6777) ->
												    begin
												      V6778 = ('un--nfToCFType'(V0, V6739, 1, V6745))(V6746),
												      case V6778 of
													{'Idris.Prelude.Left', E685} -> fun (V6779) -> {'Idris.Prelude.Left', V6779} end(E685);
													{'Idris.Prelude.Right', E686} ->
													    fun (V6780) ->
														    begin
														      V6781 = ((V6742(V6777))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V6739, 1})))(V6746),
														      case V6781 of
															{'Idris.Prelude.Left', E687} -> fun (V6782) -> {'Idris.Prelude.Left', V6782} end(E687);
															{'Idris.Prelude.Right', E688} ->
															    fun (V6783) ->
																    begin
																      V6784 = ('un--nfToCFType'(V0, V6739, 1, V6783))(V6746),
																      case V6784 of
																	{'Idris.Prelude.Left', E689} -> fun (V6785) -> {'Idris.Prelude.Left', V6785} end(E689);
																	{'Idris.Prelude.Right', E690} -> fun (V6786) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V6780, V6786}} end(E690);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E688);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E686);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E684);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E680, E681, E682);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E645, E646, E647, E648, E649} ->
									  fun (V6787, V6788, V6789, V6790, V6791) ->
										  fun (V6792) ->
											  begin
											    V6821 = begin V6820 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6793) -> fun (V6794) -> fun (V6795) -> fun (V6796) -> fun (V6797) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6795, V6796, V6797) end end end end end, fun (V6798) -> fun (V6799) -> fun (V6800) -> V6799 end end end, fun (V6801) -> fun (V6802) -> fun (V6803) -> fun (V6804) -> fun (V6805) -> begin V6806 = V6803(V6805), begin V6807 = V6804(V6805), V6806(V6807) end end end end end end end}, fun (V6808) -> fun (V6809) -> fun (V6810) -> fun (V6811) -> fun (V6812) -> begin V6813 = V6810(V6812), (V6811(V6813))(V6812) end end end end end end, fun (V6814) -> fun (V6815) -> fun (V6816) -> begin V6817 = V6815(V6816), V6817(V6816) end end end end}, fun (V6818) -> fun (V6819) -> V6819 end end}, V0))(V6792), {'Idris.Prelude.Right', V6820} end,
											    case V6821 of
											      {'Idris.Prelude.Left', E650} -> fun (V6822) -> {'Idris.Prelude.Left', V6822} end(E650);
											      {'Idris.Prelude.Right', E651} ->
												  fun (V6823) ->
													  begin
													    V6828 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6824) -> fun (V6825) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6824, V6825) end end, fun (V6826) -> fun (V6827) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6826, V6827) end end}, V6788, V6792),
													    case V6828 of
													      {'Idris.Prelude.Left', E652} -> fun (V6829) -> {'Idris.Prelude.Left', V6829} end(E652);
													      {'Idris.Prelude.Right', E653} ->
														  fun (V6830) ->
															  begin
															    V6831 = ('un--getNArgs'(V6823, V6830, V6791))(V6792),
															    case V6831 of
															      {'Idris.Prelude.Left', E654} -> fun (V6832) -> {'Idris.Prelude.Left', V6832} end(E654);
															      {'Idris.Prelude.Right', E655} ->
																  fun (V6833) ->
																	  case V6833 of
																	    {'Idris.Compiler.CompileExpr.User', E656, E657} ->
																		fun (V6834, V6835) ->
																			begin
																			  V6837 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6836) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6823, V6836) end, V6835))(V6792),
																			  case V6837 of
																			    {'Idris.Prelude.Left', E658} -> fun (V6838) -> {'Idris.Prelude.Left', V6838} end(E658);
																			    {'Idris.Prelude.Right', E659} ->
																				fun (V6839) ->
																					begin
																					  V6841 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6840) -> 'un--nfToCFType'(V0, V6787, V2, V6840) end, V6839))(V6792),
																					  case V6841 of
																					    {'Idris.Prelude.Left', E660} -> fun (V6842) -> {'Idris.Prelude.Left', V6842} end(E660);
																					    {'Idris.Prelude.Right', E661} -> fun (V6843) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6830, V6843}} end(E661);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E659);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E656, E657);
																	    {'Idris.Compiler.CompileExpr.Struct', E662, E663} ->
																		fun (V6844, V6845) ->
																			begin
																			  V6856 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V6846) ->
																									    case V6846 of
																									      {'Idris.Builtin.MkPair', E664, E665} ->
																										  fun (V6847, V6848) ->
																											  fun (V6849) ->
																												  begin
																												    V6850 = ('Idris.Core.Normalise':'un--evalClosure'([], V6823, V6848))(V6849),
																												    case V6850 of
																												      {'Idris.Prelude.Left', E666} -> fun (V6851) -> {'Idris.Prelude.Left', V6851} end(E666);
																												      {'Idris.Prelude.Right', E667} ->
																													  fun (V6852) ->
																														  begin
																														    V6853 = ('un--nfToCFType'(V0, V6787, 0, V6852))(V6849),
																														    case V6853 of
																														      {'Idris.Prelude.Left', E668} -> fun (V6854) -> {'Idris.Prelude.Left', V6854} end(E668);
																														      {'Idris.Prelude.Right', E669} -> fun (V6855) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6847, V6855}} end(E669);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E667);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E664, E665);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V6845))(V6792),
																			  case V6856 of
																			    {'Idris.Prelude.Left', E670} -> fun (V6857) -> {'Idris.Prelude.Left', V6857} end(E670);
																			    {'Idris.Prelude.Right', E671} -> fun (V6858) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6844, V6858}} end(E671);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E662, E663);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E672} ->
																		fun (V6859) ->
																			begin
																			  V6860 = ('Idris.Core.Normalise':'un--evalClosure'([], V6823, V6859))(V6792),
																			  case V6860 of
																			    {'Idris.Prelude.Left', E673} -> fun (V6861) -> {'Idris.Prelude.Left', V6861} end(E673);
																			    {'Idris.Prelude.Right', E674} ->
																				fun (V6862) ->
																					begin
																					  V6863 = ('un--nfToCFType'(V0, V6787, V2, V6862))(V6792),
																					  case V6863 of
																					    {'Idris.Prelude.Left', E675} -> fun (V6864) -> {'Idris.Prelude.Left', V6864} end(E675);
																					    {'Idris.Prelude.Right', E676} -> fun (V6865) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6865}} end(E676);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E674);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E672);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E655);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E653);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E651);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E645, E646, E647, E648, E649);
								      {'Idris.Core.Value.NType', E677} -> fun (V6866) -> fun (V6867) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E677);
								      {'Idris.Core.Value.NErased', E678, E679} -> fun (V6868, V6869) -> fun (V6870) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E678, E679);
								      _ ->
									  fun (V6871) ->
										  begin
										    V6900 = begin V6899 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6872) -> fun (V6873) -> fun (V6874) -> fun (V6875) -> fun (V6876) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6874, V6875, V6876) end end end end end, fun (V6877) -> fun (V6878) -> fun (V6879) -> V6878 end end end, fun (V6880) -> fun (V6881) -> fun (V6882) -> fun (V6883) -> fun (V6884) -> begin V6885 = V6882(V6884), begin V6886 = V6883(V6884), V6885(V6886) end end end end end end end}, fun (V6887) -> fun (V6888) -> fun (V6889) -> fun (V6890) -> fun (V6891) -> begin V6892 = V6889(V6891), (V6890(V6892))(V6891) end end end end end end, fun (V6893) -> fun (V6894) -> fun (V6895) -> begin V6896 = V6894(V6895), V6896(V6895) end end end end}, fun (V6897) -> fun (V6898) -> V6898 end end}, V0))(V6871), {'Idris.Prelude.Right', V6899} end,
										    case V6900 of
										      {'Idris.Prelude.Left', E639} -> fun (V6901) -> {'Idris.Prelude.Left', V6901} end(E639);
										      {'Idris.Prelude.Right', E640} ->
											  fun (V6902) ->
												  begin
												    V6903 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V6902, {'Idris.Core.Env.Nil'}, V3, V6871),
												    case V6903 of
												      {'Idris.Prelude.Left', E641} -> fun (V6904) -> {'Idris.Prelude.Left', V6904} end(E641);
												      {'Idris.Prelude.Right', E642} ->
													  fun (V6905) ->
														  begin
														    V6910 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6906) -> fun (V6907) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V6906, V6907) end end, fun (V6908) -> fun (V6909) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V6908, V6909) end end}, V6905, V6871),
														    case V6910 of
														      {'Idris.Prelude.Left', E643} -> fun (V6911) -> {'Idris.Prelude.Left', V6911} end(E643);
														      {'Idris.Prelude.Right', E644} -> fun (V6912) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V6912))}, V6871) end(E644);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E642);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E640);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E635, E636, E637, E638);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E600, E601, E602, E603, E604} ->
							    fun (V6913, V6914, V6915, V6916, V6917) ->
								    fun (V6918) ->
									    begin
									      V6947 = begin V6946 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6919) -> fun (V6920) -> fun (V6921) -> fun (V6922) -> fun (V6923) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V6921, V6922, V6923) end end end end end, fun (V6924) -> fun (V6925) -> fun (V6926) -> V6925 end end end, fun (V6927) -> fun (V6928) -> fun (V6929) -> fun (V6930) -> fun (V6931) -> begin V6932 = V6929(V6931), begin V6933 = V6930(V6931), V6932(V6933) end end end end end end end}, fun (V6934) -> fun (V6935) -> fun (V6936) -> fun (V6937) -> fun (V6938) -> begin V6939 = V6936(V6938), (V6937(V6939))(V6938) end end end end end end, fun (V6940) -> fun (V6941) -> fun (V6942) -> begin V6943 = V6941(V6942), V6943(V6942) end end end end}, fun (V6944) -> fun (V6945) -> V6945 end end}, V0))(V6918), {'Idris.Prelude.Right', V6946} end,
									      case V6947 of
										{'Idris.Prelude.Left', E605} -> fun (V6948) -> {'Idris.Prelude.Left', V6948} end(E605);
										{'Idris.Prelude.Right', E606} ->
										    fun (V6949) ->
											    begin
											      V6954 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6950) -> fun (V6951) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V6950, V6951) end end, fun (V6952) -> fun (V6953) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V6952, V6953) end end}, V6914, V6918),
											      case V6954 of
												{'Idris.Prelude.Left', E607} -> fun (V6955) -> {'Idris.Prelude.Left', V6955} end(E607);
												{'Idris.Prelude.Right', E608} ->
												    fun (V6956) ->
													    begin
													      V6957 = ('un--getNArgs'(V6949, V6956, V6917))(V6918),
													      case V6957 of
														{'Idris.Prelude.Left', E609} -> fun (V6958) -> {'Idris.Prelude.Left', V6958} end(E609);
														{'Idris.Prelude.Right', E610} ->
														    fun (V6959) ->
															    case V6959 of
															      {'Idris.Compiler.CompileExpr.User', E611, E612} ->
																  fun (V6960, V6961) ->
																	  begin
																	    V6963 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6962) -> 'Idris.Core.Normalise':'un--evalClosure'([], V6949, V6962) end, V6961))(V6918),
																	    case V6963 of
																	      {'Idris.Prelude.Left', E613} -> fun (V6964) -> {'Idris.Prelude.Left', V6964} end(E613);
																	      {'Idris.Prelude.Right', E614} ->
																		  fun (V6965) ->
																			  begin
																			    V6967 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V6966) -> 'un--nfToCFType'(V0, V6913, V2, V6966) end, V6965))(V6918),
																			    case V6967 of
																			      {'Idris.Prelude.Left', E615} -> fun (V6968) -> {'Idris.Prelude.Left', V6968} end(E615);
																			      {'Idris.Prelude.Right', E616} -> fun (V6969) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V6956, V6969}} end(E616);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E614);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E611, E612);
															      {'Idris.Compiler.CompileExpr.Struct', E617, E618} ->
																  fun (V6970, V6971) ->
																	  begin
																	    V6982 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V6972) ->
																							      case V6972 of
																								{'Idris.Builtin.MkPair', E619, E620} ->
																								    fun (V6973, V6974) ->
																									    fun (V6975) ->
																										    begin
																										      V6976 = ('Idris.Core.Normalise':'un--evalClosure'([], V6949, V6974))(V6975),
																										      case V6976 of
																											{'Idris.Prelude.Left', E621} -> fun (V6977) -> {'Idris.Prelude.Left', V6977} end(E621);
																											{'Idris.Prelude.Right', E622} ->
																											    fun (V6978) ->
																												    begin
																												      V6979 = ('un--nfToCFType'(V0, V6913, 0, V6978))(V6975),
																												      case V6979 of
																													{'Idris.Prelude.Left', E623} -> fun (V6980) -> {'Idris.Prelude.Left', V6980} end(E623);
																													{'Idris.Prelude.Right', E624} -> fun (V6981) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V6973, V6981}} end(E624);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E622);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E619, E620);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V6971))(V6918),
																	    case V6982 of
																	      {'Idris.Prelude.Left', E625} -> fun (V6983) -> {'Idris.Prelude.Left', V6983} end(E625);
																	      {'Idris.Prelude.Right', E626} -> fun (V6984) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V6970, V6984}} end(E626);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E617, E618);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E627} ->
																  fun (V6985) ->
																	  begin
																	    V6986 = ('Idris.Core.Normalise':'un--evalClosure'([], V6949, V6985))(V6918),
																	    case V6986 of
																	      {'Idris.Prelude.Left', E628} -> fun (V6987) -> {'Idris.Prelude.Left', V6987} end(E628);
																	      {'Idris.Prelude.Right', E629} ->
																		  fun (V6988) ->
																			  begin
																			    V6989 = ('un--nfToCFType'(V0, V6913, V2, V6988))(V6918),
																			    case V6989 of
																			      {'Idris.Prelude.Left', E630} -> fun (V6990) -> {'Idris.Prelude.Left', V6990} end(E630);
																			      {'Idris.Prelude.Right', E631} -> fun (V6991) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V6991}} end(E631);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E629);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E627);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E610);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E608);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E606);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E600, E601, E602, E603, E604);
							{'Idris.Core.Value.NType', E632} -> fun (V6992) -> fun (V6993) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E632);
							{'Idris.Core.Value.NErased', E633, E634} -> fun (V6994, V6995) -> fun (V6996) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E633, E634);
							_ ->
							    fun (V6997) ->
								    begin
								      V7026 = begin V7025 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V6998) -> fun (V6999) -> fun (V7000) -> fun (V7001) -> fun (V7002) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7000, V7001, V7002) end end end end end, fun (V7003) -> fun (V7004) -> fun (V7005) -> V7004 end end end, fun (V7006) -> fun (V7007) -> fun (V7008) -> fun (V7009) -> fun (V7010) -> begin V7011 = V7008(V7010), begin V7012 = V7009(V7010), V7011(V7012) end end end end end end end}, fun (V7013) -> fun (V7014) -> fun (V7015) -> fun (V7016) -> fun (V7017) -> begin V7018 = V7015(V7017), (V7016(V7018))(V7017) end end end end end end, fun (V7019) -> fun (V7020) -> fun (V7021) -> begin V7022 = V7020(V7021), V7022(V7021) end end end end}, fun (V7023) -> fun (V7024) -> V7024 end end}, V0))(V6997), {'Idris.Prelude.Right', V7025} end,
								      case V7026 of
									{'Idris.Prelude.Left', E594} -> fun (V7027) -> {'Idris.Prelude.Left', V7027} end(E594);
									{'Idris.Prelude.Right', E595} ->
									    fun (V7028) ->
										    begin
										      V7029 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7028, {'Idris.Core.Env.Nil'}, V3, V6997),
										      case V7029 of
											{'Idris.Prelude.Left', E596} -> fun (V7030) -> {'Idris.Prelude.Left', V7030} end(E596);
											{'Idris.Prelude.Right', E597} ->
											    fun (V7031) ->
												    begin
												      V7036 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7032) -> fun (V7033) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7032, V7033) end end, fun (V7034) -> fun (V7035) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7034, V7035) end end}, V7031, V6997),
												      case V7036 of
													{'Idris.Prelude.Left', E598} -> fun (V7037) -> {'Idris.Prelude.Left', V7037} end(E598);
													{'Idris.Prelude.Right', E599} -> fun (V7038) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7038))}, V6997) end(E599);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E597);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E595);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E732, E733, E734, E735} -> fun (V7039, V7040, V7041, V7042) -> fun (V7043) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V7039, <<"Function types not allowed in a foreign struct"/utf8>>}, V7043) end end(E732, E733, E734, E735);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E697, E698, E699, E700, E701} ->
							    fun (V7044, V7045, V7046, V7047, V7048) ->
								    fun (V7049) ->
									    begin
									      V7078 = begin V7077 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7050) -> fun (V7051) -> fun (V7052) -> fun (V7053) -> fun (V7054) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7052, V7053, V7054) end end end end end, fun (V7055) -> fun (V7056) -> fun (V7057) -> V7056 end end end, fun (V7058) -> fun (V7059) -> fun (V7060) -> fun (V7061) -> fun (V7062) -> begin V7063 = V7060(V7062), begin V7064 = V7061(V7062), V7063(V7064) end end end end end end end}, fun (V7065) -> fun (V7066) -> fun (V7067) -> fun (V7068) -> fun (V7069) -> begin V7070 = V7067(V7069), (V7068(V7070))(V7069) end end end end end end, fun (V7071) -> fun (V7072) -> fun (V7073) -> begin V7074 = V7072(V7073), V7074(V7073) end end end end}, fun (V7075) -> fun (V7076) -> V7076 end end}, V0))(V7049), {'Idris.Prelude.Right', V7077} end,
									      case V7078 of
										{'Idris.Prelude.Left', E702} -> fun (V7079) -> {'Idris.Prelude.Left', V7079} end(E702);
										{'Idris.Prelude.Right', E703} ->
										    fun (V7080) ->
											    begin
											      V7085 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7081) -> fun (V7082) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7081, V7082) end end, fun (V7083) -> fun (V7084) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7083, V7084) end end}, V7045, V7049),
											      case V7085 of
												{'Idris.Prelude.Left', E704} -> fun (V7086) -> {'Idris.Prelude.Left', V7086} end(E704);
												{'Idris.Prelude.Right', E705} ->
												    fun (V7087) ->
													    begin
													      V7088 = ('un--getNArgs'(V7080, V7087, V7048))(V7049),
													      case V7088 of
														{'Idris.Prelude.Left', E706} -> fun (V7089) -> {'Idris.Prelude.Left', V7089} end(E706);
														{'Idris.Prelude.Right', E707} ->
														    fun (V7090) ->
															    case V7090 of
															      {'Idris.Compiler.CompileExpr.User', E708, E709} ->
																  fun (V7091, V7092) ->
																	  begin
																	    V7094 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7093) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7080, V7093) end, V7092))(V7049),
																	    case V7094 of
																	      {'Idris.Prelude.Left', E710} -> fun (V7095) -> {'Idris.Prelude.Left', V7095} end(E710);
																	      {'Idris.Prelude.Right', E711} ->
																		  fun (V7096) ->
																			  begin
																			    V7098 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7097) -> 'un--nfToCFType'(V0, V7044, V2, V7097) end, V7096))(V7049),
																			    case V7098 of
																			      {'Idris.Prelude.Left', E712} -> fun (V7099) -> {'Idris.Prelude.Left', V7099} end(E712);
																			      {'Idris.Prelude.Right', E713} -> fun (V7100) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7087, V7100}} end(E713);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E711);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E708, E709);
															      {'Idris.Compiler.CompileExpr.Struct', E714, E715} ->
																  fun (V7101, V7102) ->
																	  begin
																	    V7113 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V7103) ->
																							      case V7103 of
																								{'Idris.Builtin.MkPair', E716, E717} ->
																								    fun (V7104, V7105) ->
																									    fun (V7106) ->
																										    begin
																										      V7107 = ('Idris.Core.Normalise':'un--evalClosure'([], V7080, V7105))(V7106),
																										      case V7107 of
																											{'Idris.Prelude.Left', E718} -> fun (V7108) -> {'Idris.Prelude.Left', V7108} end(E718);
																											{'Idris.Prelude.Right', E719} ->
																											    fun (V7109) ->
																												    begin
																												      V7110 = ('un--nfToCFType'(V0, V7044, 0, V7109))(V7106),
																												      case V7110 of
																													{'Idris.Prelude.Left', E720} -> fun (V7111) -> {'Idris.Prelude.Left', V7111} end(E720);
																													{'Idris.Prelude.Right', E721} -> fun (V7112) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7104, V7112}} end(E721);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E719);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E716, E717);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V7102))(V7049),
																	    case V7113 of
																	      {'Idris.Prelude.Left', E722} -> fun (V7114) -> {'Idris.Prelude.Left', V7114} end(E722);
																	      {'Idris.Prelude.Right', E723} -> fun (V7115) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7101, V7115}} end(E723);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E714, E715);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E724} ->
																  fun (V7116) ->
																	  begin
																	    V7117 = ('Idris.Core.Normalise':'un--evalClosure'([], V7080, V7116))(V7049),
																	    case V7117 of
																	      {'Idris.Prelude.Left', E725} -> fun (V7118) -> {'Idris.Prelude.Left', V7118} end(E725);
																	      {'Idris.Prelude.Right', E726} ->
																		  fun (V7119) ->
																			  begin
																			    V7120 = ('un--nfToCFType'(V0, V7044, V2, V7119))(V7049),
																			    case V7120 of
																			      {'Idris.Prelude.Left', E727} -> fun (V7121) -> {'Idris.Prelude.Left', V7121} end(E727);
																			      {'Idris.Prelude.Right', E728} -> fun (V7122) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7122}} end(E728);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E726);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E724);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E707);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E705);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E703);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E697, E698, E699, E700, E701);
							{'Idris.Core.Value.NType', E729} -> fun (V7123) -> fun (V7124) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E729);
							{'Idris.Core.Value.NErased', E730, E731} -> fun (V7125, V7126) -> fun (V7127) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E730, E731);
							_ ->
							    fun (V7128) ->
								    begin
								      V7157 = begin V7156 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7129) -> fun (V7130) -> fun (V7131) -> fun (V7132) -> fun (V7133) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7131, V7132, V7133) end end end end end, fun (V7134) -> fun (V7135) -> fun (V7136) -> V7135 end end end, fun (V7137) -> fun (V7138) -> fun (V7139) -> fun (V7140) -> fun (V7141) -> begin V7142 = V7139(V7141), begin V7143 = V7140(V7141), V7142(V7143) end end end end end end end}, fun (V7144) -> fun (V7145) -> fun (V7146) -> fun (V7147) -> fun (V7148) -> begin V7149 = V7146(V7148), (V7147(V7149))(V7148) end end end end end end, fun (V7150) -> fun (V7151) -> fun (V7152) -> begin V7153 = V7151(V7152), V7153(V7152) end end end end}, fun (V7154) -> fun (V7155) -> V7155 end end}, V0))(V7128), {'Idris.Prelude.Right', V7156} end,
								      case V7157 of
									{'Idris.Prelude.Left', E691} -> fun (V7158) -> {'Idris.Prelude.Left', V7158} end(E691);
									{'Idris.Prelude.Right', E692} ->
									    fun (V7159) ->
										    begin
										      V7160 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7159, {'Idris.Core.Env.Nil'}, V3, V7128),
										      case V7160 of
											{'Idris.Prelude.Left', E693} -> fun (V7161) -> {'Idris.Prelude.Left', V7161} end(E693);
											{'Idris.Prelude.Right', E694} ->
											    fun (V7162) ->
												    begin
												      V7167 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7163) -> fun (V7164) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7163, V7164) end end, fun (V7165) -> fun (V7166) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7165, V7166) end end}, V7162, V7128),
												      case V7167 of
													{'Idris.Prelude.Left', E695} -> fun (V7168) -> {'Idris.Prelude.Left', V7168} end(E695);
													{'Idris.Prelude.Right', E696} -> fun (V7169) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7169))}, V7128) end(E696);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E694);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E692);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E559, E560, E561, E562, E563} ->
						      fun (V7170, V7171, V7172, V7173, V7174) ->
							      fun (V7175) ->
								      begin
									V7204 = begin V7203 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7176) -> fun (V7177) -> fun (V7178) -> fun (V7179) -> fun (V7180) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7178, V7179, V7180) end end end end end, fun (V7181) -> fun (V7182) -> fun (V7183) -> V7182 end end end, fun (V7184) -> fun (V7185) -> fun (V7186) -> fun (V7187) -> fun (V7188) -> begin V7189 = V7186(V7188), begin V7190 = V7187(V7188), V7189(V7190) end end end end end end end}, fun (V7191) -> fun (V7192) -> fun (V7193) -> fun (V7194) -> fun (V7195) -> begin V7196 = V7193(V7195), (V7194(V7196))(V7195) end end end end end end, fun (V7197) -> fun (V7198) -> fun (V7199) -> begin V7200 = V7198(V7199), V7200(V7199) end end end end}, fun (V7201) -> fun (V7202) -> V7202 end end}, V0))(V7175), {'Idris.Prelude.Right', V7203} end,
									case V7204 of
									  {'Idris.Prelude.Left', E564} -> fun (V7205) -> {'Idris.Prelude.Left', V7205} end(E564);
									  {'Idris.Prelude.Right', E565} ->
									      fun (V7206) ->
										      begin
											V7211 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7207) -> fun (V7208) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7207, V7208) end end, fun (V7209) -> fun (V7210) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7209, V7210) end end}, V7171, V7175),
											case V7211 of
											  {'Idris.Prelude.Left', E566} -> fun (V7212) -> {'Idris.Prelude.Left', V7212} end(E566);
											  {'Idris.Prelude.Right', E567} ->
											      fun (V7213) ->
												      begin
													V7214 = ('un--getNArgs'(V7206, V7213, V7174))(V7175),
													case V7214 of
													  {'Idris.Prelude.Left', E568} -> fun (V7215) -> {'Idris.Prelude.Left', V7215} end(E568);
													  {'Idris.Prelude.Right', E569} ->
													      fun (V7216) ->
														      case V7216 of
															{'Idris.Compiler.CompileExpr.User', E570, E571} ->
															    fun (V7217, V7218) ->
																    begin
																      V7220 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7219) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7206, V7219) end, V7218))(V7175),
																      case V7220 of
																	{'Idris.Prelude.Left', E572} -> fun (V7221) -> {'Idris.Prelude.Left', V7221} end(E572);
																	{'Idris.Prelude.Right', E573} ->
																	    fun (V7222) ->
																		    begin
																		      V7224 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7223) -> 'un--nfToCFType'(V0, V7170, V2, V7223) end, V7222))(V7175),
																		      case V7224 of
																			{'Idris.Prelude.Left', E574} -> fun (V7225) -> {'Idris.Prelude.Left', V7225} end(E574);
																			{'Idris.Prelude.Right', E575} -> fun (V7226) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7213, V7226}} end(E575);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E573);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E570, E571);
															{'Idris.Compiler.CompileExpr.Struct', E576, E577} ->
															    fun (V7227, V7228) ->
																    begin
																      V7239 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V7229) ->
																							case V7229 of
																							  {'Idris.Builtin.MkPair', E578, E579} ->
																							      fun (V7230, V7231) ->
																								      fun (V7232) ->
																									      begin
																										V7233 = ('Idris.Core.Normalise':'un--evalClosure'([], V7206, V7231))(V7232),
																										case V7233 of
																										  {'Idris.Prelude.Left', E580} -> fun (V7234) -> {'Idris.Prelude.Left', V7234} end(E580);
																										  {'Idris.Prelude.Right', E581} ->
																										      fun (V7235) ->
																											      begin
																												V7236 = ('un--nfToCFType'(V0, V7170, 0, V7235))(V7232),
																												case V7236 of
																												  {'Idris.Prelude.Left', E582} -> fun (V7237) -> {'Idris.Prelude.Left', V7237} end(E582);
																												  {'Idris.Prelude.Right', E583} -> fun (V7238) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7230, V7238}} end(E583);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E581);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E578, E579);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V7228))(V7175),
																      case V7239 of
																	{'Idris.Prelude.Left', E584} -> fun (V7240) -> {'Idris.Prelude.Left', V7240} end(E584);
																	{'Idris.Prelude.Right', E585} -> fun (V7241) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7227, V7241}} end(E585);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E576, E577);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E586} ->
															    fun (V7242) ->
																    begin
																      V7243 = ('Idris.Core.Normalise':'un--evalClosure'([], V7206, V7242))(V7175),
																      case V7243 of
																	{'Idris.Prelude.Left', E587} -> fun (V7244) -> {'Idris.Prelude.Left', V7244} end(E587);
																	{'Idris.Prelude.Right', E588} ->
																	    fun (V7245) ->
																		    begin
																		      V7246 = ('un--nfToCFType'(V0, V7170, V2, V7245))(V7175),
																		      case V7246 of
																			{'Idris.Prelude.Left', E589} -> fun (V7247) -> {'Idris.Prelude.Left', V7247} end(E589);
																			{'Idris.Prelude.Right', E590} -> fun (V7248) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7248}} end(E590);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E588);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E586);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E569);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E567);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E565);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E559, E560, E561, E562, E563);
						  {'Idris.Core.Value.NType', E591} -> fun (V7249) -> fun (V7250) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E591);
						  {'Idris.Core.Value.NErased', E592, E593} -> fun (V7251, V7252) -> fun (V7253) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E592, E593);
						  _ ->
						      fun (V7254) ->
							      begin
								V7283 = begin V7282 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7255) -> fun (V7256) -> fun (V7257) -> fun (V7258) -> fun (V7259) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7257, V7258, V7259) end end end end end, fun (V7260) -> fun (V7261) -> fun (V7262) -> V7261 end end end, fun (V7263) -> fun (V7264) -> fun (V7265) -> fun (V7266) -> fun (V7267) -> begin V7268 = V7265(V7267), begin V7269 = V7266(V7267), V7268(V7269) end end end end end end end}, fun (V7270) -> fun (V7271) -> fun (V7272) -> fun (V7273) -> fun (V7274) -> begin V7275 = V7272(V7274), (V7273(V7275))(V7274) end end end end end end, fun (V7276) -> fun (V7277) -> fun (V7278) -> begin V7279 = V7277(V7278), V7279(V7278) end end end end}, fun (V7280) -> fun (V7281) -> V7281 end end}, V0))(V7254), {'Idris.Prelude.Right', V7282} end,
								case V7283 of
								  {'Idris.Prelude.Left', E553} -> fun (V7284) -> {'Idris.Prelude.Left', V7284} end(E553);
								  {'Idris.Prelude.Right', E554} ->
								      fun (V7285) ->
									      begin
										V7286 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7285, {'Idris.Core.Env.Nil'}, V3, V7254),
										case V7286 of
										  {'Idris.Prelude.Left', E555} -> fun (V7287) -> {'Idris.Prelude.Left', V7287} end(E555);
										  {'Idris.Prelude.Right', E556} ->
										      fun (V7288) ->
											      begin
												V7293 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7289) -> fun (V7290) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7289, V7290) end end, fun (V7291) -> fun (V7292) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7291, V7292) end end}, V7288, V7254),
												case V7293 of
												  {'Idris.Prelude.Left', E557} -> fun (V7294) -> {'Idris.Prelude.Left', V7294} end(E557);
												  {'Idris.Prelude.Right', E558} -> fun (V7295) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7295))}, V7254) end(E558);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E556);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E554);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			    end(E551, E552);
			_ ->
			    case V2 of
			      1 ->
				  case V3 of
				    {'Idris.Core.Value.NBind', E450, E451, E452, E453} ->
					fun (V7296, V7297, V7298, V7299) ->
						case V7298 of
						  {'Idris.Core.TT.Pi', E495, E496, E497} ->
						      fun (V7300, V7301, V7302) ->
							      fun (V7303) ->
								      begin
									V7332 = begin V7331 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7304) -> fun (V7305) -> fun (V7306) -> fun (V7307) -> fun (V7308) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7306, V7307, V7308) end end end end end, fun (V7309) -> fun (V7310) -> fun (V7311) -> V7310 end end end, fun (V7312) -> fun (V7313) -> fun (V7314) -> fun (V7315) -> fun (V7316) -> begin V7317 = V7314(V7316), begin V7318 = V7315(V7316), V7317(V7318) end end end end end end end}, fun (V7319) -> fun (V7320) -> fun (V7321) -> fun (V7322) -> fun (V7323) -> begin V7324 = V7321(V7323), (V7322(V7324))(V7323) end end end end end end, fun (V7325) -> fun (V7326) -> fun (V7327) -> begin V7328 = V7326(V7327), V7328(V7327) end end end end}, fun (V7329) -> fun (V7330) -> V7330 end end}, V0))(V7303), {'Idris.Prelude.Right', V7331} end,
									case V7332 of
									  {'Idris.Prelude.Left', E498} -> fun (V7333) -> {'Idris.Prelude.Left', V7333} end(E498);
									  {'Idris.Prelude.Right', E499} ->
									      fun (V7334) ->
										      begin
											V7335 = ('un--nfToCFType'(V0, V7296, 1, V7302))(V7303),
											case V7335 of
											  {'Idris.Prelude.Left', E500} -> fun (V7336) -> {'Idris.Prelude.Left', V7336} end(E500);
											  {'Idris.Prelude.Right', E501} ->
											      fun (V7337) ->
												      begin
													V7338 = ((V7299(V7334))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V7296, 1})))(V7303),
													case V7338 of
													  {'Idris.Prelude.Left', E502} -> fun (V7339) -> {'Idris.Prelude.Left', V7339} end(E502);
													  {'Idris.Prelude.Right', E503} ->
													      fun (V7340) ->
														      begin
															V7341 = ('un--nfToCFType'(V0, V7296, 1, V7340))(V7303),
															case V7341 of
															  {'Idris.Prelude.Left', E504} -> fun (V7342) -> {'Idris.Prelude.Left', V7342} end(E504);
															  {'Idris.Prelude.Right', E505} -> fun (V7343) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V7337, V7343}} end(E505);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E503);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E501);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E499);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E495, E496, E497);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E460, E461, E462, E463, E464} ->
							    fun (V7344, V7345, V7346, V7347, V7348) ->
								    fun (V7349) ->
									    begin
									      V7378 = begin V7377 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7350) -> fun (V7351) -> fun (V7352) -> fun (V7353) -> fun (V7354) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7352, V7353, V7354) end end end end end, fun (V7355) -> fun (V7356) -> fun (V7357) -> V7356 end end end, fun (V7358) -> fun (V7359) -> fun (V7360) -> fun (V7361) -> fun (V7362) -> begin V7363 = V7360(V7362), begin V7364 = V7361(V7362), V7363(V7364) end end end end end end end}, fun (V7365) -> fun (V7366) -> fun (V7367) -> fun (V7368) -> fun (V7369) -> begin V7370 = V7367(V7369), (V7368(V7370))(V7369) end end end end end end, fun (V7371) -> fun (V7372) -> fun (V7373) -> begin V7374 = V7372(V7373), V7374(V7373) end end end end}, fun (V7375) -> fun (V7376) -> V7376 end end}, V0))(V7349), {'Idris.Prelude.Right', V7377} end,
									      case V7378 of
										{'Idris.Prelude.Left', E465} -> fun (V7379) -> {'Idris.Prelude.Left', V7379} end(E465);
										{'Idris.Prelude.Right', E466} ->
										    fun (V7380) ->
											    begin
											      V7385 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7381) -> fun (V7382) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7381, V7382) end end, fun (V7383) -> fun (V7384) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7383, V7384) end end}, V7345, V7349),
											      case V7385 of
												{'Idris.Prelude.Left', E467} -> fun (V7386) -> {'Idris.Prelude.Left', V7386} end(E467);
												{'Idris.Prelude.Right', E468} ->
												    fun (V7387) ->
													    begin
													      V7388 = ('un--getNArgs'(V7380, V7387, V7348))(V7349),
													      case V7388 of
														{'Idris.Prelude.Left', E469} -> fun (V7389) -> {'Idris.Prelude.Left', V7389} end(E469);
														{'Idris.Prelude.Right', E470} ->
														    fun (V7390) ->
															    case V7390 of
															      {'Idris.Compiler.CompileExpr.User', E471, E472} ->
																  fun (V7391, V7392) ->
																	  begin
																	    V7394 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7393) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7380, V7393) end, V7392))(V7349),
																	    case V7394 of
																	      {'Idris.Prelude.Left', E473} -> fun (V7395) -> {'Idris.Prelude.Left', V7395} end(E473);
																	      {'Idris.Prelude.Right', E474} ->
																		  fun (V7396) ->
																			  begin
																			    V7398 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7397) -> 'un--nfToCFType'(V0, V7344, V2, V7397) end, V7396))(V7349),
																			    case V7398 of
																			      {'Idris.Prelude.Left', E475} -> fun (V7399) -> {'Idris.Prelude.Left', V7399} end(E475);
																			      {'Idris.Prelude.Right', E476} -> fun (V7400) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7387, V7400}} end(E476);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E474);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E471, E472);
															      {'Idris.Compiler.CompileExpr.Struct', E477, E478} ->
																  fun (V7401, V7402) ->
																	  begin
																	    V7413 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V7403) ->
																							      case V7403 of
																								{'Idris.Builtin.MkPair', E479, E480} ->
																								    fun (V7404, V7405) ->
																									    fun (V7406) ->
																										    begin
																										      V7407 = ('Idris.Core.Normalise':'un--evalClosure'([], V7380, V7405))(V7406),
																										      case V7407 of
																											{'Idris.Prelude.Left', E481} -> fun (V7408) -> {'Idris.Prelude.Left', V7408} end(E481);
																											{'Idris.Prelude.Right', E482} ->
																											    fun (V7409) ->
																												    begin
																												      V7410 = ('un--nfToCFType'(V0, V7344, 0, V7409))(V7406),
																												      case V7410 of
																													{'Idris.Prelude.Left', E483} -> fun (V7411) -> {'Idris.Prelude.Left', V7411} end(E483);
																													{'Idris.Prelude.Right', E484} -> fun (V7412) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7404, V7412}} end(E484);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E482);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E479, E480);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V7402))(V7349),
																	    case V7413 of
																	      {'Idris.Prelude.Left', E485} -> fun (V7414) -> {'Idris.Prelude.Left', V7414} end(E485);
																	      {'Idris.Prelude.Right', E486} -> fun (V7415) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7401, V7415}} end(E486);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E477, E478);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E487} ->
																  fun (V7416) ->
																	  begin
																	    V7417 = ('Idris.Core.Normalise':'un--evalClosure'([], V7380, V7416))(V7349),
																	    case V7417 of
																	      {'Idris.Prelude.Left', E488} -> fun (V7418) -> {'Idris.Prelude.Left', V7418} end(E488);
																	      {'Idris.Prelude.Right', E489} ->
																		  fun (V7419) ->
																			  begin
																			    V7420 = ('un--nfToCFType'(V0, V7344, V2, V7419))(V7349),
																			    case V7420 of
																			      {'Idris.Prelude.Left', E490} -> fun (V7421) -> {'Idris.Prelude.Left', V7421} end(E490);
																			      {'Idris.Prelude.Right', E491} -> fun (V7422) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7422}} end(E491);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E489);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E487);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E470);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E468);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E466);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E460, E461, E462, E463, E464);
							{'Idris.Core.Value.NType', E492} -> fun (V7423) -> fun (V7424) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E492);
							{'Idris.Core.Value.NErased', E493, E494} -> fun (V7425, V7426) -> fun (V7427) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E493, E494);
							_ ->
							    fun (V7428) ->
								    begin
								      V7457 = begin V7456 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7429) -> fun (V7430) -> fun (V7431) -> fun (V7432) -> fun (V7433) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7431, V7432, V7433) end end end end end, fun (V7434) -> fun (V7435) -> fun (V7436) -> V7435 end end end, fun (V7437) -> fun (V7438) -> fun (V7439) -> fun (V7440) -> fun (V7441) -> begin V7442 = V7439(V7441), begin V7443 = V7440(V7441), V7442(V7443) end end end end end end end}, fun (V7444) -> fun (V7445) -> fun (V7446) -> fun (V7447) -> fun (V7448) -> begin V7449 = V7446(V7448), (V7447(V7449))(V7448) end end end end end end, fun (V7450) -> fun (V7451) -> fun (V7452) -> begin V7453 = V7451(V7452), V7453(V7452) end end end end}, fun (V7454) -> fun (V7455) -> V7455 end end}, V0))(V7428), {'Idris.Prelude.Right', V7456} end,
								      case V7457 of
									{'Idris.Prelude.Left', E454} -> fun (V7458) -> {'Idris.Prelude.Left', V7458} end(E454);
									{'Idris.Prelude.Right', E455} ->
									    fun (V7459) ->
										    begin
										      V7460 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7459, {'Idris.Core.Env.Nil'}, V3, V7428),
										      case V7460 of
											{'Idris.Prelude.Left', E456} -> fun (V7461) -> {'Idris.Prelude.Left', V7461} end(E456);
											{'Idris.Prelude.Right', E457} ->
											    fun (V7462) ->
												    begin
												      V7467 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7463) -> fun (V7464) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7463, V7464) end end, fun (V7465) -> fun (V7466) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7465, V7466) end end}, V7462, V7428),
												      case V7467 of
													{'Idris.Prelude.Left', E458} -> fun (V7468) -> {'Idris.Prelude.Left', V7468} end(E458);
													{'Idris.Prelude.Right', E459} -> fun (V7469) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7469))}, V7428) end(E459);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E457);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E455);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end
					end(E450, E451, E452, E453);
				    _ ->
					case V3 of
					  {'Idris.Core.Value.NTCon', E415, E416, E417, E418, E419} ->
					      fun (V7470, V7471, V7472, V7473, V7474) ->
						      fun (V7475) ->
							      begin
								V7504 = begin V7503 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7476) -> fun (V7477) -> fun (V7478) -> fun (V7479) -> fun (V7480) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7478, V7479, V7480) end end end end end, fun (V7481) -> fun (V7482) -> fun (V7483) -> V7482 end end end, fun (V7484) -> fun (V7485) -> fun (V7486) -> fun (V7487) -> fun (V7488) -> begin V7489 = V7486(V7488), begin V7490 = V7487(V7488), V7489(V7490) end end end end end end end}, fun (V7491) -> fun (V7492) -> fun (V7493) -> fun (V7494) -> fun (V7495) -> begin V7496 = V7493(V7495), (V7494(V7496))(V7495) end end end end end end, fun (V7497) -> fun (V7498) -> fun (V7499) -> begin V7500 = V7498(V7499), V7500(V7499) end end end end}, fun (V7501) -> fun (V7502) -> V7502 end end}, V0))(V7475), {'Idris.Prelude.Right', V7503} end,
								case V7504 of
								  {'Idris.Prelude.Left', E420} -> fun (V7505) -> {'Idris.Prelude.Left', V7505} end(E420);
								  {'Idris.Prelude.Right', E421} ->
								      fun (V7506) ->
									      begin
										V7511 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7507) -> fun (V7508) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7507, V7508) end end, fun (V7509) -> fun (V7510) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7509, V7510) end end}, V7471, V7475),
										case V7511 of
										  {'Idris.Prelude.Left', E422} -> fun (V7512) -> {'Idris.Prelude.Left', V7512} end(E422);
										  {'Idris.Prelude.Right', E423} ->
										      fun (V7513) ->
											      begin
												V7514 = ('un--getNArgs'(V7506, V7513, V7474))(V7475),
												case V7514 of
												  {'Idris.Prelude.Left', E424} -> fun (V7515) -> {'Idris.Prelude.Left', V7515} end(E424);
												  {'Idris.Prelude.Right', E425} ->
												      fun (V7516) ->
													      case V7516 of
														{'Idris.Compiler.CompileExpr.User', E426, E427} ->
														    fun (V7517, V7518) ->
															    begin
															      V7520 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7519) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7506, V7519) end, V7518))(V7475),
															      case V7520 of
																{'Idris.Prelude.Left', E428} -> fun (V7521) -> {'Idris.Prelude.Left', V7521} end(E428);
																{'Idris.Prelude.Right', E429} ->
																    fun (V7522) ->
																	    begin
																	      V7524 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7523) -> 'un--nfToCFType'(V0, V7470, V2, V7523) end, V7522))(V7475),
																	      case V7524 of
																		{'Idris.Prelude.Left', E430} -> fun (V7525) -> {'Idris.Prelude.Left', V7525} end(E430);
																		{'Idris.Prelude.Right', E431} -> fun (V7526) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7513, V7526}} end(E431);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E429);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E426, E427);
														{'Idris.Compiler.CompileExpr.Struct', E432, E433} ->
														    fun (V7527, V7528) ->
															    begin
															      V7539 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					fun (V7529) ->
																						case V7529 of
																						  {'Idris.Builtin.MkPair', E434, E435} ->
																						      fun (V7530, V7531) ->
																							      fun (V7532) ->
																								      begin
																									V7533 = ('Idris.Core.Normalise':'un--evalClosure'([], V7506, V7531))(V7532),
																									case V7533 of
																									  {'Idris.Prelude.Left', E436} -> fun (V7534) -> {'Idris.Prelude.Left', V7534} end(E436);
																									  {'Idris.Prelude.Right', E437} ->
																									      fun (V7535) ->
																										      begin
																											V7536 = ('un--nfToCFType'(V0, V7470, 0, V7535))(V7532),
																											case V7536 of
																											  {'Idris.Prelude.Left', E438} -> fun (V7537) -> {'Idris.Prelude.Left', V7537} end(E438);
																											  {'Idris.Prelude.Right', E439} -> fun (V7538) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7530, V7538}} end(E439);
																											  _ -> erlang:throw("Error: Unreachable branch")
																											end
																										      end
																									      end(E437);
																									  _ -> erlang:throw("Error: Unreachable branch")
																									end
																								      end
																							      end
																						      end(E434, E435);
																						  _ -> erlang:throw("Error: Unreachable branch")
																						end
																					end,
																					V7528))(V7475),
															      case V7539 of
																{'Idris.Prelude.Left', E440} -> fun (V7540) -> {'Idris.Prelude.Left', V7540} end(E440);
																{'Idris.Prelude.Right', E441} -> fun (V7541) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7527, V7541}} end(E441);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E432, E433);
														{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														{'Idris.Compiler.CompileExpr.NIORes', E442} ->
														    fun (V7542) ->
															    begin
															      V7543 = ('Idris.Core.Normalise':'un--evalClosure'([], V7506, V7542))(V7475),
															      case V7543 of
																{'Idris.Prelude.Left', E443} -> fun (V7544) -> {'Idris.Prelude.Left', V7544} end(E443);
																{'Idris.Prelude.Right', E444} ->
																    fun (V7545) ->
																	    begin
																	      V7546 = ('un--nfToCFType'(V0, V7470, V2, V7545))(V7475),
																	      case V7546 of
																		{'Idris.Prelude.Left', E445} -> fun (V7547) -> {'Idris.Prelude.Left', V7547} end(E445);
																		{'Idris.Prelude.Right', E446} -> fun (V7548) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7548}} end(E446);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E444);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E442);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
												      end(E425);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E423);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E421);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
					      end(E415, E416, E417, E418, E419);
					  {'Idris.Core.Value.NType', E447} -> fun (V7549) -> fun (V7550) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E447);
					  {'Idris.Core.Value.NErased', E448, E449} -> fun (V7551, V7552) -> fun (V7553) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E448, E449);
					  _ ->
					      fun (V7554) ->
						      begin
							V7583 = begin V7582 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7555) -> fun (V7556) -> fun (V7557) -> fun (V7558) -> fun (V7559) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7557, V7558, V7559) end end end end end, fun (V7560) -> fun (V7561) -> fun (V7562) -> V7561 end end end, fun (V7563) -> fun (V7564) -> fun (V7565) -> fun (V7566) -> fun (V7567) -> begin V7568 = V7565(V7567), begin V7569 = V7566(V7567), V7568(V7569) end end end end end end end}, fun (V7570) -> fun (V7571) -> fun (V7572) -> fun (V7573) -> fun (V7574) -> begin V7575 = V7572(V7574), (V7573(V7575))(V7574) end end end end end end, fun (V7576) -> fun (V7577) -> fun (V7578) -> begin V7579 = V7577(V7578), V7579(V7578) end end end end}, fun (V7580) -> fun (V7581) -> V7581 end end}, V0))(V7554), {'Idris.Prelude.Right', V7582} end,
							case V7583 of
							  {'Idris.Prelude.Left', E409} -> fun (V7584) -> {'Idris.Prelude.Left', V7584} end(E409);
							  {'Idris.Prelude.Right', E410} ->
							      fun (V7585) ->
								      begin
									V7586 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7585, {'Idris.Core.Env.Nil'}, V3, V7554),
									case V7586 of
									  {'Idris.Prelude.Left', E411} -> fun (V7587) -> {'Idris.Prelude.Left', V7587} end(E411);
									  {'Idris.Prelude.Right', E412} ->
									      fun (V7588) ->
										      begin
											V7593 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7589) -> fun (V7590) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7589, V7590) end end, fun (V7591) -> fun (V7592) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7591, V7592) end end}, V7588, V7554),
											case V7593 of
											  {'Idris.Prelude.Left', E413} -> fun (V7594) -> {'Idris.Prelude.Left', V7594} end(E413);
											  {'Idris.Prelude.Right', E414} -> fun (V7595) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7595))}, V7554) end(E414);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E412);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end(E410);
							  _ -> erlang:throw("Error: Unreachable branch")
							end
						      end
					      end
					end
				  end;
			      0 ->
				  case V3 of
				    {'Idris.Core.Value.NBind', E547, E548, E549, E550} -> fun (V7596, V7597, V7598, V7599) -> fun (V7600) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V7596, <<"Function types not allowed in a foreign struct"/utf8>>}, V7600) end end(E547, E548, E549, E550);
				    _ ->
					case V3 of
					  {'Idris.Core.Value.NTCon', E512, E513, E514, E515, E516} ->
					      fun (V7601, V7602, V7603, V7604, V7605) ->
						      fun (V7606) ->
							      begin
								V7635 = begin V7634 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7607) -> fun (V7608) -> fun (V7609) -> fun (V7610) -> fun (V7611) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7609, V7610, V7611) end end end end end, fun (V7612) -> fun (V7613) -> fun (V7614) -> V7613 end end end, fun (V7615) -> fun (V7616) -> fun (V7617) -> fun (V7618) -> fun (V7619) -> begin V7620 = V7617(V7619), begin V7621 = V7618(V7619), V7620(V7621) end end end end end end end}, fun (V7622) -> fun (V7623) -> fun (V7624) -> fun (V7625) -> fun (V7626) -> begin V7627 = V7624(V7626), (V7625(V7627))(V7626) end end end end end end, fun (V7628) -> fun (V7629) -> fun (V7630) -> begin V7631 = V7629(V7630), V7631(V7630) end end end end}, fun (V7632) -> fun (V7633) -> V7633 end end}, V0))(V7606), {'Idris.Prelude.Right', V7634} end,
								case V7635 of
								  {'Idris.Prelude.Left', E517} -> fun (V7636) -> {'Idris.Prelude.Left', V7636} end(E517);
								  {'Idris.Prelude.Right', E518} ->
								      fun (V7637) ->
									      begin
										V7642 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7638) -> fun (V7639) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7638, V7639) end end, fun (V7640) -> fun (V7641) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7640, V7641) end end}, V7602, V7606),
										case V7642 of
										  {'Idris.Prelude.Left', E519} -> fun (V7643) -> {'Idris.Prelude.Left', V7643} end(E519);
										  {'Idris.Prelude.Right', E520} ->
										      fun (V7644) ->
											      begin
												V7645 = ('un--getNArgs'(V7637, V7644, V7605))(V7606),
												case V7645 of
												  {'Idris.Prelude.Left', E521} -> fun (V7646) -> {'Idris.Prelude.Left', V7646} end(E521);
												  {'Idris.Prelude.Right', E522} ->
												      fun (V7647) ->
													      case V7647 of
														{'Idris.Compiler.CompileExpr.User', E523, E524} ->
														    fun (V7648, V7649) ->
															    begin
															      V7651 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7650) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7637, V7650) end, V7649))(V7606),
															      case V7651 of
																{'Idris.Prelude.Left', E525} -> fun (V7652) -> {'Idris.Prelude.Left', V7652} end(E525);
																{'Idris.Prelude.Right', E526} ->
																    fun (V7653) ->
																	    begin
																	      V7655 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7654) -> 'un--nfToCFType'(V0, V7601, V2, V7654) end, V7653))(V7606),
																	      case V7655 of
																		{'Idris.Prelude.Left', E527} -> fun (V7656) -> {'Idris.Prelude.Left', V7656} end(E527);
																		{'Idris.Prelude.Right', E528} -> fun (V7657) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7644, V7657}} end(E528);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E526);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E523, E524);
														{'Idris.Compiler.CompileExpr.Struct', E529, E530} ->
														    fun (V7658, V7659) ->
															    begin
															      V7670 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					fun (V7660) ->
																						case V7660 of
																						  {'Idris.Builtin.MkPair', E531, E532} ->
																						      fun (V7661, V7662) ->
																							      fun (V7663) ->
																								      begin
																									V7664 = ('Idris.Core.Normalise':'un--evalClosure'([], V7637, V7662))(V7663),
																									case V7664 of
																									  {'Idris.Prelude.Left', E533} -> fun (V7665) -> {'Idris.Prelude.Left', V7665} end(E533);
																									  {'Idris.Prelude.Right', E534} ->
																									      fun (V7666) ->
																										      begin
																											V7667 = ('un--nfToCFType'(V0, V7601, 0, V7666))(V7663),
																											case V7667 of
																											  {'Idris.Prelude.Left', E535} -> fun (V7668) -> {'Idris.Prelude.Left', V7668} end(E535);
																											  {'Idris.Prelude.Right', E536} -> fun (V7669) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7661, V7669}} end(E536);
																											  _ -> erlang:throw("Error: Unreachable branch")
																											end
																										      end
																									      end(E534);
																									  _ -> erlang:throw("Error: Unreachable branch")
																									end
																								      end
																							      end
																						      end(E531, E532);
																						  _ -> erlang:throw("Error: Unreachable branch")
																						end
																					end,
																					V7659))(V7606),
															      case V7670 of
																{'Idris.Prelude.Left', E537} -> fun (V7671) -> {'Idris.Prelude.Left', V7671} end(E537);
																{'Idris.Prelude.Right', E538} -> fun (V7672) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7658, V7672}} end(E538);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E529, E530);
														{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														{'Idris.Compiler.CompileExpr.NIORes', E539} ->
														    fun (V7673) ->
															    begin
															      V7674 = ('Idris.Core.Normalise':'un--evalClosure'([], V7637, V7673))(V7606),
															      case V7674 of
																{'Idris.Prelude.Left', E540} -> fun (V7675) -> {'Idris.Prelude.Left', V7675} end(E540);
																{'Idris.Prelude.Right', E541} ->
																    fun (V7676) ->
																	    begin
																	      V7677 = ('un--nfToCFType'(V0, V7601, V2, V7676))(V7606),
																	      case V7677 of
																		{'Idris.Prelude.Left', E542} -> fun (V7678) -> {'Idris.Prelude.Left', V7678} end(E542);
																		{'Idris.Prelude.Right', E543} -> fun (V7679) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7679}} end(E543);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E541);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E539);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
												      end(E522);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E520);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E518);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
					      end(E512, E513, E514, E515, E516);
					  {'Idris.Core.Value.NType', E544} -> fun (V7680) -> fun (V7681) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E544);
					  {'Idris.Core.Value.NErased', E545, E546} -> fun (V7682, V7683) -> fun (V7684) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E545, E546);
					  _ ->
					      fun (V7685) ->
						      begin
							V7714 = begin V7713 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7686) -> fun (V7687) -> fun (V7688) -> fun (V7689) -> fun (V7690) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7688, V7689, V7690) end end end end end, fun (V7691) -> fun (V7692) -> fun (V7693) -> V7692 end end end, fun (V7694) -> fun (V7695) -> fun (V7696) -> fun (V7697) -> fun (V7698) -> begin V7699 = V7696(V7698), begin V7700 = V7697(V7698), V7699(V7700) end end end end end end end}, fun (V7701) -> fun (V7702) -> fun (V7703) -> fun (V7704) -> fun (V7705) -> begin V7706 = V7703(V7705), (V7704(V7706))(V7705) end end end end end end, fun (V7707) -> fun (V7708) -> fun (V7709) -> begin V7710 = V7708(V7709), V7710(V7709) end end end end}, fun (V7711) -> fun (V7712) -> V7712 end end}, V0))(V7685), {'Idris.Prelude.Right', V7713} end,
							case V7714 of
							  {'Idris.Prelude.Left', E506} -> fun (V7715) -> {'Idris.Prelude.Left', V7715} end(E506);
							  {'Idris.Prelude.Right', E507} ->
							      fun (V7716) ->
								      begin
									V7717 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7716, {'Idris.Core.Env.Nil'}, V3, V7685),
									case V7717 of
									  {'Idris.Prelude.Left', E508} -> fun (V7718) -> {'Idris.Prelude.Left', V7718} end(E508);
									  {'Idris.Prelude.Right', E509} ->
									      fun (V7719) ->
										      begin
											V7724 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7720) -> fun (V7721) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7720, V7721) end end, fun (V7722) -> fun (V7723) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7722, V7723) end end}, V7719, V7685),
											case V7724 of
											  {'Idris.Prelude.Left', E510} -> fun (V7725) -> {'Idris.Prelude.Left', V7725} end(E510);
											  {'Idris.Prelude.Right', E511} -> fun (V7726) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7726))}, V7685) end(E511);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E509);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end(E507);
							  _ -> erlang:throw("Error: Unreachable branch")
							end
						      end
					      end
					end
				  end;
			      _ ->
				  case V3 of
				    {'Idris.Core.Value.NTCon', E374, E375, E376, E377, E378} ->
					fun (V7727, V7728, V7729, V7730, V7731) ->
						fun (V7732) ->
							begin
							  V7761 = begin V7760 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7733) -> fun (V7734) -> fun (V7735) -> fun (V7736) -> fun (V7737) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7735, V7736, V7737) end end end end end, fun (V7738) -> fun (V7739) -> fun (V7740) -> V7739 end end end, fun (V7741) -> fun (V7742) -> fun (V7743) -> fun (V7744) -> fun (V7745) -> begin V7746 = V7743(V7745), begin V7747 = V7744(V7745), V7746(V7747) end end end end end end end}, fun (V7748) -> fun (V7749) -> fun (V7750) -> fun (V7751) -> fun (V7752) -> begin V7753 = V7750(V7752), (V7751(V7753))(V7752) end end end end end end, fun (V7754) -> fun (V7755) -> fun (V7756) -> begin V7757 = V7755(V7756), V7757(V7756) end end end end}, fun (V7758) -> fun (V7759) -> V7759 end end}, V0))(V7732), {'Idris.Prelude.Right', V7760} end,
							  case V7761 of
							    {'Idris.Prelude.Left', E379} -> fun (V7762) -> {'Idris.Prelude.Left', V7762} end(E379);
							    {'Idris.Prelude.Right', E380} ->
								fun (V7763) ->
									begin
									  V7768 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7764) -> fun (V7765) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7764, V7765) end end, fun (V7766) -> fun (V7767) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7766, V7767) end end}, V7728, V7732),
									  case V7768 of
									    {'Idris.Prelude.Left', E381} -> fun (V7769) -> {'Idris.Prelude.Left', V7769} end(E381);
									    {'Idris.Prelude.Right', E382} ->
										fun (V7770) ->
											begin
											  V7771 = ('un--getNArgs'(V7763, V7770, V7731))(V7732),
											  case V7771 of
											    {'Idris.Prelude.Left', E383} -> fun (V7772) -> {'Idris.Prelude.Left', V7772} end(E383);
											    {'Idris.Prelude.Right', E384} ->
												fun (V7773) ->
													case V7773 of
													  {'Idris.Compiler.CompileExpr.User', E385, E386} ->
													      fun (V7774, V7775) ->
														      begin
															V7777 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7776) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7763, V7776) end, V7775))(V7732),
															case V7777 of
															  {'Idris.Prelude.Left', E387} -> fun (V7778) -> {'Idris.Prelude.Left', V7778} end(E387);
															  {'Idris.Prelude.Right', E388} ->
															      fun (V7779) ->
																      begin
																	V7781 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7780) -> 'un--nfToCFType'(V0, V7727, V2, V7780) end, V7779))(V7732),
																	case V7781 of
																	  {'Idris.Prelude.Left', E389} -> fun (V7782) -> {'Idris.Prelude.Left', V7782} end(E389);
																	  {'Idris.Prelude.Right', E390} -> fun (V7783) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7770, V7783}} end(E390);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E388);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E385, E386);
													  {'Idris.Compiler.CompileExpr.Struct', E391, E392} ->
													      fun (V7784, V7785) ->
														      begin
															V7796 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																				  fun (V7786) ->
																					  case V7786 of
																					    {'Idris.Builtin.MkPair', E393, E394} ->
																						fun (V7787, V7788) ->
																							fun (V7789) ->
																								begin
																								  V7790 = ('Idris.Core.Normalise':'un--evalClosure'([], V7763, V7788))(V7789),
																								  case V7790 of
																								    {'Idris.Prelude.Left', E395} -> fun (V7791) -> {'Idris.Prelude.Left', V7791} end(E395);
																								    {'Idris.Prelude.Right', E396} ->
																									fun (V7792) ->
																										begin
																										  V7793 = ('un--nfToCFType'(V0, V7727, 0, V7792))(V7789),
																										  case V7793 of
																										    {'Idris.Prelude.Left', E397} -> fun (V7794) -> {'Idris.Prelude.Left', V7794} end(E397);
																										    {'Idris.Prelude.Right', E398} -> fun (V7795) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7787, V7795}} end(E398);
																										    _ -> erlang:throw("Error: Unreachable branch")
																										  end
																										end
																									end(E396);
																								    _ -> erlang:throw("Error: Unreachable branch")
																								  end
																								end
																							end
																						end(E393, E394);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																				  end,
																				  V7785))(V7732),
															case V7796 of
															  {'Idris.Prelude.Left', E399} -> fun (V7797) -> {'Idris.Prelude.Left', V7797} end(E399);
															  {'Idris.Prelude.Right', E400} -> fun (V7798) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7784, V7798}} end(E400);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E391, E392);
													  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
													  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
													  {'Idris.Compiler.CompileExpr.NIORes', E401} ->
													      fun (V7799) ->
														      begin
															V7800 = ('Idris.Core.Normalise':'un--evalClosure'([], V7763, V7799))(V7732),
															case V7800 of
															  {'Idris.Prelude.Left', E402} -> fun (V7801) -> {'Idris.Prelude.Left', V7801} end(E402);
															  {'Idris.Prelude.Right', E403} ->
															      fun (V7802) ->
																      begin
																	V7803 = ('un--nfToCFType'(V0, V7727, V2, V7802))(V7732),
																	case V7803 of
																	  {'Idris.Prelude.Left', E404} -> fun (V7804) -> {'Idris.Prelude.Left', V7804} end(E404);
																	  {'Idris.Prelude.Right', E405} -> fun (V7805) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7805}} end(E405);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E403);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E401);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												end(E384);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E382);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E380);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					end(E374, E375, E376, E377, E378);
				    {'Idris.Core.Value.NType', E406} -> fun (V7806) -> fun (V7807) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E406);
				    {'Idris.Core.Value.NErased', E407, E408} -> fun (V7808, V7809) -> fun (V7810) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E407, E408);
				    _ ->
					fun (V7811) ->
						begin
						  V7840 = begin V7839 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7812) -> fun (V7813) -> fun (V7814) -> fun (V7815) -> fun (V7816) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7814, V7815, V7816) end end end end end, fun (V7817) -> fun (V7818) -> fun (V7819) -> V7818 end end end, fun (V7820) -> fun (V7821) -> fun (V7822) -> fun (V7823) -> fun (V7824) -> begin V7825 = V7822(V7824), begin V7826 = V7823(V7824), V7825(V7826) end end end end end end end}, fun (V7827) -> fun (V7828) -> fun (V7829) -> fun (V7830) -> fun (V7831) -> begin V7832 = V7829(V7831), (V7830(V7832))(V7831) end end end end end end, fun (V7833) -> fun (V7834) -> fun (V7835) -> begin V7836 = V7834(V7835), V7836(V7835) end end end end}, fun (V7837) -> fun (V7838) -> V7838 end end}, V0))(V7811), {'Idris.Prelude.Right', V7839} end,
						  case V7840 of
						    {'Idris.Prelude.Left', E368} -> fun (V7841) -> {'Idris.Prelude.Left', V7841} end(E368);
						    {'Idris.Prelude.Right', E369} ->
							fun (V7842) ->
								begin
								  V7843 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V7842, {'Idris.Core.Env.Nil'}, V3, V7811),
								  case V7843 of
								    {'Idris.Prelude.Left', E370} -> fun (V7844) -> {'Idris.Prelude.Left', V7844} end(E370);
								    {'Idris.Prelude.Right', E371} ->
									fun (V7845) ->
										begin
										  V7850 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7846) -> fun (V7847) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V7846, V7847) end end, fun (V7848) -> fun (V7849) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V7848, V7849) end end}, V7845, V7811),
										  case V7850 of
										    {'Idris.Prelude.Left', E372} -> fun (V7851) -> {'Idris.Prelude.Left', V7851} end(E372);
										    {'Idris.Prelude.Right', E373} -> fun (V7852) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V7852))}, V7811) end(E373);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E371);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end(E369);
						    _ -> erlang:throw("Error: Unreachable branch")
						  end
						end
					end
				  end
			    end
		      end
		end;
	    0 ->
		case V3 of
		  {'Idris.Core.Value.NPrimVal', E1474, E1475} ->
		      fun (V7853, V7854) ->
			      case V7854 of
				{'Idris.Core.TT.StringType'} -> fun () -> fun (V7855) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V7855) end end();
				_ ->
				    case V3 of
				      {'Idris.Core.Value.NPrimVal', E1659, E1660} ->
					  fun (V7856, V7857) ->
						  case V7857 of
						    {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V7858) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
						    {'Idris.Core.TT.CharType'} -> fun () -> fun (V7859) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
						    {'Idris.Core.TT.WorldType'} -> fun () -> fun (V7860) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
						    _ ->
							case V2 of
							  1 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E1743, E1744, E1745, E1746} ->
								    fun (V7861, V7862, V7863, V7864) ->
									    case V7863 of
									      {'Idris.Core.TT.Pi', E1788, E1789, E1790} ->
										  fun (V7865, V7866, V7867) ->
											  fun (V7868) ->
												  begin
												    V7897 = begin V7896 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7869) -> fun (V7870) -> fun (V7871) -> fun (V7872) -> fun (V7873) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7871, V7872, V7873) end end end end end, fun (V7874) -> fun (V7875) -> fun (V7876) -> V7875 end end end, fun (V7877) -> fun (V7878) -> fun (V7879) -> fun (V7880) -> fun (V7881) -> begin V7882 = V7879(V7881), begin V7883 = V7880(V7881), V7882(V7883) end end end end end end end}, fun (V7884) -> fun (V7885) -> fun (V7886) -> fun (V7887) -> fun (V7888) -> begin V7889 = V7886(V7888), (V7887(V7889))(V7888) end end end end end end, fun (V7890) -> fun (V7891) -> fun (V7892) -> begin V7893 = V7891(V7892), V7893(V7892) end end end end}, fun (V7894) -> fun (V7895) -> V7895 end end}, V0))(V7868), {'Idris.Prelude.Right', V7896} end,
												    case V7897 of
												      {'Idris.Prelude.Left', E1791} -> fun (V7898) -> {'Idris.Prelude.Left', V7898} end(E1791);
												      {'Idris.Prelude.Right', E1792} ->
													  fun (V7899) ->
														  begin
														    V7900 = ('un--nfToCFType'(V0, V7861, 1, V7867))(V7868),
														    case V7900 of
														      {'Idris.Prelude.Left', E1793} -> fun (V7901) -> {'Idris.Prelude.Left', V7901} end(E1793);
														      {'Idris.Prelude.Right', E1794} ->
															  fun (V7902) ->
																  begin
																    V7903 = ((V7864(V7899))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V7861, 1})))(V7868),
																    case V7903 of
																      {'Idris.Prelude.Left', E1795} -> fun (V7904) -> {'Idris.Prelude.Left', V7904} end(E1795);
																      {'Idris.Prelude.Right', E1796} ->
																	  fun (V7905) ->
																		  begin
																		    V7906 = ('un--nfToCFType'(V0, V7861, 1, V7905))(V7868),
																		    case V7906 of
																		      {'Idris.Prelude.Left', E1797} -> fun (V7907) -> {'Idris.Prelude.Left', V7907} end(E1797);
																		      {'Idris.Prelude.Right', E1798} -> fun (V7908) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V7902, V7908}} end(E1798);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1796);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
															  end(E1794);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1792);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end
										  end(E1788, E1789, E1790);
									      _ ->
										  case V3 of
										    {'Idris.Core.Value.NTCon', E1753, E1754, E1755, E1756, E1757} ->
											fun (V7909, V7910, V7911, V7912, V7913) ->
												fun (V7914) ->
													begin
													  V7943 = begin V7942 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7915) -> fun (V7916) -> fun (V7917) -> fun (V7918) -> fun (V7919) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7917, V7918, V7919) end end end end end, fun (V7920) -> fun (V7921) -> fun (V7922) -> V7921 end end end, fun (V7923) -> fun (V7924) -> fun (V7925) -> fun (V7926) -> fun (V7927) -> begin V7928 = V7925(V7927), begin V7929 = V7926(V7927), V7928(V7929) end end end end end end end}, fun (V7930) -> fun (V7931) -> fun (V7932) -> fun (V7933) -> fun (V7934) -> begin V7935 = V7932(V7934), (V7933(V7935))(V7934) end end end end end end, fun (V7936) -> fun (V7937) -> fun (V7938) -> begin V7939 = V7937(V7938), V7939(V7938) end end end end}, fun (V7940) -> fun (V7941) -> V7941 end end}, V0))(V7914), {'Idris.Prelude.Right', V7942} end,
													  case V7943 of
													    {'Idris.Prelude.Left', E1758} -> fun (V7944) -> {'Idris.Prelude.Left', V7944} end(E1758);
													    {'Idris.Prelude.Right', E1759} ->
														fun (V7945) ->
															begin
															  V7950 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7946) -> fun (V7947) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V7946, V7947) end end, fun (V7948) -> fun (V7949) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V7948, V7949) end end}, V7910, V7914),
															  case V7950 of
															    {'Idris.Prelude.Left', E1760} -> fun (V7951) -> {'Idris.Prelude.Left', V7951} end(E1760);
															    {'Idris.Prelude.Right', E1761} ->
																fun (V7952) ->
																	begin
																	  V7953 = ('un--getNArgs'(V7945, V7952, V7913))(V7914),
																	  case V7953 of
																	    {'Idris.Prelude.Left', E1762} -> fun (V7954) -> {'Idris.Prelude.Left', V7954} end(E1762);
																	    {'Idris.Prelude.Right', E1763} ->
																		fun (V7955) ->
																			case V7955 of
																			  {'Idris.Compiler.CompileExpr.User', E1764, E1765} ->
																			      fun (V7956, V7957) ->
																				      begin
																					V7959 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7958) -> 'Idris.Core.Normalise':'un--evalClosure'([], V7945, V7958) end, V7957))(V7914),
																					case V7959 of
																					  {'Idris.Prelude.Left', E1766} -> fun (V7960) -> {'Idris.Prelude.Left', V7960} end(E1766);
																					  {'Idris.Prelude.Right', E1767} ->
																					      fun (V7961) ->
																						      begin
																							V7963 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V7962) -> 'un--nfToCFType'(V0, V7909, V2, V7962) end, V7961))(V7914),
																							case V7963 of
																							  {'Idris.Prelude.Left', E1768} -> fun (V7964) -> {'Idris.Prelude.Left', V7964} end(E1768);
																							  {'Idris.Prelude.Right', E1769} -> fun (V7965) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V7952, V7965}} end(E1769);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E1767);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1764, E1765);
																			  {'Idris.Compiler.CompileExpr.Struct', E1770, E1771} ->
																			      fun (V7966, V7967) ->
																				      begin
																					V7978 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																										  fun (V7968) ->
																											  case V7968 of
																											    {'Idris.Builtin.MkPair', E1772, E1773} ->
																												fun (V7969, V7970) ->
																													fun (V7971) ->
																														begin
																														  V7972 = ('Idris.Core.Normalise':'un--evalClosure'([], V7945, V7970))(V7971),
																														  case V7972 of
																														    {'Idris.Prelude.Left', E1774} -> fun (V7973) -> {'Idris.Prelude.Left', V7973} end(E1774);
																														    {'Idris.Prelude.Right', E1775} ->
																															fun (V7974) ->
																																begin
																																  V7975 = ('un--nfToCFType'(V0, V7909, 0, V7974))(V7971),
																																  case V7975 of
																																    {'Idris.Prelude.Left', E1776} -> fun (V7976) -> {'Idris.Prelude.Left', V7976} end(E1776);
																																    {'Idris.Prelude.Right', E1777} -> fun (V7977) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V7969, V7977}} end(E1777);
																																    _ -> erlang:throw("Error: Unreachable branch")
																																  end
																																end
																															end(E1775);
																														    _ -> erlang:throw("Error: Unreachable branch")
																														  end
																														end
																													end
																												end(E1772, E1773);
																											    _ -> erlang:throw("Error: Unreachable branch")
																											  end
																										  end,
																										  V7967))(V7914),
																					case V7978 of
																					  {'Idris.Prelude.Left', E1778} -> fun (V7979) -> {'Idris.Prelude.Left', V7979} end(E1778);
																					  {'Idris.Prelude.Right', E1779} -> fun (V7980) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V7966, V7980}} end(E1779);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1770, E1771);
																			  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																			  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																			  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																			  {'Idris.Compiler.CompileExpr.NIORes', E1780} ->
																			      fun (V7981) ->
																				      begin
																					V7982 = ('Idris.Core.Normalise':'un--evalClosure'([], V7945, V7981))(V7914),
																					case V7982 of
																					  {'Idris.Prelude.Left', E1781} -> fun (V7983) -> {'Idris.Prelude.Left', V7983} end(E1781);
																					  {'Idris.Prelude.Right', E1782} ->
																					      fun (V7984) ->
																						      begin
																							V7985 = ('un--nfToCFType'(V0, V7909, V2, V7984))(V7914),
																							case V7985 of
																							  {'Idris.Prelude.Left', E1783} -> fun (V7986) -> {'Idris.Prelude.Left', V7986} end(E1783);
																							  {'Idris.Prelude.Right', E1784} -> fun (V7987) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V7987}} end(E1784);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						      end
																					      end(E1782);
																					  _ -> erlang:throw("Error: Unreachable branch")
																					end
																				      end
																			      end(E1780);
																			  _ -> erlang:throw("Error: Unreachable branch")
																			end
																		end(E1763);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																	end
																end(E1761);
															    _ -> erlang:throw("Error: Unreachable branch")
															  end
															end
														end(E1759);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end
													end
												end
											end(E1753, E1754, E1755, E1756, E1757);
										    {'Idris.Core.Value.NType', E1785} -> fun (V7988) -> fun (V7989) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1785);
										    {'Idris.Core.Value.NErased', E1786, E1787} -> fun (V7990, V7991) -> fun (V7992) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1786, E1787);
										    _ ->
											fun (V7993) ->
												begin
												  V8022 = begin V8021 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V7994) -> fun (V7995) -> fun (V7996) -> fun (V7997) -> fun (V7998) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V7996, V7997, V7998) end end end end end, fun (V7999) -> fun (V8000) -> fun (V8001) -> V8000 end end end, fun (V8002) -> fun (V8003) -> fun (V8004) -> fun (V8005) -> fun (V8006) -> begin V8007 = V8004(V8006), begin V8008 = V8005(V8006), V8007(V8008) end end end end end end end}, fun (V8009) -> fun (V8010) -> fun (V8011) -> fun (V8012) -> fun (V8013) -> begin V8014 = V8011(V8013), (V8012(V8014))(V8013) end end end end end end, fun (V8015) -> fun (V8016) -> fun (V8017) -> begin V8018 = V8016(V8017), V8018(V8017) end end end end}, fun (V8019) -> fun (V8020) -> V8020 end end}, V0))(V7993), {'Idris.Prelude.Right', V8021} end,
												  case V8022 of
												    {'Idris.Prelude.Left', E1747} -> fun (V8023) -> {'Idris.Prelude.Left', V8023} end(E1747);
												    {'Idris.Prelude.Right', E1748} ->
													fun (V8024) ->
														begin
														  V8025 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8024, {'Idris.Core.Env.Nil'}, V3, V7993),
														  case V8025 of
														    {'Idris.Prelude.Left', E1749} -> fun (V8026) -> {'Idris.Prelude.Left', V8026} end(E1749);
														    {'Idris.Prelude.Right', E1750} ->
															fun (V8027) ->
																begin
																  V8032 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8028) -> fun (V8029) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8028, V8029) end end, fun (V8030) -> fun (V8031) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8030, V8031) end end}, V8027, V7993),
																  case V8032 of
																    {'Idris.Prelude.Left', E1751} -> fun (V8033) -> {'Idris.Prelude.Left', V8033} end(E1751);
																    {'Idris.Prelude.Right', E1752} -> fun (V8034) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8034))}, V7993) end(E1752);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E1750);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E1748);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end
										  end
									    end
								    end(E1743, E1744, E1745, E1746);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E1708, E1709, E1710, E1711, E1712} ->
									  fun (V8035, V8036, V8037, V8038, V8039) ->
										  fun (V8040) ->
											  begin
											    V8069 = begin V8068 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8041) -> fun (V8042) -> fun (V8043) -> fun (V8044) -> fun (V8045) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8043, V8044, V8045) end end end end end, fun (V8046) -> fun (V8047) -> fun (V8048) -> V8047 end end end, fun (V8049) -> fun (V8050) -> fun (V8051) -> fun (V8052) -> fun (V8053) -> begin V8054 = V8051(V8053), begin V8055 = V8052(V8053), V8054(V8055) end end end end end end end}, fun (V8056) -> fun (V8057) -> fun (V8058) -> fun (V8059) -> fun (V8060) -> begin V8061 = V8058(V8060), (V8059(V8061))(V8060) end end end end end end, fun (V8062) -> fun (V8063) -> fun (V8064) -> begin V8065 = V8063(V8064), V8065(V8064) end end end end}, fun (V8066) -> fun (V8067) -> V8067 end end}, V0))(V8040), {'Idris.Prelude.Right', V8068} end,
											    case V8069 of
											      {'Idris.Prelude.Left', E1713} -> fun (V8070) -> {'Idris.Prelude.Left', V8070} end(E1713);
											      {'Idris.Prelude.Right', E1714} ->
												  fun (V8071) ->
													  begin
													    V8076 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8072) -> fun (V8073) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8072, V8073) end end, fun (V8074) -> fun (V8075) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8074, V8075) end end}, V8036, V8040),
													    case V8076 of
													      {'Idris.Prelude.Left', E1715} -> fun (V8077) -> {'Idris.Prelude.Left', V8077} end(E1715);
													      {'Idris.Prelude.Right', E1716} ->
														  fun (V8078) ->
															  begin
															    V8079 = ('un--getNArgs'(V8071, V8078, V8039))(V8040),
															    case V8079 of
															      {'Idris.Prelude.Left', E1717} -> fun (V8080) -> {'Idris.Prelude.Left', V8080} end(E1717);
															      {'Idris.Prelude.Right', E1718} ->
																  fun (V8081) ->
																	  case V8081 of
																	    {'Idris.Compiler.CompileExpr.User', E1719, E1720} ->
																		fun (V8082, V8083) ->
																			begin
																			  V8085 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8084) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8071, V8084) end, V8083))(V8040),
																			  case V8085 of
																			    {'Idris.Prelude.Left', E1721} -> fun (V8086) -> {'Idris.Prelude.Left', V8086} end(E1721);
																			    {'Idris.Prelude.Right', E1722} ->
																				fun (V8087) ->
																					begin
																					  V8089 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8088) -> 'un--nfToCFType'(V0, V8035, V2, V8088) end, V8087))(V8040),
																					  case V8089 of
																					    {'Idris.Prelude.Left', E1723} -> fun (V8090) -> {'Idris.Prelude.Left', V8090} end(E1723);
																					    {'Idris.Prelude.Right', E1724} -> fun (V8091) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8078, V8091}} end(E1724);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1722);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1719, E1720);
																	    {'Idris.Compiler.CompileExpr.Struct', E1725, E1726} ->
																		fun (V8092, V8093) ->
																			begin
																			  V8104 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V8094) ->
																									    case V8094 of
																									      {'Idris.Builtin.MkPair', E1727, E1728} ->
																										  fun (V8095, V8096) ->
																											  fun (V8097) ->
																												  begin
																												    V8098 = ('Idris.Core.Normalise':'un--evalClosure'([], V8071, V8096))(V8097),
																												    case V8098 of
																												      {'Idris.Prelude.Left', E1729} -> fun (V8099) -> {'Idris.Prelude.Left', V8099} end(E1729);
																												      {'Idris.Prelude.Right', E1730} ->
																													  fun (V8100) ->
																														  begin
																														    V8101 = ('un--nfToCFType'(V0, V8035, 0, V8100))(V8097),
																														    case V8101 of
																														      {'Idris.Prelude.Left', E1731} -> fun (V8102) -> {'Idris.Prelude.Left', V8102} end(E1731);
																														      {'Idris.Prelude.Right', E1732} -> fun (V8103) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8095, V8103}} end(E1732);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E1730);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E1727, E1728);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V8093))(V8040),
																			  case V8104 of
																			    {'Idris.Prelude.Left', E1733} -> fun (V8105) -> {'Idris.Prelude.Left', V8105} end(E1733);
																			    {'Idris.Prelude.Right', E1734} -> fun (V8106) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8092, V8106}} end(E1734);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1725, E1726);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E1735} ->
																		fun (V8107) ->
																			begin
																			  V8108 = ('Idris.Core.Normalise':'un--evalClosure'([], V8071, V8107))(V8040),
																			  case V8108 of
																			    {'Idris.Prelude.Left', E1736} -> fun (V8109) -> {'Idris.Prelude.Left', V8109} end(E1736);
																			    {'Idris.Prelude.Right', E1737} ->
																				fun (V8110) ->
																					begin
																					  V8111 = ('un--nfToCFType'(V0, V8035, V2, V8110))(V8040),
																					  case V8111 of
																					    {'Idris.Prelude.Left', E1738} -> fun (V8112) -> {'Idris.Prelude.Left', V8112} end(E1738);
																					    {'Idris.Prelude.Right', E1739} -> fun (V8113) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8113}} end(E1739);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1737);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1735);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E1718);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E1716);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E1714);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E1708, E1709, E1710, E1711, E1712);
								      {'Idris.Core.Value.NType', E1740} -> fun (V8114) -> fun (V8115) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1740);
								      {'Idris.Core.Value.NErased', E1741, E1742} -> fun (V8116, V8117) -> fun (V8118) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1741, E1742);
								      _ ->
									  fun (V8119) ->
										  begin
										    V8148 = begin V8147 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8120) -> fun (V8121) -> fun (V8122) -> fun (V8123) -> fun (V8124) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8122, V8123, V8124) end end end end end, fun (V8125) -> fun (V8126) -> fun (V8127) -> V8126 end end end, fun (V8128) -> fun (V8129) -> fun (V8130) -> fun (V8131) -> fun (V8132) -> begin V8133 = V8130(V8132), begin V8134 = V8131(V8132), V8133(V8134) end end end end end end end}, fun (V8135) -> fun (V8136) -> fun (V8137) -> fun (V8138) -> fun (V8139) -> begin V8140 = V8137(V8139), (V8138(V8140))(V8139) end end end end end end, fun (V8141) -> fun (V8142) -> fun (V8143) -> begin V8144 = V8142(V8143), V8144(V8143) end end end end}, fun (V8145) -> fun (V8146) -> V8146 end end}, V0))(V8119), {'Idris.Prelude.Right', V8147} end,
										    case V8148 of
										      {'Idris.Prelude.Left', E1702} -> fun (V8149) -> {'Idris.Prelude.Left', V8149} end(E1702);
										      {'Idris.Prelude.Right', E1703} ->
											  fun (V8150) ->
												  begin
												    V8151 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8150, {'Idris.Core.Env.Nil'}, V3, V8119),
												    case V8151 of
												      {'Idris.Prelude.Left', E1704} -> fun (V8152) -> {'Idris.Prelude.Left', V8152} end(E1704);
												      {'Idris.Prelude.Right', E1705} ->
													  fun (V8153) ->
														  begin
														    V8158 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8154) -> fun (V8155) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8154, V8155) end end, fun (V8156) -> fun (V8157) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8156, V8157) end end}, V8153, V8119),
														    case V8158 of
														      {'Idris.Prelude.Left', E1706} -> fun (V8159) -> {'Idris.Prelude.Left', V8159} end(E1706);
														      {'Idris.Prelude.Right', E1707} -> fun (V8160) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8160))}, V8119) end(E1707);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1705);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E1703);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  0 ->
							      case V3 of
								{'Idris.Core.Value.NBind', E1840, E1841, E1842, E1843} -> fun (V8161, V8162, V8163, V8164) -> fun (V8165) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V8161, <<"Function types not allowed in a foreign struct"/utf8>>}, V8165) end end(E1840, E1841, E1842, E1843);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E1805, E1806, E1807, E1808, E1809} ->
									  fun (V8166, V8167, V8168, V8169, V8170) ->
										  fun (V8171) ->
											  begin
											    V8200 = begin V8199 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8172) -> fun (V8173) -> fun (V8174) -> fun (V8175) -> fun (V8176) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8174, V8175, V8176) end end end end end, fun (V8177) -> fun (V8178) -> fun (V8179) -> V8178 end end end, fun (V8180) -> fun (V8181) -> fun (V8182) -> fun (V8183) -> fun (V8184) -> begin V8185 = V8182(V8184), begin V8186 = V8183(V8184), V8185(V8186) end end end end end end end}, fun (V8187) -> fun (V8188) -> fun (V8189) -> fun (V8190) -> fun (V8191) -> begin V8192 = V8189(V8191), (V8190(V8192))(V8191) end end end end end end, fun (V8193) -> fun (V8194) -> fun (V8195) -> begin V8196 = V8194(V8195), V8196(V8195) end end end end}, fun (V8197) -> fun (V8198) -> V8198 end end}, V0))(V8171), {'Idris.Prelude.Right', V8199} end,
											    case V8200 of
											      {'Idris.Prelude.Left', E1810} -> fun (V8201) -> {'Idris.Prelude.Left', V8201} end(E1810);
											      {'Idris.Prelude.Right', E1811} ->
												  fun (V8202) ->
													  begin
													    V8207 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8203) -> fun (V8204) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8203, V8204) end end, fun (V8205) -> fun (V8206) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8205, V8206) end end}, V8167, V8171),
													    case V8207 of
													      {'Idris.Prelude.Left', E1812} -> fun (V8208) -> {'Idris.Prelude.Left', V8208} end(E1812);
													      {'Idris.Prelude.Right', E1813} ->
														  fun (V8209) ->
															  begin
															    V8210 = ('un--getNArgs'(V8202, V8209, V8170))(V8171),
															    case V8210 of
															      {'Idris.Prelude.Left', E1814} -> fun (V8211) -> {'Idris.Prelude.Left', V8211} end(E1814);
															      {'Idris.Prelude.Right', E1815} ->
																  fun (V8212) ->
																	  case V8212 of
																	    {'Idris.Compiler.CompileExpr.User', E1816, E1817} ->
																		fun (V8213, V8214) ->
																			begin
																			  V8216 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8215) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8202, V8215) end, V8214))(V8171),
																			  case V8216 of
																			    {'Idris.Prelude.Left', E1818} -> fun (V8217) -> {'Idris.Prelude.Left', V8217} end(E1818);
																			    {'Idris.Prelude.Right', E1819} ->
																				fun (V8218) ->
																					begin
																					  V8220 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8219) -> 'un--nfToCFType'(V0, V8166, V2, V8219) end, V8218))(V8171),
																					  case V8220 of
																					    {'Idris.Prelude.Left', E1820} -> fun (V8221) -> {'Idris.Prelude.Left', V8221} end(E1820);
																					    {'Idris.Prelude.Right', E1821} -> fun (V8222) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8209, V8222}} end(E1821);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1819);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1816, E1817);
																	    {'Idris.Compiler.CompileExpr.Struct', E1822, E1823} ->
																		fun (V8223, V8224) ->
																			begin
																			  V8235 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V8225) ->
																									    case V8225 of
																									      {'Idris.Builtin.MkPair', E1824, E1825} ->
																										  fun (V8226, V8227) ->
																											  fun (V8228) ->
																												  begin
																												    V8229 = ('Idris.Core.Normalise':'un--evalClosure'([], V8202, V8227))(V8228),
																												    case V8229 of
																												      {'Idris.Prelude.Left', E1826} -> fun (V8230) -> {'Idris.Prelude.Left', V8230} end(E1826);
																												      {'Idris.Prelude.Right', E1827} ->
																													  fun (V8231) ->
																														  begin
																														    V8232 = ('un--nfToCFType'(V0, V8166, 0, V8231))(V8228),
																														    case V8232 of
																														      {'Idris.Prelude.Left', E1828} -> fun (V8233) -> {'Idris.Prelude.Left', V8233} end(E1828);
																														      {'Idris.Prelude.Right', E1829} -> fun (V8234) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8226, V8234}} end(E1829);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E1827);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E1824, E1825);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V8224))(V8171),
																			  case V8235 of
																			    {'Idris.Prelude.Left', E1830} -> fun (V8236) -> {'Idris.Prelude.Left', V8236} end(E1830);
																			    {'Idris.Prelude.Right', E1831} -> fun (V8237) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8223, V8237}} end(E1831);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1822, E1823);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E1832} ->
																		fun (V8238) ->
																			begin
																			  V8239 = ('Idris.Core.Normalise':'un--evalClosure'([], V8202, V8238))(V8171),
																			  case V8239 of
																			    {'Idris.Prelude.Left', E1833} -> fun (V8240) -> {'Idris.Prelude.Left', V8240} end(E1833);
																			    {'Idris.Prelude.Right', E1834} ->
																				fun (V8241) ->
																					begin
																					  V8242 = ('un--nfToCFType'(V0, V8166, V2, V8241))(V8171),
																					  case V8242 of
																					    {'Idris.Prelude.Left', E1835} -> fun (V8243) -> {'Idris.Prelude.Left', V8243} end(E1835);
																					    {'Idris.Prelude.Right', E1836} -> fun (V8244) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8244}} end(E1836);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1834);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1832);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E1815);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E1813);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E1811);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E1805, E1806, E1807, E1808, E1809);
								      {'Idris.Core.Value.NType', E1837} -> fun (V8245) -> fun (V8246) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1837);
								      {'Idris.Core.Value.NErased', E1838, E1839} -> fun (V8247, V8248) -> fun (V8249) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1838, E1839);
								      _ ->
									  fun (V8250) ->
										  begin
										    V8279 = begin V8278 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8251) -> fun (V8252) -> fun (V8253) -> fun (V8254) -> fun (V8255) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8253, V8254, V8255) end end end end end, fun (V8256) -> fun (V8257) -> fun (V8258) -> V8257 end end end, fun (V8259) -> fun (V8260) -> fun (V8261) -> fun (V8262) -> fun (V8263) -> begin V8264 = V8261(V8263), begin V8265 = V8262(V8263), V8264(V8265) end end end end end end end}, fun (V8266) -> fun (V8267) -> fun (V8268) -> fun (V8269) -> fun (V8270) -> begin V8271 = V8268(V8270), (V8269(V8271))(V8270) end end end end end end, fun (V8272) -> fun (V8273) -> fun (V8274) -> begin V8275 = V8273(V8274), V8275(V8274) end end end end}, fun (V8276) -> fun (V8277) -> V8277 end end}, V0))(V8250), {'Idris.Prelude.Right', V8278} end,
										    case V8279 of
										      {'Idris.Prelude.Left', E1799} -> fun (V8280) -> {'Idris.Prelude.Left', V8280} end(E1799);
										      {'Idris.Prelude.Right', E1800} ->
											  fun (V8281) ->
												  begin
												    V8282 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8281, {'Idris.Core.Env.Nil'}, V3, V8250),
												    case V8282 of
												      {'Idris.Prelude.Left', E1801} -> fun (V8283) -> {'Idris.Prelude.Left', V8283} end(E1801);
												      {'Idris.Prelude.Right', E1802} ->
													  fun (V8284) ->
														  begin
														    V8289 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8285) -> fun (V8286) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8285, V8286) end end, fun (V8287) -> fun (V8288) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8287, V8288) end end}, V8284, V8250),
														    case V8289 of
														      {'Idris.Prelude.Left', E1803} -> fun (V8290) -> {'Idris.Prelude.Left', V8290} end(E1803);
														      {'Idris.Prelude.Right', E1804} -> fun (V8291) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8291))}, V8250) end(E1804);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1802);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E1800);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end;
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E1667, E1668, E1669, E1670, E1671} ->
								    fun (V8292, V8293, V8294, V8295, V8296) ->
									    fun (V8297) ->
										    begin
										      V8326 = begin V8325 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8298) -> fun (V8299) -> fun (V8300) -> fun (V8301) -> fun (V8302) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8300, V8301, V8302) end end end end end, fun (V8303) -> fun (V8304) -> fun (V8305) -> V8304 end end end, fun (V8306) -> fun (V8307) -> fun (V8308) -> fun (V8309) -> fun (V8310) -> begin V8311 = V8308(V8310), begin V8312 = V8309(V8310), V8311(V8312) end end end end end end end}, fun (V8313) -> fun (V8314) -> fun (V8315) -> fun (V8316) -> fun (V8317) -> begin V8318 = V8315(V8317), (V8316(V8318))(V8317) end end end end end end, fun (V8319) -> fun (V8320) -> fun (V8321) -> begin V8322 = V8320(V8321), V8322(V8321) end end end end}, fun (V8323) -> fun (V8324) -> V8324 end end}, V0))(V8297), {'Idris.Prelude.Right', V8325} end,
										      case V8326 of
											{'Idris.Prelude.Left', E1672} -> fun (V8327) -> {'Idris.Prelude.Left', V8327} end(E1672);
											{'Idris.Prelude.Right', E1673} ->
											    fun (V8328) ->
												    begin
												      V8333 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8329) -> fun (V8330) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8329, V8330) end end, fun (V8331) -> fun (V8332) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8331, V8332) end end}, V8293, V8297),
												      case V8333 of
													{'Idris.Prelude.Left', E1674} -> fun (V8334) -> {'Idris.Prelude.Left', V8334} end(E1674);
													{'Idris.Prelude.Right', E1675} ->
													    fun (V8335) ->
														    begin
														      V8336 = ('un--getNArgs'(V8328, V8335, V8296))(V8297),
														      case V8336 of
															{'Idris.Prelude.Left', E1676} -> fun (V8337) -> {'Idris.Prelude.Left', V8337} end(E1676);
															{'Idris.Prelude.Right', E1677} ->
															    fun (V8338) ->
																    case V8338 of
																      {'Idris.Compiler.CompileExpr.User', E1678, E1679} ->
																	  fun (V8339, V8340) ->
																		  begin
																		    V8342 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8341) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8328, V8341) end, V8340))(V8297),
																		    case V8342 of
																		      {'Idris.Prelude.Left', E1680} -> fun (V8343) -> {'Idris.Prelude.Left', V8343} end(E1680);
																		      {'Idris.Prelude.Right', E1681} ->
																			  fun (V8344) ->
																				  begin
																				    V8346 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8345) -> 'un--nfToCFType'(V0, V8292, V2, V8345) end, V8344))(V8297),
																				    case V8346 of
																				      {'Idris.Prelude.Left', E1682} -> fun (V8347) -> {'Idris.Prelude.Left', V8347} end(E1682);
																				      {'Idris.Prelude.Right', E1683} -> fun (V8348) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8335, V8348}} end(E1683);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E1681);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1678, E1679);
																      {'Idris.Compiler.CompileExpr.Struct', E1684, E1685} ->
																	  fun (V8349, V8350) ->
																		  begin
																		    V8361 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							      fun (V8351) ->
																								      case V8351 of
																									{'Idris.Builtin.MkPair', E1686, E1687} ->
																									    fun (V8352, V8353) ->
																										    fun (V8354) ->
																											    begin
																											      V8355 = ('Idris.Core.Normalise':'un--evalClosure'([], V8328, V8353))(V8354),
																											      case V8355 of
																												{'Idris.Prelude.Left', E1688} -> fun (V8356) -> {'Idris.Prelude.Left', V8356} end(E1688);
																												{'Idris.Prelude.Right', E1689} ->
																												    fun (V8357) ->
																													    begin
																													      V8358 = ('un--nfToCFType'(V0, V8292, 0, V8357))(V8354),
																													      case V8358 of
																														{'Idris.Prelude.Left', E1690} -> fun (V8359) -> {'Idris.Prelude.Left', V8359} end(E1690);
																														{'Idris.Prelude.Right', E1691} -> fun (V8360) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8352, V8360}} end(E1691);
																														_ -> erlang:throw("Error: Unreachable branch")
																													      end
																													    end
																												    end(E1689);
																												_ -> erlang:throw("Error: Unreachable branch")
																											      end
																											    end
																										    end
																									    end(E1686, E1687);
																									_ -> erlang:throw("Error: Unreachable branch")
																								      end
																							      end,
																							      V8350))(V8297),
																		    case V8361 of
																		      {'Idris.Prelude.Left', E1692} -> fun (V8362) -> {'Idris.Prelude.Left', V8362} end(E1692);
																		      {'Idris.Prelude.Right', E1693} -> fun (V8363) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8349, V8363}} end(E1693);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1684, E1685);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E1694} ->
																	  fun (V8364) ->
																		  begin
																		    V8365 = ('Idris.Core.Normalise':'un--evalClosure'([], V8328, V8364))(V8297),
																		    case V8365 of
																		      {'Idris.Prelude.Left', E1695} -> fun (V8366) -> {'Idris.Prelude.Left', V8366} end(E1695);
																		      {'Idris.Prelude.Right', E1696} ->
																			  fun (V8367) ->
																				  begin
																				    V8368 = ('un--nfToCFType'(V0, V8292, V2, V8367))(V8297),
																				    case V8368 of
																				      {'Idris.Prelude.Left', E1697} -> fun (V8369) -> {'Idris.Prelude.Left', V8369} end(E1697);
																				      {'Idris.Prelude.Right', E1698} -> fun (V8370) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8370}} end(E1698);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E1696);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E1694);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E1677);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E1675);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1673);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E1667, E1668, E1669, E1670, E1671);
								{'Idris.Core.Value.NType', E1699} -> fun (V8371) -> fun (V8372) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1699);
								{'Idris.Core.Value.NErased', E1700, E1701} -> fun (V8373, V8374) -> fun (V8375) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1700, E1701);
								_ ->
								    fun (V8376) ->
									    begin
									      V8405 = begin V8404 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8377) -> fun (V8378) -> fun (V8379) -> fun (V8380) -> fun (V8381) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8379, V8380, V8381) end end end end end, fun (V8382) -> fun (V8383) -> fun (V8384) -> V8383 end end end, fun (V8385) -> fun (V8386) -> fun (V8387) -> fun (V8388) -> fun (V8389) -> begin V8390 = V8387(V8389), begin V8391 = V8388(V8389), V8390(V8391) end end end end end end end}, fun (V8392) -> fun (V8393) -> fun (V8394) -> fun (V8395) -> fun (V8396) -> begin V8397 = V8394(V8396), (V8395(V8397))(V8396) end end end end end end, fun (V8398) -> fun (V8399) -> fun (V8400) -> begin V8401 = V8399(V8400), V8401(V8400) end end end end}, fun (V8402) -> fun (V8403) -> V8403 end end}, V0))(V8376), {'Idris.Prelude.Right', V8404} end,
									      case V8405 of
										{'Idris.Prelude.Left', E1661} -> fun (V8406) -> {'Idris.Prelude.Left', V8406} end(E1661);
										{'Idris.Prelude.Right', E1662} ->
										    fun (V8407) ->
											    begin
											      V8408 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8407, {'Idris.Core.Env.Nil'}, V3, V8376),
											      case V8408 of
												{'Idris.Prelude.Left', E1663} -> fun (V8409) -> {'Idris.Prelude.Left', V8409} end(E1663);
												{'Idris.Prelude.Right', E1664} ->
												    fun (V8410) ->
													    begin
													      V8415 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8411) -> fun (V8412) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8411, V8412) end end, fun (V8413) -> fun (V8414) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8413, V8414) end end}, V8410, V8376),
													      case V8415 of
														{'Idris.Prelude.Left', E1665} -> fun (V8416) -> {'Idris.Prelude.Left', V8416} end(E1665);
														{'Idris.Prelude.Right', E1666} -> fun (V8417) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8417))}, V8376) end(E1666);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1664);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1662);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						  end
					  end(E1659, E1660);
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E1558, E1559, E1560, E1561} ->
						      fun (V8418, V8419, V8420, V8421) ->
							      case V8420 of
								{'Idris.Core.TT.Pi', E1603, E1604, E1605} ->
								    fun (V8422, V8423, V8424) ->
									    fun (V8425) ->
										    begin
										      V8454 = begin V8453 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8426) -> fun (V8427) -> fun (V8428) -> fun (V8429) -> fun (V8430) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8428, V8429, V8430) end end end end end, fun (V8431) -> fun (V8432) -> fun (V8433) -> V8432 end end end, fun (V8434) -> fun (V8435) -> fun (V8436) -> fun (V8437) -> fun (V8438) -> begin V8439 = V8436(V8438), begin V8440 = V8437(V8438), V8439(V8440) end end end end end end end}, fun (V8441) -> fun (V8442) -> fun (V8443) -> fun (V8444) -> fun (V8445) -> begin V8446 = V8443(V8445), (V8444(V8446))(V8445) end end end end end end, fun (V8447) -> fun (V8448) -> fun (V8449) -> begin V8450 = V8448(V8449), V8450(V8449) end end end end}, fun (V8451) -> fun (V8452) -> V8452 end end}, V0))(V8425), {'Idris.Prelude.Right', V8453} end,
										      case V8454 of
											{'Idris.Prelude.Left', E1606} -> fun (V8455) -> {'Idris.Prelude.Left', V8455} end(E1606);
											{'Idris.Prelude.Right', E1607} ->
											    fun (V8456) ->
												    begin
												      V8457 = ('un--nfToCFType'(V0, V8418, 1, V8424))(V8425),
												      case V8457 of
													{'Idris.Prelude.Left', E1608} -> fun (V8458) -> {'Idris.Prelude.Left', V8458} end(E1608);
													{'Idris.Prelude.Right', E1609} ->
													    fun (V8459) ->
														    begin
														      V8460 = ((V8421(V8456))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V8418, 1})))(V8425),
														      case V8460 of
															{'Idris.Prelude.Left', E1610} -> fun (V8461) -> {'Idris.Prelude.Left', V8461} end(E1610);
															{'Idris.Prelude.Right', E1611} ->
															    fun (V8462) ->
																    begin
																      V8463 = ('un--nfToCFType'(V0, V8418, 1, V8462))(V8425),
																      case V8463 of
																	{'Idris.Prelude.Left', E1612} -> fun (V8464) -> {'Idris.Prelude.Left', V8464} end(E1612);
																	{'Idris.Prelude.Right', E1613} -> fun (V8465) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V8459, V8465}} end(E1613);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1611);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E1609);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1607);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E1603, E1604, E1605);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E1568, E1569, E1570, E1571, E1572} ->
									  fun (V8466, V8467, V8468, V8469, V8470) ->
										  fun (V8471) ->
											  begin
											    V8500 = begin V8499 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8472) -> fun (V8473) -> fun (V8474) -> fun (V8475) -> fun (V8476) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8474, V8475, V8476) end end end end end, fun (V8477) -> fun (V8478) -> fun (V8479) -> V8478 end end end, fun (V8480) -> fun (V8481) -> fun (V8482) -> fun (V8483) -> fun (V8484) -> begin V8485 = V8482(V8484), begin V8486 = V8483(V8484), V8485(V8486) end end end end end end end}, fun (V8487) -> fun (V8488) -> fun (V8489) -> fun (V8490) -> fun (V8491) -> begin V8492 = V8489(V8491), (V8490(V8492))(V8491) end end end end end end, fun (V8493) -> fun (V8494) -> fun (V8495) -> begin V8496 = V8494(V8495), V8496(V8495) end end end end}, fun (V8497) -> fun (V8498) -> V8498 end end}, V0))(V8471), {'Idris.Prelude.Right', V8499} end,
											    case V8500 of
											      {'Idris.Prelude.Left', E1573} -> fun (V8501) -> {'Idris.Prelude.Left', V8501} end(E1573);
											      {'Idris.Prelude.Right', E1574} ->
												  fun (V8502) ->
													  begin
													    V8507 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8503) -> fun (V8504) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8503, V8504) end end, fun (V8505) -> fun (V8506) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8505, V8506) end end}, V8467, V8471),
													    case V8507 of
													      {'Idris.Prelude.Left', E1575} -> fun (V8508) -> {'Idris.Prelude.Left', V8508} end(E1575);
													      {'Idris.Prelude.Right', E1576} ->
														  fun (V8509) ->
															  begin
															    V8510 = ('un--getNArgs'(V8502, V8509, V8470))(V8471),
															    case V8510 of
															      {'Idris.Prelude.Left', E1577} -> fun (V8511) -> {'Idris.Prelude.Left', V8511} end(E1577);
															      {'Idris.Prelude.Right', E1578} ->
																  fun (V8512) ->
																	  case V8512 of
																	    {'Idris.Compiler.CompileExpr.User', E1579, E1580} ->
																		fun (V8513, V8514) ->
																			begin
																			  V8516 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8515) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8502, V8515) end, V8514))(V8471),
																			  case V8516 of
																			    {'Idris.Prelude.Left', E1581} -> fun (V8517) -> {'Idris.Prelude.Left', V8517} end(E1581);
																			    {'Idris.Prelude.Right', E1582} ->
																				fun (V8518) ->
																					begin
																					  V8520 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8519) -> 'un--nfToCFType'(V0, V8466, V2, V8519) end, V8518))(V8471),
																					  case V8520 of
																					    {'Idris.Prelude.Left', E1583} -> fun (V8521) -> {'Idris.Prelude.Left', V8521} end(E1583);
																					    {'Idris.Prelude.Right', E1584} -> fun (V8522) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8509, V8522}} end(E1584);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1582);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1579, E1580);
																	    {'Idris.Compiler.CompileExpr.Struct', E1585, E1586} ->
																		fun (V8523, V8524) ->
																			begin
																			  V8535 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V8525) ->
																									    case V8525 of
																									      {'Idris.Builtin.MkPair', E1587, E1588} ->
																										  fun (V8526, V8527) ->
																											  fun (V8528) ->
																												  begin
																												    V8529 = ('Idris.Core.Normalise':'un--evalClosure'([], V8502, V8527))(V8528),
																												    case V8529 of
																												      {'Idris.Prelude.Left', E1589} -> fun (V8530) -> {'Idris.Prelude.Left', V8530} end(E1589);
																												      {'Idris.Prelude.Right', E1590} ->
																													  fun (V8531) ->
																														  begin
																														    V8532 = ('un--nfToCFType'(V0, V8466, 0, V8531))(V8528),
																														    case V8532 of
																														      {'Idris.Prelude.Left', E1591} -> fun (V8533) -> {'Idris.Prelude.Left', V8533} end(E1591);
																														      {'Idris.Prelude.Right', E1592} -> fun (V8534) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8526, V8534}} end(E1592);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E1590);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E1587, E1588);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V8524))(V8471),
																			  case V8535 of
																			    {'Idris.Prelude.Left', E1593} -> fun (V8536) -> {'Idris.Prelude.Left', V8536} end(E1593);
																			    {'Idris.Prelude.Right', E1594} -> fun (V8537) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8523, V8537}} end(E1594);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1585, E1586);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E1595} ->
																		fun (V8538) ->
																			begin
																			  V8539 = ('Idris.Core.Normalise':'un--evalClosure'([], V8502, V8538))(V8471),
																			  case V8539 of
																			    {'Idris.Prelude.Left', E1596} -> fun (V8540) -> {'Idris.Prelude.Left', V8540} end(E1596);
																			    {'Idris.Prelude.Right', E1597} ->
																				fun (V8541) ->
																					begin
																					  V8542 = ('un--nfToCFType'(V0, V8466, V2, V8541))(V8471),
																					  case V8542 of
																					    {'Idris.Prelude.Left', E1598} -> fun (V8543) -> {'Idris.Prelude.Left', V8543} end(E1598);
																					    {'Idris.Prelude.Right', E1599} -> fun (V8544) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8544}} end(E1599);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1597);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1595);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E1578);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E1576);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E1574);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E1568, E1569, E1570, E1571, E1572);
								      {'Idris.Core.Value.NType', E1600} -> fun (V8545) -> fun (V8546) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1600);
								      {'Idris.Core.Value.NErased', E1601, E1602} -> fun (V8547, V8548) -> fun (V8549) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1601, E1602);
								      _ ->
									  fun (V8550) ->
										  begin
										    V8579 = begin V8578 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8551) -> fun (V8552) -> fun (V8553) -> fun (V8554) -> fun (V8555) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8553, V8554, V8555) end end end end end, fun (V8556) -> fun (V8557) -> fun (V8558) -> V8557 end end end, fun (V8559) -> fun (V8560) -> fun (V8561) -> fun (V8562) -> fun (V8563) -> begin V8564 = V8561(V8563), begin V8565 = V8562(V8563), V8564(V8565) end end end end end end end}, fun (V8566) -> fun (V8567) -> fun (V8568) -> fun (V8569) -> fun (V8570) -> begin V8571 = V8568(V8570), (V8569(V8571))(V8570) end end end end end end, fun (V8572) -> fun (V8573) -> fun (V8574) -> begin V8575 = V8573(V8574), V8575(V8574) end end end end}, fun (V8576) -> fun (V8577) -> V8577 end end}, V0))(V8550), {'Idris.Prelude.Right', V8578} end,
										    case V8579 of
										      {'Idris.Prelude.Left', E1562} -> fun (V8580) -> {'Idris.Prelude.Left', V8580} end(E1562);
										      {'Idris.Prelude.Right', E1563} ->
											  fun (V8581) ->
												  begin
												    V8582 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8581, {'Idris.Core.Env.Nil'}, V3, V8550),
												    case V8582 of
												      {'Idris.Prelude.Left', E1564} -> fun (V8583) -> {'Idris.Prelude.Left', V8583} end(E1564);
												      {'Idris.Prelude.Right', E1565} ->
													  fun (V8584) ->
														  begin
														    V8589 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8585) -> fun (V8586) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8585, V8586) end end, fun (V8587) -> fun (V8588) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8587, V8588) end end}, V8584, V8550),
														    case V8589 of
														      {'Idris.Prelude.Left', E1566} -> fun (V8590) -> {'Idris.Prelude.Left', V8590} end(E1566);
														      {'Idris.Prelude.Right', E1567} -> fun (V8591) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8591))}, V8550) end(E1567);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1565);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E1563);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E1558, E1559, E1560, E1561);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E1523, E1524, E1525, E1526, E1527} ->
							    fun (V8592, V8593, V8594, V8595, V8596) ->
								    fun (V8597) ->
									    begin
									      V8626 = begin V8625 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8598) -> fun (V8599) -> fun (V8600) -> fun (V8601) -> fun (V8602) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8600, V8601, V8602) end end end end end, fun (V8603) -> fun (V8604) -> fun (V8605) -> V8604 end end end, fun (V8606) -> fun (V8607) -> fun (V8608) -> fun (V8609) -> fun (V8610) -> begin V8611 = V8608(V8610), begin V8612 = V8609(V8610), V8611(V8612) end end end end end end end}, fun (V8613) -> fun (V8614) -> fun (V8615) -> fun (V8616) -> fun (V8617) -> begin V8618 = V8615(V8617), (V8616(V8618))(V8617) end end end end end end, fun (V8619) -> fun (V8620) -> fun (V8621) -> begin V8622 = V8620(V8621), V8622(V8621) end end end end}, fun (V8623) -> fun (V8624) -> V8624 end end}, V0))(V8597), {'Idris.Prelude.Right', V8625} end,
									      case V8626 of
										{'Idris.Prelude.Left', E1528} -> fun (V8627) -> {'Idris.Prelude.Left', V8627} end(E1528);
										{'Idris.Prelude.Right', E1529} ->
										    fun (V8628) ->
											    begin
											      V8633 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8629) -> fun (V8630) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8629, V8630) end end, fun (V8631) -> fun (V8632) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8631, V8632) end end}, V8593, V8597),
											      case V8633 of
												{'Idris.Prelude.Left', E1530} -> fun (V8634) -> {'Idris.Prelude.Left', V8634} end(E1530);
												{'Idris.Prelude.Right', E1531} ->
												    fun (V8635) ->
													    begin
													      V8636 = ('un--getNArgs'(V8628, V8635, V8596))(V8597),
													      case V8636 of
														{'Idris.Prelude.Left', E1532} -> fun (V8637) -> {'Idris.Prelude.Left', V8637} end(E1532);
														{'Idris.Prelude.Right', E1533} ->
														    fun (V8638) ->
															    case V8638 of
															      {'Idris.Compiler.CompileExpr.User', E1534, E1535} ->
																  fun (V8639, V8640) ->
																	  begin
																	    V8642 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8641) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8628, V8641) end, V8640))(V8597),
																	    case V8642 of
																	      {'Idris.Prelude.Left', E1536} -> fun (V8643) -> {'Idris.Prelude.Left', V8643} end(E1536);
																	      {'Idris.Prelude.Right', E1537} ->
																		  fun (V8644) ->
																			  begin
																			    V8646 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8645) -> 'un--nfToCFType'(V0, V8592, V2, V8645) end, V8644))(V8597),
																			    case V8646 of
																			      {'Idris.Prelude.Left', E1538} -> fun (V8647) -> {'Idris.Prelude.Left', V8647} end(E1538);
																			      {'Idris.Prelude.Right', E1539} -> fun (V8648) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8635, V8648}} end(E1539);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1537);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1534, E1535);
															      {'Idris.Compiler.CompileExpr.Struct', E1540, E1541} ->
																  fun (V8649, V8650) ->
																	  begin
																	    V8661 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V8651) ->
																							      case V8651 of
																								{'Idris.Builtin.MkPair', E1542, E1543} ->
																								    fun (V8652, V8653) ->
																									    fun (V8654) ->
																										    begin
																										      V8655 = ('Idris.Core.Normalise':'un--evalClosure'([], V8628, V8653))(V8654),
																										      case V8655 of
																											{'Idris.Prelude.Left', E1544} -> fun (V8656) -> {'Idris.Prelude.Left', V8656} end(E1544);
																											{'Idris.Prelude.Right', E1545} ->
																											    fun (V8657) ->
																												    begin
																												      V8658 = ('un--nfToCFType'(V0, V8592, 0, V8657))(V8654),
																												      case V8658 of
																													{'Idris.Prelude.Left', E1546} -> fun (V8659) -> {'Idris.Prelude.Left', V8659} end(E1546);
																													{'Idris.Prelude.Right', E1547} -> fun (V8660) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8652, V8660}} end(E1547);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E1545);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E1542, E1543);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V8650))(V8597),
																	    case V8661 of
																	      {'Idris.Prelude.Left', E1548} -> fun (V8662) -> {'Idris.Prelude.Left', V8662} end(E1548);
																	      {'Idris.Prelude.Right', E1549} -> fun (V8663) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8649, V8663}} end(E1549);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1540, E1541);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E1550} ->
																  fun (V8664) ->
																	  begin
																	    V8665 = ('Idris.Core.Normalise':'un--evalClosure'([], V8628, V8664))(V8597),
																	    case V8665 of
																	      {'Idris.Prelude.Left', E1551} -> fun (V8666) -> {'Idris.Prelude.Left', V8666} end(E1551);
																	      {'Idris.Prelude.Right', E1552} ->
																		  fun (V8667) ->
																			  begin
																			    V8668 = ('un--nfToCFType'(V0, V8592, V2, V8667))(V8597),
																			    case V8668 of
																			      {'Idris.Prelude.Left', E1553} -> fun (V8669) -> {'Idris.Prelude.Left', V8669} end(E1553);
																			      {'Idris.Prelude.Right', E1554} -> fun (V8670) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8670}} end(E1554);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1552);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1550);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E1533);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1531);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1529);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E1523, E1524, E1525, E1526, E1527);
							{'Idris.Core.Value.NType', E1555} -> fun (V8671) -> fun (V8672) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1555);
							{'Idris.Core.Value.NErased', E1556, E1557} -> fun (V8673, V8674) -> fun (V8675) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1556, E1557);
							_ ->
							    fun (V8676) ->
								    begin
								      V8705 = begin V8704 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8677) -> fun (V8678) -> fun (V8679) -> fun (V8680) -> fun (V8681) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8679, V8680, V8681) end end end end end, fun (V8682) -> fun (V8683) -> fun (V8684) -> V8683 end end end, fun (V8685) -> fun (V8686) -> fun (V8687) -> fun (V8688) -> fun (V8689) -> begin V8690 = V8687(V8689), begin V8691 = V8688(V8689), V8690(V8691) end end end end end end end}, fun (V8692) -> fun (V8693) -> fun (V8694) -> fun (V8695) -> fun (V8696) -> begin V8697 = V8694(V8696), (V8695(V8697))(V8696) end end end end end end, fun (V8698) -> fun (V8699) -> fun (V8700) -> begin V8701 = V8699(V8700), V8701(V8700) end end end end}, fun (V8702) -> fun (V8703) -> V8703 end end}, V0))(V8676), {'Idris.Prelude.Right', V8704} end,
								      case V8705 of
									{'Idris.Prelude.Left', E1517} -> fun (V8706) -> {'Idris.Prelude.Left', V8706} end(E1517);
									{'Idris.Prelude.Right', E1518} ->
									    fun (V8707) ->
										    begin
										      V8708 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8707, {'Idris.Core.Env.Nil'}, V3, V8676),
										      case V8708 of
											{'Idris.Prelude.Left', E1519} -> fun (V8709) -> {'Idris.Prelude.Left', V8709} end(E1519);
											{'Idris.Prelude.Right', E1520} ->
											    fun (V8710) ->
												    begin
												      V8715 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8711) -> fun (V8712) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8711, V8712) end end, fun (V8713) -> fun (V8714) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8713, V8714) end end}, V8710, V8676),
												      case V8715 of
													{'Idris.Prelude.Left', E1521} -> fun (V8716) -> {'Idris.Prelude.Left', V8716} end(E1521);
													{'Idris.Prelude.Right', E1522} -> fun (V8717) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8717))}, V8676) end(E1522);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1520);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E1518);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E1655, E1656, E1657, E1658} -> fun (V8718, V8719, V8720, V8721) -> fun (V8722) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V8718, <<"Function types not allowed in a foreign struct"/utf8>>}, V8722) end end(E1655, E1656, E1657, E1658);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E1620, E1621, E1622, E1623, E1624} ->
							    fun (V8723, V8724, V8725, V8726, V8727) ->
								    fun (V8728) ->
									    begin
									      V8757 = begin V8756 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8729) -> fun (V8730) -> fun (V8731) -> fun (V8732) -> fun (V8733) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8731, V8732, V8733) end end end end end, fun (V8734) -> fun (V8735) -> fun (V8736) -> V8735 end end end, fun (V8737) -> fun (V8738) -> fun (V8739) -> fun (V8740) -> fun (V8741) -> begin V8742 = V8739(V8741), begin V8743 = V8740(V8741), V8742(V8743) end end end end end end end}, fun (V8744) -> fun (V8745) -> fun (V8746) -> fun (V8747) -> fun (V8748) -> begin V8749 = V8746(V8748), (V8747(V8749))(V8748) end end end end end end, fun (V8750) -> fun (V8751) -> fun (V8752) -> begin V8753 = V8751(V8752), V8753(V8752) end end end end}, fun (V8754) -> fun (V8755) -> V8755 end end}, V0))(V8728), {'Idris.Prelude.Right', V8756} end,
									      case V8757 of
										{'Idris.Prelude.Left', E1625} -> fun (V8758) -> {'Idris.Prelude.Left', V8758} end(E1625);
										{'Idris.Prelude.Right', E1626} ->
										    fun (V8759) ->
											    begin
											      V8764 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8760) -> fun (V8761) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8760, V8761) end end, fun (V8762) -> fun (V8763) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8762, V8763) end end}, V8724, V8728),
											      case V8764 of
												{'Idris.Prelude.Left', E1627} -> fun (V8765) -> {'Idris.Prelude.Left', V8765} end(E1627);
												{'Idris.Prelude.Right', E1628} ->
												    fun (V8766) ->
													    begin
													      V8767 = ('un--getNArgs'(V8759, V8766, V8727))(V8728),
													      case V8767 of
														{'Idris.Prelude.Left', E1629} -> fun (V8768) -> {'Idris.Prelude.Left', V8768} end(E1629);
														{'Idris.Prelude.Right', E1630} ->
														    fun (V8769) ->
															    case V8769 of
															      {'Idris.Compiler.CompileExpr.User', E1631, E1632} ->
																  fun (V8770, V8771) ->
																	  begin
																	    V8773 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8772) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8759, V8772) end, V8771))(V8728),
																	    case V8773 of
																	      {'Idris.Prelude.Left', E1633} -> fun (V8774) -> {'Idris.Prelude.Left', V8774} end(E1633);
																	      {'Idris.Prelude.Right', E1634} ->
																		  fun (V8775) ->
																			  begin
																			    V8777 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8776) -> 'un--nfToCFType'(V0, V8723, V2, V8776) end, V8775))(V8728),
																			    case V8777 of
																			      {'Idris.Prelude.Left', E1635} -> fun (V8778) -> {'Idris.Prelude.Left', V8778} end(E1635);
																			      {'Idris.Prelude.Right', E1636} -> fun (V8779) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8766, V8779}} end(E1636);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1634);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1631, E1632);
															      {'Idris.Compiler.CompileExpr.Struct', E1637, E1638} ->
																  fun (V8780, V8781) ->
																	  begin
																	    V8792 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V8782) ->
																							      case V8782 of
																								{'Idris.Builtin.MkPair', E1639, E1640} ->
																								    fun (V8783, V8784) ->
																									    fun (V8785) ->
																										    begin
																										      V8786 = ('Idris.Core.Normalise':'un--evalClosure'([], V8759, V8784))(V8785),
																										      case V8786 of
																											{'Idris.Prelude.Left', E1641} -> fun (V8787) -> {'Idris.Prelude.Left', V8787} end(E1641);
																											{'Idris.Prelude.Right', E1642} ->
																											    fun (V8788) ->
																												    begin
																												      V8789 = ('un--nfToCFType'(V0, V8723, 0, V8788))(V8785),
																												      case V8789 of
																													{'Idris.Prelude.Left', E1643} -> fun (V8790) -> {'Idris.Prelude.Left', V8790} end(E1643);
																													{'Idris.Prelude.Right', E1644} -> fun (V8791) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8783, V8791}} end(E1644);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E1642);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E1639, E1640);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V8781))(V8728),
																	    case V8792 of
																	      {'Idris.Prelude.Left', E1645} -> fun (V8793) -> {'Idris.Prelude.Left', V8793} end(E1645);
																	      {'Idris.Prelude.Right', E1646} -> fun (V8794) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8780, V8794}} end(E1646);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1637, E1638);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E1647} ->
																  fun (V8795) ->
																	  begin
																	    V8796 = ('Idris.Core.Normalise':'un--evalClosure'([], V8759, V8795))(V8728),
																	    case V8796 of
																	      {'Idris.Prelude.Left', E1648} -> fun (V8797) -> {'Idris.Prelude.Left', V8797} end(E1648);
																	      {'Idris.Prelude.Right', E1649} ->
																		  fun (V8798) ->
																			  begin
																			    V8799 = ('un--nfToCFType'(V0, V8723, V2, V8798))(V8728),
																			    case V8799 of
																			      {'Idris.Prelude.Left', E1650} -> fun (V8800) -> {'Idris.Prelude.Left', V8800} end(E1650);
																			      {'Idris.Prelude.Right', E1651} -> fun (V8801) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8801}} end(E1651);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1649);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1647);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E1630);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1628);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1626);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E1620, E1621, E1622, E1623, E1624);
							{'Idris.Core.Value.NType', E1652} -> fun (V8802) -> fun (V8803) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1652);
							{'Idris.Core.Value.NErased', E1653, E1654} -> fun (V8804, V8805) -> fun (V8806) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1653, E1654);
							_ ->
							    fun (V8807) ->
								    begin
								      V8836 = begin V8835 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8808) -> fun (V8809) -> fun (V8810) -> fun (V8811) -> fun (V8812) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8810, V8811, V8812) end end end end end, fun (V8813) -> fun (V8814) -> fun (V8815) -> V8814 end end end, fun (V8816) -> fun (V8817) -> fun (V8818) -> fun (V8819) -> fun (V8820) -> begin V8821 = V8818(V8820), begin V8822 = V8819(V8820), V8821(V8822) end end end end end end end}, fun (V8823) -> fun (V8824) -> fun (V8825) -> fun (V8826) -> fun (V8827) -> begin V8828 = V8825(V8827), (V8826(V8828))(V8827) end end end end end end, fun (V8829) -> fun (V8830) -> fun (V8831) -> begin V8832 = V8830(V8831), V8832(V8831) end end end end}, fun (V8833) -> fun (V8834) -> V8834 end end}, V0))(V8807), {'Idris.Prelude.Right', V8835} end,
								      case V8836 of
									{'Idris.Prelude.Left', E1614} -> fun (V8837) -> {'Idris.Prelude.Left', V8837} end(E1614);
									{'Idris.Prelude.Right', E1615} ->
									    fun (V8838) ->
										    begin
										      V8839 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8838, {'Idris.Core.Env.Nil'}, V3, V8807),
										      case V8839 of
											{'Idris.Prelude.Left', E1616} -> fun (V8840) -> {'Idris.Prelude.Left', V8840} end(E1616);
											{'Idris.Prelude.Right', E1617} ->
											    fun (V8841) ->
												    begin
												      V8846 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8842) -> fun (V8843) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8842, V8843) end end, fun (V8844) -> fun (V8845) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8844, V8845) end end}, V8841, V8807),
												      case V8846 of
													{'Idris.Prelude.Left', E1618} -> fun (V8847) -> {'Idris.Prelude.Left', V8847} end(E1618);
													{'Idris.Prelude.Right', E1619} -> fun (V8848) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8848))}, V8807) end(E1619);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1617);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E1615);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E1482, E1483, E1484, E1485, E1486} ->
						      fun (V8849, V8850, V8851, V8852, V8853) ->
							      fun (V8854) ->
								      begin
									V8883 = begin V8882 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8855) -> fun (V8856) -> fun (V8857) -> fun (V8858) -> fun (V8859) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8857, V8858, V8859) end end end end end, fun (V8860) -> fun (V8861) -> fun (V8862) -> V8861 end end end, fun (V8863) -> fun (V8864) -> fun (V8865) -> fun (V8866) -> fun (V8867) -> begin V8868 = V8865(V8867), begin V8869 = V8866(V8867), V8868(V8869) end end end end end end end}, fun (V8870) -> fun (V8871) -> fun (V8872) -> fun (V8873) -> fun (V8874) -> begin V8875 = V8872(V8874), (V8873(V8875))(V8874) end end end end end end, fun (V8876) -> fun (V8877) -> fun (V8878) -> begin V8879 = V8877(V8878), V8879(V8878) end end end end}, fun (V8880) -> fun (V8881) -> V8881 end end}, V0))(V8854), {'Idris.Prelude.Right', V8882} end,
									case V8883 of
									  {'Idris.Prelude.Left', E1487} -> fun (V8884) -> {'Idris.Prelude.Left', V8884} end(E1487);
									  {'Idris.Prelude.Right', E1488} ->
									      fun (V8885) ->
										      begin
											V8890 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8886) -> fun (V8887) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V8886, V8887) end end, fun (V8888) -> fun (V8889) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V8888, V8889) end end}, V8850, V8854),
											case V8890 of
											  {'Idris.Prelude.Left', E1489} -> fun (V8891) -> {'Idris.Prelude.Left', V8891} end(E1489);
											  {'Idris.Prelude.Right', E1490} ->
											      fun (V8892) ->
												      begin
													V8893 = ('un--getNArgs'(V8885, V8892, V8853))(V8854),
													case V8893 of
													  {'Idris.Prelude.Left', E1491} -> fun (V8894) -> {'Idris.Prelude.Left', V8894} end(E1491);
													  {'Idris.Prelude.Right', E1492} ->
													      fun (V8895) ->
														      case V8895 of
															{'Idris.Compiler.CompileExpr.User', E1493, E1494} ->
															    fun (V8896, V8897) ->
																    begin
																      V8899 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8898) -> 'Idris.Core.Normalise':'un--evalClosure'([], V8885, V8898) end, V8897))(V8854),
																      case V8899 of
																	{'Idris.Prelude.Left', E1495} -> fun (V8900) -> {'Idris.Prelude.Left', V8900} end(E1495);
																	{'Idris.Prelude.Right', E1496} ->
																	    fun (V8901) ->
																		    begin
																		      V8903 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V8902) -> 'un--nfToCFType'(V0, V8849, V2, V8902) end, V8901))(V8854),
																		      case V8903 of
																			{'Idris.Prelude.Left', E1497} -> fun (V8904) -> {'Idris.Prelude.Left', V8904} end(E1497);
																			{'Idris.Prelude.Right', E1498} -> fun (V8905) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V8892, V8905}} end(E1498);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1496);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1493, E1494);
															{'Idris.Compiler.CompileExpr.Struct', E1499, E1500} ->
															    fun (V8906, V8907) ->
																    begin
																      V8918 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V8908) ->
																							case V8908 of
																							  {'Idris.Builtin.MkPair', E1501, E1502} ->
																							      fun (V8909, V8910) ->
																								      fun (V8911) ->
																									      begin
																										V8912 = ('Idris.Core.Normalise':'un--evalClosure'([], V8885, V8910))(V8911),
																										case V8912 of
																										  {'Idris.Prelude.Left', E1503} -> fun (V8913) -> {'Idris.Prelude.Left', V8913} end(E1503);
																										  {'Idris.Prelude.Right', E1504} ->
																										      fun (V8914) ->
																											      begin
																												V8915 = ('un--nfToCFType'(V0, V8849, 0, V8914))(V8911),
																												case V8915 of
																												  {'Idris.Prelude.Left', E1505} -> fun (V8916) -> {'Idris.Prelude.Left', V8916} end(E1505);
																												  {'Idris.Prelude.Right', E1506} -> fun (V8917) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V8909, V8917}} end(E1506);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E1504);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E1501, E1502);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V8907))(V8854),
																      case V8918 of
																	{'Idris.Prelude.Left', E1507} -> fun (V8919) -> {'Idris.Prelude.Left', V8919} end(E1507);
																	{'Idris.Prelude.Right', E1508} -> fun (V8920) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V8906, V8920}} end(E1508);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1499, E1500);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E1509} ->
															    fun (V8921) ->
																    begin
																      V8922 = ('Idris.Core.Normalise':'un--evalClosure'([], V8885, V8921))(V8854),
																      case V8922 of
																	{'Idris.Prelude.Left', E1510} -> fun (V8923) -> {'Idris.Prelude.Left', V8923} end(E1510);
																	{'Idris.Prelude.Right', E1511} ->
																	    fun (V8924) ->
																		    begin
																		      V8925 = ('un--nfToCFType'(V0, V8849, V2, V8924))(V8854),
																		      case V8925 of
																			{'Idris.Prelude.Left', E1512} -> fun (V8926) -> {'Idris.Prelude.Left', V8926} end(E1512);
																			{'Idris.Prelude.Right', E1513} -> fun (V8927) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V8927}} end(E1513);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1511);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1509);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E1492);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E1490);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1488);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E1482, E1483, E1484, E1485, E1486);
						  {'Idris.Core.Value.NType', E1514} -> fun (V8928) -> fun (V8929) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1514);
						  {'Idris.Core.Value.NErased', E1515, E1516} -> fun (V8930, V8931) -> fun (V8932) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1515, E1516);
						  _ ->
						      fun (V8933) ->
							      begin
								V8962 = begin V8961 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8934) -> fun (V8935) -> fun (V8936) -> fun (V8937) -> fun (V8938) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8936, V8937, V8938) end end end end end, fun (V8939) -> fun (V8940) -> fun (V8941) -> V8940 end end end, fun (V8942) -> fun (V8943) -> fun (V8944) -> fun (V8945) -> fun (V8946) -> begin V8947 = V8944(V8946), begin V8948 = V8945(V8946), V8947(V8948) end end end end end end end}, fun (V8949) -> fun (V8950) -> fun (V8951) -> fun (V8952) -> fun (V8953) -> begin V8954 = V8951(V8953), (V8952(V8954))(V8953) end end end end end end, fun (V8955) -> fun (V8956) -> fun (V8957) -> begin V8958 = V8956(V8957), V8958(V8957) end end end end}, fun (V8959) -> fun (V8960) -> V8960 end end}, V0))(V8933), {'Idris.Prelude.Right', V8961} end,
								case V8962 of
								  {'Idris.Prelude.Left', E1476} -> fun (V8963) -> {'Idris.Prelude.Left', V8963} end(E1476);
								  {'Idris.Prelude.Right', E1477} ->
								      fun (V8964) ->
									      begin
										V8965 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V8964, {'Idris.Core.Env.Nil'}, V3, V8933),
										case V8965 of
										  {'Idris.Prelude.Left', E1478} -> fun (V8966) -> {'Idris.Prelude.Left', V8966} end(E1478);
										  {'Idris.Prelude.Right', E1479} ->
										      fun (V8967) ->
											      begin
												V8972 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V8968) -> fun (V8969) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V8968, V8969) end end, fun (V8970) -> fun (V8971) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V8970, V8971) end end}, V8967, V8933),
												case V8972 of
												  {'Idris.Prelude.Left', E1480} -> fun (V8973) -> {'Idris.Prelude.Left', V8973} end(E1480);
												  {'Idris.Prelude.Right', E1481} -> fun (V8974) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V8974))}, V8933) end(E1481);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1479);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1477);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			      end
		      end(E1474, E1475);
		  _ ->
		      case V3 of
			{'Idris.Core.Value.NPrimVal', E1289, E1290} ->
			    fun (V8975, V8976) ->
				    case V8976 of
				      {'Idris.Core.TT.DoubleType'} -> fun () -> fun (V8977) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
				      {'Idris.Core.TT.CharType'} -> fun () -> fun (V8978) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
				      {'Idris.Core.TT.WorldType'} -> fun () -> fun (V8979) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
				      _ ->
					  case V2 of
					    1 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E1373, E1374, E1375, E1376} ->
						      fun (V8980, V8981, V8982, V8983) ->
							      case V8982 of
								{'Idris.Core.TT.Pi', E1418, E1419, E1420} ->
								    fun (V8984, V8985, V8986) ->
									    fun (V8987) ->
										    begin
										      V9016 = begin V9015 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V8988) -> fun (V8989) -> fun (V8990) -> fun (V8991) -> fun (V8992) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V8990, V8991, V8992) end end end end end, fun (V8993) -> fun (V8994) -> fun (V8995) -> V8994 end end end, fun (V8996) -> fun (V8997) -> fun (V8998) -> fun (V8999) -> fun (V9000) -> begin V9001 = V8998(V9000), begin V9002 = V8999(V9000), V9001(V9002) end end end end end end end}, fun (V9003) -> fun (V9004) -> fun (V9005) -> fun (V9006) -> fun (V9007) -> begin V9008 = V9005(V9007), (V9006(V9008))(V9007) end end end end end end, fun (V9009) -> fun (V9010) -> fun (V9011) -> begin V9012 = V9010(V9011), V9012(V9011) end end end end}, fun (V9013) -> fun (V9014) -> V9014 end end}, V0))(V8987), {'Idris.Prelude.Right', V9015} end,
										      case V9016 of
											{'Idris.Prelude.Left', E1421} -> fun (V9017) -> {'Idris.Prelude.Left', V9017} end(E1421);
											{'Idris.Prelude.Right', E1422} ->
											    fun (V9018) ->
												    begin
												      V9019 = ('un--nfToCFType'(V0, V8980, 1, V8986))(V8987),
												      case V9019 of
													{'Idris.Prelude.Left', E1423} -> fun (V9020) -> {'Idris.Prelude.Left', V9020} end(E1423);
													{'Idris.Prelude.Right', E1424} ->
													    fun (V9021) ->
														    begin
														      V9022 = ((V8983(V9018))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V8980, 1})))(V8987),
														      case V9022 of
															{'Idris.Prelude.Left', E1425} -> fun (V9023) -> {'Idris.Prelude.Left', V9023} end(E1425);
															{'Idris.Prelude.Right', E1426} ->
															    fun (V9024) ->
																    begin
																      V9025 = ('un--nfToCFType'(V0, V8980, 1, V9024))(V8987),
																      case V9025 of
																	{'Idris.Prelude.Left', E1427} -> fun (V9026) -> {'Idris.Prelude.Left', V9026} end(E1427);
																	{'Idris.Prelude.Right', E1428} -> fun (V9027) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V9021, V9027}} end(E1428);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1426);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E1424);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1422);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E1418, E1419, E1420);
								_ ->
								    case V3 of
								      {'Idris.Core.Value.NTCon', E1383, E1384, E1385, E1386, E1387} ->
									  fun (V9028, V9029, V9030, V9031, V9032) ->
										  fun (V9033) ->
											  begin
											    V9062 = begin V9061 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9034) -> fun (V9035) -> fun (V9036) -> fun (V9037) -> fun (V9038) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9036, V9037, V9038) end end end end end, fun (V9039) -> fun (V9040) -> fun (V9041) -> V9040 end end end, fun (V9042) -> fun (V9043) -> fun (V9044) -> fun (V9045) -> fun (V9046) -> begin V9047 = V9044(V9046), begin V9048 = V9045(V9046), V9047(V9048) end end end end end end end}, fun (V9049) -> fun (V9050) -> fun (V9051) -> fun (V9052) -> fun (V9053) -> begin V9054 = V9051(V9053), (V9052(V9054))(V9053) end end end end end end, fun (V9055) -> fun (V9056) -> fun (V9057) -> begin V9058 = V9056(V9057), V9058(V9057) end end end end}, fun (V9059) -> fun (V9060) -> V9060 end end}, V0))(V9033), {'Idris.Prelude.Right', V9061} end,
											    case V9062 of
											      {'Idris.Prelude.Left', E1388} -> fun (V9063) -> {'Idris.Prelude.Left', V9063} end(E1388);
											      {'Idris.Prelude.Right', E1389} ->
												  fun (V9064) ->
													  begin
													    V9069 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9065) -> fun (V9066) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9065, V9066) end end, fun (V9067) -> fun (V9068) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9067, V9068) end end}, V9029, V9033),
													    case V9069 of
													      {'Idris.Prelude.Left', E1390} -> fun (V9070) -> {'Idris.Prelude.Left', V9070} end(E1390);
													      {'Idris.Prelude.Right', E1391} ->
														  fun (V9071) ->
															  begin
															    V9072 = ('un--getNArgs'(V9064, V9071, V9032))(V9033),
															    case V9072 of
															      {'Idris.Prelude.Left', E1392} -> fun (V9073) -> {'Idris.Prelude.Left', V9073} end(E1392);
															      {'Idris.Prelude.Right', E1393} ->
																  fun (V9074) ->
																	  case V9074 of
																	    {'Idris.Compiler.CompileExpr.User', E1394, E1395} ->
																		fun (V9075, V9076) ->
																			begin
																			  V9078 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9077) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9064, V9077) end, V9076))(V9033),
																			  case V9078 of
																			    {'Idris.Prelude.Left', E1396} -> fun (V9079) -> {'Idris.Prelude.Left', V9079} end(E1396);
																			    {'Idris.Prelude.Right', E1397} ->
																				fun (V9080) ->
																					begin
																					  V9082 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9081) -> 'un--nfToCFType'(V0, V9028, V2, V9081) end, V9080))(V9033),
																					  case V9082 of
																					    {'Idris.Prelude.Left', E1398} -> fun (V9083) -> {'Idris.Prelude.Left', V9083} end(E1398);
																					    {'Idris.Prelude.Right', E1399} -> fun (V9084) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9071, V9084}} end(E1399);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1397);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1394, E1395);
																	    {'Idris.Compiler.CompileExpr.Struct', E1400, E1401} ->
																		fun (V9085, V9086) ->
																			begin
																			  V9097 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																								    fun (V9087) ->
																									    case V9087 of
																									      {'Idris.Builtin.MkPair', E1402, E1403} ->
																										  fun (V9088, V9089) ->
																											  fun (V9090) ->
																												  begin
																												    V9091 = ('Idris.Core.Normalise':'un--evalClosure'([], V9064, V9089))(V9090),
																												    case V9091 of
																												      {'Idris.Prelude.Left', E1404} -> fun (V9092) -> {'Idris.Prelude.Left', V9092} end(E1404);
																												      {'Idris.Prelude.Right', E1405} ->
																													  fun (V9093) ->
																														  begin
																														    V9094 = ('un--nfToCFType'(V0, V9028, 0, V9093))(V9090),
																														    case V9094 of
																														      {'Idris.Prelude.Left', E1406} -> fun (V9095) -> {'Idris.Prelude.Left', V9095} end(E1406);
																														      {'Idris.Prelude.Right', E1407} -> fun (V9096) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9088, V9096}} end(E1407);
																														      _ -> erlang:throw("Error: Unreachable branch")
																														    end
																														  end
																													  end(E1405);
																												      _ -> erlang:throw("Error: Unreachable branch")
																												    end
																												  end
																											  end
																										  end(E1402, E1403);
																									      _ -> erlang:throw("Error: Unreachable branch")
																									    end
																								    end,
																								    V9086))(V9033),
																			  case V9097 of
																			    {'Idris.Prelude.Left', E1408} -> fun (V9098) -> {'Idris.Prelude.Left', V9098} end(E1408);
																			    {'Idris.Prelude.Right', E1409} -> fun (V9099) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9085, V9099}} end(E1409);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1400, E1401);
																	    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																	    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																	    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																	    {'Idris.Compiler.CompileExpr.NIORes', E1410} ->
																		fun (V9100) ->
																			begin
																			  V9101 = ('Idris.Core.Normalise':'un--evalClosure'([], V9064, V9100))(V9033),
																			  case V9101 of
																			    {'Idris.Prelude.Left', E1411} -> fun (V9102) -> {'Idris.Prelude.Left', V9102} end(E1411);
																			    {'Idris.Prelude.Right', E1412} ->
																				fun (V9103) ->
																					begin
																					  V9104 = ('un--nfToCFType'(V0, V9028, V2, V9103))(V9033),
																					  case V9104 of
																					    {'Idris.Prelude.Left', E1413} -> fun (V9105) -> {'Idris.Prelude.Left', V9105} end(E1413);
																					    {'Idris.Prelude.Right', E1414} -> fun (V9106) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9106}} end(E1414);
																					    _ -> erlang:throw("Error: Unreachable branch")
																					  end
																					end
																				end(E1412);
																			    _ -> erlang:throw("Error: Unreachable branch")
																			  end
																			end
																		end(E1410);
																	    _ -> erlang:throw("Error: Unreachable branch")
																	  end
																  end(E1393);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
															  end
														  end(E1391);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end
													  end
												  end(E1389);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end
											  end
										  end
									  end(E1383, E1384, E1385, E1386, E1387);
								      {'Idris.Core.Value.NType', E1415} -> fun (V9107) -> fun (V9108) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1415);
								      {'Idris.Core.Value.NErased', E1416, E1417} -> fun (V9109, V9110) -> fun (V9111) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1416, E1417);
								      _ ->
									  fun (V9112) ->
										  begin
										    V9141 = begin V9140 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9113) -> fun (V9114) -> fun (V9115) -> fun (V9116) -> fun (V9117) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9115, V9116, V9117) end end end end end, fun (V9118) -> fun (V9119) -> fun (V9120) -> V9119 end end end, fun (V9121) -> fun (V9122) -> fun (V9123) -> fun (V9124) -> fun (V9125) -> begin V9126 = V9123(V9125), begin V9127 = V9124(V9125), V9126(V9127) end end end end end end end}, fun (V9128) -> fun (V9129) -> fun (V9130) -> fun (V9131) -> fun (V9132) -> begin V9133 = V9130(V9132), (V9131(V9133))(V9132) end end end end end end, fun (V9134) -> fun (V9135) -> fun (V9136) -> begin V9137 = V9135(V9136), V9137(V9136) end end end end}, fun (V9138) -> fun (V9139) -> V9139 end end}, V0))(V9112), {'Idris.Prelude.Right', V9140} end,
										    case V9141 of
										      {'Idris.Prelude.Left', E1377} -> fun (V9142) -> {'Idris.Prelude.Left', V9142} end(E1377);
										      {'Idris.Prelude.Right', E1378} ->
											  fun (V9143) ->
												  begin
												    V9144 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9143, {'Idris.Core.Env.Nil'}, V3, V9112),
												    case V9144 of
												      {'Idris.Prelude.Left', E1379} -> fun (V9145) -> {'Idris.Prelude.Left', V9145} end(E1379);
												      {'Idris.Prelude.Right', E1380} ->
													  fun (V9146) ->
														  begin
														    V9151 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9147) -> fun (V9148) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9147, V9148) end end, fun (V9149) -> fun (V9150) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9149, V9150) end end}, V9146, V9112),
														    case V9151 of
														      {'Idris.Prelude.Left', E1381} -> fun (V9152) -> {'Idris.Prelude.Left', V9152} end(E1381);
														      {'Idris.Prelude.Right', E1382} -> fun (V9153) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9153))}, V9112) end(E1382);
														      _ -> erlang:throw("Error: Unreachable branch")
														    end
														  end
													  end(E1380);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E1378);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end
								    end
							      end
						      end(E1373, E1374, E1375, E1376);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E1338, E1339, E1340, E1341, E1342} ->
							    fun (V9154, V9155, V9156, V9157, V9158) ->
								    fun (V9159) ->
									    begin
									      V9188 = begin V9187 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9160) -> fun (V9161) -> fun (V9162) -> fun (V9163) -> fun (V9164) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9162, V9163, V9164) end end end end end, fun (V9165) -> fun (V9166) -> fun (V9167) -> V9166 end end end, fun (V9168) -> fun (V9169) -> fun (V9170) -> fun (V9171) -> fun (V9172) -> begin V9173 = V9170(V9172), begin V9174 = V9171(V9172), V9173(V9174) end end end end end end end}, fun (V9175) -> fun (V9176) -> fun (V9177) -> fun (V9178) -> fun (V9179) -> begin V9180 = V9177(V9179), (V9178(V9180))(V9179) end end end end end end, fun (V9181) -> fun (V9182) -> fun (V9183) -> begin V9184 = V9182(V9183), V9184(V9183) end end end end}, fun (V9185) -> fun (V9186) -> V9186 end end}, V0))(V9159), {'Idris.Prelude.Right', V9187} end,
									      case V9188 of
										{'Idris.Prelude.Left', E1343} -> fun (V9189) -> {'Idris.Prelude.Left', V9189} end(E1343);
										{'Idris.Prelude.Right', E1344} ->
										    fun (V9190) ->
											    begin
											      V9195 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9191) -> fun (V9192) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9191, V9192) end end, fun (V9193) -> fun (V9194) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9193, V9194) end end}, V9155, V9159),
											      case V9195 of
												{'Idris.Prelude.Left', E1345} -> fun (V9196) -> {'Idris.Prelude.Left', V9196} end(E1345);
												{'Idris.Prelude.Right', E1346} ->
												    fun (V9197) ->
													    begin
													      V9198 = ('un--getNArgs'(V9190, V9197, V9158))(V9159),
													      case V9198 of
														{'Idris.Prelude.Left', E1347} -> fun (V9199) -> {'Idris.Prelude.Left', V9199} end(E1347);
														{'Idris.Prelude.Right', E1348} ->
														    fun (V9200) ->
															    case V9200 of
															      {'Idris.Compiler.CompileExpr.User', E1349, E1350} ->
																  fun (V9201, V9202) ->
																	  begin
																	    V9204 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9203) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9190, V9203) end, V9202))(V9159),
																	    case V9204 of
																	      {'Idris.Prelude.Left', E1351} -> fun (V9205) -> {'Idris.Prelude.Left', V9205} end(E1351);
																	      {'Idris.Prelude.Right', E1352} ->
																		  fun (V9206) ->
																			  begin
																			    V9208 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9207) -> 'un--nfToCFType'(V0, V9154, V2, V9207) end, V9206))(V9159),
																			    case V9208 of
																			      {'Idris.Prelude.Left', E1353} -> fun (V9209) -> {'Idris.Prelude.Left', V9209} end(E1353);
																			      {'Idris.Prelude.Right', E1354} -> fun (V9210) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9197, V9210}} end(E1354);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1352);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1349, E1350);
															      {'Idris.Compiler.CompileExpr.Struct', E1355, E1356} ->
																  fun (V9211, V9212) ->
																	  begin
																	    V9223 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V9213) ->
																							      case V9213 of
																								{'Idris.Builtin.MkPair', E1357, E1358} ->
																								    fun (V9214, V9215) ->
																									    fun (V9216) ->
																										    begin
																										      V9217 = ('Idris.Core.Normalise':'un--evalClosure'([], V9190, V9215))(V9216),
																										      case V9217 of
																											{'Idris.Prelude.Left', E1359} -> fun (V9218) -> {'Idris.Prelude.Left', V9218} end(E1359);
																											{'Idris.Prelude.Right', E1360} ->
																											    fun (V9219) ->
																												    begin
																												      V9220 = ('un--nfToCFType'(V0, V9154, 0, V9219))(V9216),
																												      case V9220 of
																													{'Idris.Prelude.Left', E1361} -> fun (V9221) -> {'Idris.Prelude.Left', V9221} end(E1361);
																													{'Idris.Prelude.Right', E1362} -> fun (V9222) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9214, V9222}} end(E1362);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E1360);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E1357, E1358);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V9212))(V9159),
																	    case V9223 of
																	      {'Idris.Prelude.Left', E1363} -> fun (V9224) -> {'Idris.Prelude.Left', V9224} end(E1363);
																	      {'Idris.Prelude.Right', E1364} -> fun (V9225) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9211, V9225}} end(E1364);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1355, E1356);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E1365} ->
																  fun (V9226) ->
																	  begin
																	    V9227 = ('Idris.Core.Normalise':'un--evalClosure'([], V9190, V9226))(V9159),
																	    case V9227 of
																	      {'Idris.Prelude.Left', E1366} -> fun (V9228) -> {'Idris.Prelude.Left', V9228} end(E1366);
																	      {'Idris.Prelude.Right', E1367} ->
																		  fun (V9229) ->
																			  begin
																			    V9230 = ('un--nfToCFType'(V0, V9154, V2, V9229))(V9159),
																			    case V9230 of
																			      {'Idris.Prelude.Left', E1368} -> fun (V9231) -> {'Idris.Prelude.Left', V9231} end(E1368);
																			      {'Idris.Prelude.Right', E1369} -> fun (V9232) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9232}} end(E1369);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1367);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1365);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E1348);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1346);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1344);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E1338, E1339, E1340, E1341, E1342);
							{'Idris.Core.Value.NType', E1370} -> fun (V9233) -> fun (V9234) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1370);
							{'Idris.Core.Value.NErased', E1371, E1372} -> fun (V9235, V9236) -> fun (V9237) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1371, E1372);
							_ ->
							    fun (V9238) ->
								    begin
								      V9267 = begin V9266 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9239) -> fun (V9240) -> fun (V9241) -> fun (V9242) -> fun (V9243) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9241, V9242, V9243) end end end end end, fun (V9244) -> fun (V9245) -> fun (V9246) -> V9245 end end end, fun (V9247) -> fun (V9248) -> fun (V9249) -> fun (V9250) -> fun (V9251) -> begin V9252 = V9249(V9251), begin V9253 = V9250(V9251), V9252(V9253) end end end end end end end}, fun (V9254) -> fun (V9255) -> fun (V9256) -> fun (V9257) -> fun (V9258) -> begin V9259 = V9256(V9258), (V9257(V9259))(V9258) end end end end end end, fun (V9260) -> fun (V9261) -> fun (V9262) -> begin V9263 = V9261(V9262), V9263(V9262) end end end end}, fun (V9264) -> fun (V9265) -> V9265 end end}, V0))(V9238), {'Idris.Prelude.Right', V9266} end,
								      case V9267 of
									{'Idris.Prelude.Left', E1332} -> fun (V9268) -> {'Idris.Prelude.Left', V9268} end(E1332);
									{'Idris.Prelude.Right', E1333} ->
									    fun (V9269) ->
										    begin
										      V9270 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9269, {'Idris.Core.Env.Nil'}, V3, V9238),
										      case V9270 of
											{'Idris.Prelude.Left', E1334} -> fun (V9271) -> {'Idris.Prelude.Left', V9271} end(E1334);
											{'Idris.Prelude.Right', E1335} ->
											    fun (V9272) ->
												    begin
												      V9277 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9273) -> fun (V9274) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9273, V9274) end end, fun (V9275) -> fun (V9276) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9275, V9276) end end}, V9272, V9238),
												      case V9277 of
													{'Idris.Prelude.Left', E1336} -> fun (V9278) -> {'Idris.Prelude.Left', V9278} end(E1336);
													{'Idris.Prelude.Right', E1337} -> fun (V9279) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9279))}, V9238) end(E1337);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1335);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E1333);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    0 ->
						case V3 of
						  {'Idris.Core.Value.NBind', E1470, E1471, E1472, E1473} -> fun (V9280, V9281, V9282, V9283) -> fun (V9284) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V9280, <<"Function types not allowed in a foreign struct"/utf8>>}, V9284) end end(E1470, E1471, E1472, E1473);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E1435, E1436, E1437, E1438, E1439} ->
							    fun (V9285, V9286, V9287, V9288, V9289) ->
								    fun (V9290) ->
									    begin
									      V9319 = begin V9318 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9291) -> fun (V9292) -> fun (V9293) -> fun (V9294) -> fun (V9295) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9293, V9294, V9295) end end end end end, fun (V9296) -> fun (V9297) -> fun (V9298) -> V9297 end end end, fun (V9299) -> fun (V9300) -> fun (V9301) -> fun (V9302) -> fun (V9303) -> begin V9304 = V9301(V9303), begin V9305 = V9302(V9303), V9304(V9305) end end end end end end end}, fun (V9306) -> fun (V9307) -> fun (V9308) -> fun (V9309) -> fun (V9310) -> begin V9311 = V9308(V9310), (V9309(V9311))(V9310) end end end end end end, fun (V9312) -> fun (V9313) -> fun (V9314) -> begin V9315 = V9313(V9314), V9315(V9314) end end end end}, fun (V9316) -> fun (V9317) -> V9317 end end}, V0))(V9290), {'Idris.Prelude.Right', V9318} end,
									      case V9319 of
										{'Idris.Prelude.Left', E1440} -> fun (V9320) -> {'Idris.Prelude.Left', V9320} end(E1440);
										{'Idris.Prelude.Right', E1441} ->
										    fun (V9321) ->
											    begin
											      V9326 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9322) -> fun (V9323) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9322, V9323) end end, fun (V9324) -> fun (V9325) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9324, V9325) end end}, V9286, V9290),
											      case V9326 of
												{'Idris.Prelude.Left', E1442} -> fun (V9327) -> {'Idris.Prelude.Left', V9327} end(E1442);
												{'Idris.Prelude.Right', E1443} ->
												    fun (V9328) ->
													    begin
													      V9329 = ('un--getNArgs'(V9321, V9328, V9289))(V9290),
													      case V9329 of
														{'Idris.Prelude.Left', E1444} -> fun (V9330) -> {'Idris.Prelude.Left', V9330} end(E1444);
														{'Idris.Prelude.Right', E1445} ->
														    fun (V9331) ->
															    case V9331 of
															      {'Idris.Compiler.CompileExpr.User', E1446, E1447} ->
																  fun (V9332, V9333) ->
																	  begin
																	    V9335 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9334) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9321, V9334) end, V9333))(V9290),
																	    case V9335 of
																	      {'Idris.Prelude.Left', E1448} -> fun (V9336) -> {'Idris.Prelude.Left', V9336} end(E1448);
																	      {'Idris.Prelude.Right', E1449} ->
																		  fun (V9337) ->
																			  begin
																			    V9339 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9338) -> 'un--nfToCFType'(V0, V9285, V2, V9338) end, V9337))(V9290),
																			    case V9339 of
																			      {'Idris.Prelude.Left', E1450} -> fun (V9340) -> {'Idris.Prelude.Left', V9340} end(E1450);
																			      {'Idris.Prelude.Right', E1451} -> fun (V9341) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9328, V9341}} end(E1451);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1449);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1446, E1447);
															      {'Idris.Compiler.CompileExpr.Struct', E1452, E1453} ->
																  fun (V9342, V9343) ->
																	  begin
																	    V9354 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V9344) ->
																							      case V9344 of
																								{'Idris.Builtin.MkPair', E1454, E1455} ->
																								    fun (V9345, V9346) ->
																									    fun (V9347) ->
																										    begin
																										      V9348 = ('Idris.Core.Normalise':'un--evalClosure'([], V9321, V9346))(V9347),
																										      case V9348 of
																											{'Idris.Prelude.Left', E1456} -> fun (V9349) -> {'Idris.Prelude.Left', V9349} end(E1456);
																											{'Idris.Prelude.Right', E1457} ->
																											    fun (V9350) ->
																												    begin
																												      V9351 = ('un--nfToCFType'(V0, V9285, 0, V9350))(V9347),
																												      case V9351 of
																													{'Idris.Prelude.Left', E1458} -> fun (V9352) -> {'Idris.Prelude.Left', V9352} end(E1458);
																													{'Idris.Prelude.Right', E1459} -> fun (V9353) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9345, V9353}} end(E1459);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E1457);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E1454, E1455);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V9343))(V9290),
																	    case V9354 of
																	      {'Idris.Prelude.Left', E1460} -> fun (V9355) -> {'Idris.Prelude.Left', V9355} end(E1460);
																	      {'Idris.Prelude.Right', E1461} -> fun (V9356) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9342, V9356}} end(E1461);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1452, E1453);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E1462} ->
																  fun (V9357) ->
																	  begin
																	    V9358 = ('Idris.Core.Normalise':'un--evalClosure'([], V9321, V9357))(V9290),
																	    case V9358 of
																	      {'Idris.Prelude.Left', E1463} -> fun (V9359) -> {'Idris.Prelude.Left', V9359} end(E1463);
																	      {'Idris.Prelude.Right', E1464} ->
																		  fun (V9360) ->
																			  begin
																			    V9361 = ('un--nfToCFType'(V0, V9285, V2, V9360))(V9290),
																			    case V9361 of
																			      {'Idris.Prelude.Left', E1465} -> fun (V9362) -> {'Idris.Prelude.Left', V9362} end(E1465);
																			      {'Idris.Prelude.Right', E1466} -> fun (V9363) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9363}} end(E1466);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1464);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1462);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E1445);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1443);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1441);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E1435, E1436, E1437, E1438, E1439);
							{'Idris.Core.Value.NType', E1467} -> fun (V9364) -> fun (V9365) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1467);
							{'Idris.Core.Value.NErased', E1468, E1469} -> fun (V9366, V9367) -> fun (V9368) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1468, E1469);
							_ ->
							    fun (V9369) ->
								    begin
								      V9398 = begin V9397 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9370) -> fun (V9371) -> fun (V9372) -> fun (V9373) -> fun (V9374) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9372, V9373, V9374) end end end end end, fun (V9375) -> fun (V9376) -> fun (V9377) -> V9376 end end end, fun (V9378) -> fun (V9379) -> fun (V9380) -> fun (V9381) -> fun (V9382) -> begin V9383 = V9380(V9382), begin V9384 = V9381(V9382), V9383(V9384) end end end end end end end}, fun (V9385) -> fun (V9386) -> fun (V9387) -> fun (V9388) -> fun (V9389) -> begin V9390 = V9387(V9389), (V9388(V9390))(V9389) end end end end end end, fun (V9391) -> fun (V9392) -> fun (V9393) -> begin V9394 = V9392(V9393), V9394(V9393) end end end end}, fun (V9395) -> fun (V9396) -> V9396 end end}, V0))(V9369), {'Idris.Prelude.Right', V9397} end,
								      case V9398 of
									{'Idris.Prelude.Left', E1429} -> fun (V9399) -> {'Idris.Prelude.Left', V9399} end(E1429);
									{'Idris.Prelude.Right', E1430} ->
									    fun (V9400) ->
										    begin
										      V9401 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9400, {'Idris.Core.Env.Nil'}, V3, V9369),
										      case V9401 of
											{'Idris.Prelude.Left', E1431} -> fun (V9402) -> {'Idris.Prelude.Left', V9402} end(E1431);
											{'Idris.Prelude.Right', E1432} ->
											    fun (V9403) ->
												    begin
												      V9408 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9404) -> fun (V9405) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9404, V9405) end end, fun (V9406) -> fun (V9407) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9406, V9407) end end}, V9403, V9369),
												      case V9408 of
													{'Idris.Prelude.Left', E1433} -> fun (V9409) -> {'Idris.Prelude.Left', V9409} end(E1433);
													{'Idris.Prelude.Right', E1434} -> fun (V9410) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9410))}, V9369) end(E1434);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1432);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E1430);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end;
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E1297, E1298, E1299, E1300, E1301} ->
						      fun (V9411, V9412, V9413, V9414, V9415) ->
							      fun (V9416) ->
								      begin
									V9445 = begin V9444 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9417) -> fun (V9418) -> fun (V9419) -> fun (V9420) -> fun (V9421) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9419, V9420, V9421) end end end end end, fun (V9422) -> fun (V9423) -> fun (V9424) -> V9423 end end end, fun (V9425) -> fun (V9426) -> fun (V9427) -> fun (V9428) -> fun (V9429) -> begin V9430 = V9427(V9429), begin V9431 = V9428(V9429), V9430(V9431) end end end end end end end}, fun (V9432) -> fun (V9433) -> fun (V9434) -> fun (V9435) -> fun (V9436) -> begin V9437 = V9434(V9436), (V9435(V9437))(V9436) end end end end end end, fun (V9438) -> fun (V9439) -> fun (V9440) -> begin V9441 = V9439(V9440), V9441(V9440) end end end end}, fun (V9442) -> fun (V9443) -> V9443 end end}, V0))(V9416), {'Idris.Prelude.Right', V9444} end,
									case V9445 of
									  {'Idris.Prelude.Left', E1302} -> fun (V9446) -> {'Idris.Prelude.Left', V9446} end(E1302);
									  {'Idris.Prelude.Right', E1303} ->
									      fun (V9447) ->
										      begin
											V9452 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9448) -> fun (V9449) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9448, V9449) end end, fun (V9450) -> fun (V9451) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9450, V9451) end end}, V9412, V9416),
											case V9452 of
											  {'Idris.Prelude.Left', E1304} -> fun (V9453) -> {'Idris.Prelude.Left', V9453} end(E1304);
											  {'Idris.Prelude.Right', E1305} ->
											      fun (V9454) ->
												      begin
													V9455 = ('un--getNArgs'(V9447, V9454, V9415))(V9416),
													case V9455 of
													  {'Idris.Prelude.Left', E1306} -> fun (V9456) -> {'Idris.Prelude.Left', V9456} end(E1306);
													  {'Idris.Prelude.Right', E1307} ->
													      fun (V9457) ->
														      case V9457 of
															{'Idris.Compiler.CompileExpr.User', E1308, E1309} ->
															    fun (V9458, V9459) ->
																    begin
																      V9461 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9460) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9447, V9460) end, V9459))(V9416),
																      case V9461 of
																	{'Idris.Prelude.Left', E1310} -> fun (V9462) -> {'Idris.Prelude.Left', V9462} end(E1310);
																	{'Idris.Prelude.Right', E1311} ->
																	    fun (V9463) ->
																		    begin
																		      V9465 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9464) -> 'un--nfToCFType'(V0, V9411, V2, V9464) end, V9463))(V9416),
																		      case V9465 of
																			{'Idris.Prelude.Left', E1312} -> fun (V9466) -> {'Idris.Prelude.Left', V9466} end(E1312);
																			{'Idris.Prelude.Right', E1313} -> fun (V9467) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9454, V9467}} end(E1313);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1311);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1308, E1309);
															{'Idris.Compiler.CompileExpr.Struct', E1314, E1315} ->
															    fun (V9468, V9469) ->
																    begin
																      V9480 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						fun (V9470) ->
																							case V9470 of
																							  {'Idris.Builtin.MkPair', E1316, E1317} ->
																							      fun (V9471, V9472) ->
																								      fun (V9473) ->
																									      begin
																										V9474 = ('Idris.Core.Normalise':'un--evalClosure'([], V9447, V9472))(V9473),
																										case V9474 of
																										  {'Idris.Prelude.Left', E1318} -> fun (V9475) -> {'Idris.Prelude.Left', V9475} end(E1318);
																										  {'Idris.Prelude.Right', E1319} ->
																										      fun (V9476) ->
																											      begin
																												V9477 = ('un--nfToCFType'(V0, V9411, 0, V9476))(V9473),
																												case V9477 of
																												  {'Idris.Prelude.Left', E1320} -> fun (V9478) -> {'Idris.Prelude.Left', V9478} end(E1320);
																												  {'Idris.Prelude.Right', E1321} -> fun (V9479) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9471, V9479}} end(E1321);
																												  _ -> erlang:throw("Error: Unreachable branch")
																												end
																											      end
																										      end(E1319);
																										  _ -> erlang:throw("Error: Unreachable branch")
																										end
																									      end
																								      end
																							      end(E1316, E1317);
																							  _ -> erlang:throw("Error: Unreachable branch")
																							end
																						end,
																						V9469))(V9416),
																      case V9480 of
																	{'Idris.Prelude.Left', E1322} -> fun (V9481) -> {'Idris.Prelude.Left', V9481} end(E1322);
																	{'Idris.Prelude.Right', E1323} -> fun (V9482) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9468, V9482}} end(E1323);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1314, E1315);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E1324} ->
															    fun (V9483) ->
																    begin
																      V9484 = ('Idris.Core.Normalise':'un--evalClosure'([], V9447, V9483))(V9416),
																      case V9484 of
																	{'Idris.Prelude.Left', E1325} -> fun (V9485) -> {'Idris.Prelude.Left', V9485} end(E1325);
																	{'Idris.Prelude.Right', E1326} ->
																	    fun (V9486) ->
																		    begin
																		      V9487 = ('un--nfToCFType'(V0, V9411, V2, V9486))(V9416),
																		      case V9487 of
																			{'Idris.Prelude.Left', E1327} -> fun (V9488) -> {'Idris.Prelude.Left', V9488} end(E1327);
																			{'Idris.Prelude.Right', E1328} -> fun (V9489) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9489}} end(E1328);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E1326);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E1324);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E1307);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E1305);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1303);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E1297, E1298, E1299, E1300, E1301);
						  {'Idris.Core.Value.NType', E1329} -> fun (V9490) -> fun (V9491) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1329);
						  {'Idris.Core.Value.NErased', E1330, E1331} -> fun (V9492, V9493) -> fun (V9494) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1330, E1331);
						  _ ->
						      fun (V9495) ->
							      begin
								V9524 = begin V9523 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9496) -> fun (V9497) -> fun (V9498) -> fun (V9499) -> fun (V9500) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9498, V9499, V9500) end end end end end, fun (V9501) -> fun (V9502) -> fun (V9503) -> V9502 end end end, fun (V9504) -> fun (V9505) -> fun (V9506) -> fun (V9507) -> fun (V9508) -> begin V9509 = V9506(V9508), begin V9510 = V9507(V9508), V9509(V9510) end end end end end end end}, fun (V9511) -> fun (V9512) -> fun (V9513) -> fun (V9514) -> fun (V9515) -> begin V9516 = V9513(V9515), (V9514(V9516))(V9515) end end end end end end, fun (V9517) -> fun (V9518) -> fun (V9519) -> begin V9520 = V9518(V9519), V9520(V9519) end end end end}, fun (V9521) -> fun (V9522) -> V9522 end end}, V0))(V9495), {'Idris.Prelude.Right', V9523} end,
								case V9524 of
								  {'Idris.Prelude.Left', E1291} -> fun (V9525) -> {'Idris.Prelude.Left', V9525} end(E1291);
								  {'Idris.Prelude.Right', E1292} ->
								      fun (V9526) ->
									      begin
										V9527 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9526, {'Idris.Core.Env.Nil'}, V3, V9495),
										case V9527 of
										  {'Idris.Prelude.Left', E1293} -> fun (V9528) -> {'Idris.Prelude.Left', V9528} end(E1293);
										  {'Idris.Prelude.Right', E1294} ->
										      fun (V9529) ->
											      begin
												V9534 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9530) -> fun (V9531) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9530, V9531) end end, fun (V9532) -> fun (V9533) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9532, V9533) end end}, V9529, V9495),
												case V9534 of
												  {'Idris.Prelude.Left', E1295} -> fun (V9535) -> {'Idris.Prelude.Left', V9535} end(E1295);
												  {'Idris.Prelude.Right', E1296} -> fun (V9536) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9536))}, V9495) end(E1296);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1294);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1292);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				    end
			    end(E1289, E1290);
			_ ->
			    case V2 of
			      1 ->
				  case V3 of
				    {'Idris.Core.Value.NBind', E1188, E1189, E1190, E1191} ->
					fun (V9537, V9538, V9539, V9540) ->
						case V9539 of
						  {'Idris.Core.TT.Pi', E1233, E1234, E1235} ->
						      fun (V9541, V9542, V9543) ->
							      fun (V9544) ->
								      begin
									V9573 = begin V9572 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9545) -> fun (V9546) -> fun (V9547) -> fun (V9548) -> fun (V9549) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9547, V9548, V9549) end end end end end, fun (V9550) -> fun (V9551) -> fun (V9552) -> V9551 end end end, fun (V9553) -> fun (V9554) -> fun (V9555) -> fun (V9556) -> fun (V9557) -> begin V9558 = V9555(V9557), begin V9559 = V9556(V9557), V9558(V9559) end end end end end end end}, fun (V9560) -> fun (V9561) -> fun (V9562) -> fun (V9563) -> fun (V9564) -> begin V9565 = V9562(V9564), (V9563(V9565))(V9564) end end end end end end, fun (V9566) -> fun (V9567) -> fun (V9568) -> begin V9569 = V9567(V9568), V9569(V9568) end end end end}, fun (V9570) -> fun (V9571) -> V9571 end end}, V0))(V9544), {'Idris.Prelude.Right', V9572} end,
									case V9573 of
									  {'Idris.Prelude.Left', E1236} -> fun (V9574) -> {'Idris.Prelude.Left', V9574} end(E1236);
									  {'Idris.Prelude.Right', E1237} ->
									      fun (V9575) ->
										      begin
											V9576 = ('un--nfToCFType'(V0, V9537, 1, V9543))(V9544),
											case V9576 of
											  {'Idris.Prelude.Left', E1238} -> fun (V9577) -> {'Idris.Prelude.Left', V9577} end(E1238);
											  {'Idris.Prelude.Right', E1239} ->
											      fun (V9578) ->
												      begin
													V9579 = ((V9540(V9575))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V9537, 1})))(V9544),
													case V9579 of
													  {'Idris.Prelude.Left', E1240} -> fun (V9580) -> {'Idris.Prelude.Left', V9580} end(E1240);
													  {'Idris.Prelude.Right', E1241} ->
													      fun (V9581) ->
														      begin
															V9582 = ('un--nfToCFType'(V0, V9537, 1, V9581))(V9544),
															case V9582 of
															  {'Idris.Prelude.Left', E1242} -> fun (V9583) -> {'Idris.Prelude.Left', V9583} end(E1242);
															  {'Idris.Prelude.Right', E1243} -> fun (V9584) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V9578, V9584}} end(E1243);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E1241);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E1239);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1237);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E1233, E1234, E1235);
						  _ ->
						      case V3 of
							{'Idris.Core.Value.NTCon', E1198, E1199, E1200, E1201, E1202} ->
							    fun (V9585, V9586, V9587, V9588, V9589) ->
								    fun (V9590) ->
									    begin
									      V9619 = begin V9618 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9591) -> fun (V9592) -> fun (V9593) -> fun (V9594) -> fun (V9595) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9593, V9594, V9595) end end end end end, fun (V9596) -> fun (V9597) -> fun (V9598) -> V9597 end end end, fun (V9599) -> fun (V9600) -> fun (V9601) -> fun (V9602) -> fun (V9603) -> begin V9604 = V9601(V9603), begin V9605 = V9602(V9603), V9604(V9605) end end end end end end end}, fun (V9606) -> fun (V9607) -> fun (V9608) -> fun (V9609) -> fun (V9610) -> begin V9611 = V9608(V9610), (V9609(V9611))(V9610) end end end end end end, fun (V9612) -> fun (V9613) -> fun (V9614) -> begin V9615 = V9613(V9614), V9615(V9614) end end end end}, fun (V9616) -> fun (V9617) -> V9617 end end}, V0))(V9590), {'Idris.Prelude.Right', V9618} end,
									      case V9619 of
										{'Idris.Prelude.Left', E1203} -> fun (V9620) -> {'Idris.Prelude.Left', V9620} end(E1203);
										{'Idris.Prelude.Right', E1204} ->
										    fun (V9621) ->
											    begin
											      V9626 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9622) -> fun (V9623) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9622, V9623) end end, fun (V9624) -> fun (V9625) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9624, V9625) end end}, V9586, V9590),
											      case V9626 of
												{'Idris.Prelude.Left', E1205} -> fun (V9627) -> {'Idris.Prelude.Left', V9627} end(E1205);
												{'Idris.Prelude.Right', E1206} ->
												    fun (V9628) ->
													    begin
													      V9629 = ('un--getNArgs'(V9621, V9628, V9589))(V9590),
													      case V9629 of
														{'Idris.Prelude.Left', E1207} -> fun (V9630) -> {'Idris.Prelude.Left', V9630} end(E1207);
														{'Idris.Prelude.Right', E1208} ->
														    fun (V9631) ->
															    case V9631 of
															      {'Idris.Compiler.CompileExpr.User', E1209, E1210} ->
																  fun (V9632, V9633) ->
																	  begin
																	    V9635 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9634) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9621, V9634) end, V9633))(V9590),
																	    case V9635 of
																	      {'Idris.Prelude.Left', E1211} -> fun (V9636) -> {'Idris.Prelude.Left', V9636} end(E1211);
																	      {'Idris.Prelude.Right', E1212} ->
																		  fun (V9637) ->
																			  begin
																			    V9639 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9638) -> 'un--nfToCFType'(V0, V9585, V2, V9638) end, V9637))(V9590),
																			    case V9639 of
																			      {'Idris.Prelude.Left', E1213} -> fun (V9640) -> {'Idris.Prelude.Left', V9640} end(E1213);
																			      {'Idris.Prelude.Right', E1214} -> fun (V9641) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9628, V9641}} end(E1214);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1212);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1209, E1210);
															      {'Idris.Compiler.CompileExpr.Struct', E1215, E1216} ->
																  fun (V9642, V9643) ->
																	  begin
																	    V9654 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						      fun (V9644) ->
																							      case V9644 of
																								{'Idris.Builtin.MkPair', E1217, E1218} ->
																								    fun (V9645, V9646) ->
																									    fun (V9647) ->
																										    begin
																										      V9648 = ('Idris.Core.Normalise':'un--evalClosure'([], V9621, V9646))(V9647),
																										      case V9648 of
																											{'Idris.Prelude.Left', E1219} -> fun (V9649) -> {'Idris.Prelude.Left', V9649} end(E1219);
																											{'Idris.Prelude.Right', E1220} ->
																											    fun (V9650) ->
																												    begin
																												      V9651 = ('un--nfToCFType'(V0, V9585, 0, V9650))(V9647),
																												      case V9651 of
																													{'Idris.Prelude.Left', E1221} -> fun (V9652) -> {'Idris.Prelude.Left', V9652} end(E1221);
																													{'Idris.Prelude.Right', E1222} -> fun (V9653) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9645, V9653}} end(E1222);
																													_ -> erlang:throw("Error: Unreachable branch")
																												      end
																												    end
																											    end(E1220);
																											_ -> erlang:throw("Error: Unreachable branch")
																										      end
																										    end
																									    end
																								    end(E1217, E1218);
																								_ -> erlang:throw("Error: Unreachable branch")
																							      end
																						      end,
																						      V9643))(V9590),
																	    case V9654 of
																	      {'Idris.Prelude.Left', E1223} -> fun (V9655) -> {'Idris.Prelude.Left', V9655} end(E1223);
																	      {'Idris.Prelude.Right', E1224} -> fun (V9656) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9642, V9656}} end(E1224);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1215, E1216);
															      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															      {'Idris.Compiler.CompileExpr.NIORes', E1225} ->
																  fun (V9657) ->
																	  begin
																	    V9658 = ('Idris.Core.Normalise':'un--evalClosure'([], V9621, V9657))(V9590),
																	    case V9658 of
																	      {'Idris.Prelude.Left', E1226} -> fun (V9659) -> {'Idris.Prelude.Left', V9659} end(E1226);
																	      {'Idris.Prelude.Right', E1227} ->
																		  fun (V9660) ->
																			  begin
																			    V9661 = ('un--nfToCFType'(V0, V9585, V2, V9660))(V9590),
																			    case V9661 of
																			      {'Idris.Prelude.Left', E1228} -> fun (V9662) -> {'Idris.Prelude.Left', V9662} end(E1228);
																			      {'Idris.Prelude.Right', E1229} -> fun (V9663) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9663}} end(E1229);
																			      _ -> erlang:throw("Error: Unreachable branch")
																			    end
																			  end
																		  end(E1227);
																	      _ -> erlang:throw("Error: Unreachable branch")
																	    end
																	  end
																  end(E1225);
															      _ -> erlang:throw("Error: Unreachable branch")
															    end
														    end(E1208);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E1206);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E1204);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							    end(E1198, E1199, E1200, E1201, E1202);
							{'Idris.Core.Value.NType', E1230} -> fun (V9664) -> fun (V9665) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1230);
							{'Idris.Core.Value.NErased', E1231, E1232} -> fun (V9666, V9667) -> fun (V9668) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1231, E1232);
							_ ->
							    fun (V9669) ->
								    begin
								      V9698 = begin V9697 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9670) -> fun (V9671) -> fun (V9672) -> fun (V9673) -> fun (V9674) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9672, V9673, V9674) end end end end end, fun (V9675) -> fun (V9676) -> fun (V9677) -> V9676 end end end, fun (V9678) -> fun (V9679) -> fun (V9680) -> fun (V9681) -> fun (V9682) -> begin V9683 = V9680(V9682), begin V9684 = V9681(V9682), V9683(V9684) end end end end end end end}, fun (V9685) -> fun (V9686) -> fun (V9687) -> fun (V9688) -> fun (V9689) -> begin V9690 = V9687(V9689), (V9688(V9690))(V9689) end end end end end end, fun (V9691) -> fun (V9692) -> fun (V9693) -> begin V9694 = V9692(V9693), V9694(V9693) end end end end}, fun (V9695) -> fun (V9696) -> V9696 end end}, V0))(V9669), {'Idris.Prelude.Right', V9697} end,
								      case V9698 of
									{'Idris.Prelude.Left', E1192} -> fun (V9699) -> {'Idris.Prelude.Left', V9699} end(E1192);
									{'Idris.Prelude.Right', E1193} ->
									    fun (V9700) ->
										    begin
										      V9701 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9700, {'Idris.Core.Env.Nil'}, V3, V9669),
										      case V9701 of
											{'Idris.Prelude.Left', E1194} -> fun (V9702) -> {'Idris.Prelude.Left', V9702} end(E1194);
											{'Idris.Prelude.Right', E1195} ->
											    fun (V9703) ->
												    begin
												      V9708 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9704) -> fun (V9705) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9704, V9705) end end, fun (V9706) -> fun (V9707) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9706, V9707) end end}, V9703, V9669),
												      case V9708 of
													{'Idris.Prelude.Left', E1196} -> fun (V9709) -> {'Idris.Prelude.Left', V9709} end(E1196);
													{'Idris.Prelude.Right', E1197} -> fun (V9710) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9710))}, V9669) end(E1197);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E1195);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end(E1193);
									_ -> erlang:throw("Error: Unreachable branch")
								      end
								    end
							    end
						      end
						end
					end(E1188, E1189, E1190, E1191);
				    _ ->
					case V3 of
					  {'Idris.Core.Value.NTCon', E1153, E1154, E1155, E1156, E1157} ->
					      fun (V9711, V9712, V9713, V9714, V9715) ->
						      fun (V9716) ->
							      begin
								V9745 = begin V9744 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9717) -> fun (V9718) -> fun (V9719) -> fun (V9720) -> fun (V9721) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9719, V9720, V9721) end end end end end, fun (V9722) -> fun (V9723) -> fun (V9724) -> V9723 end end end, fun (V9725) -> fun (V9726) -> fun (V9727) -> fun (V9728) -> fun (V9729) -> begin V9730 = V9727(V9729), begin V9731 = V9728(V9729), V9730(V9731) end end end end end end end}, fun (V9732) -> fun (V9733) -> fun (V9734) -> fun (V9735) -> fun (V9736) -> begin V9737 = V9734(V9736), (V9735(V9737))(V9736) end end end end end end, fun (V9738) -> fun (V9739) -> fun (V9740) -> begin V9741 = V9739(V9740), V9741(V9740) end end end end}, fun (V9742) -> fun (V9743) -> V9743 end end}, V0))(V9716), {'Idris.Prelude.Right', V9744} end,
								case V9745 of
								  {'Idris.Prelude.Left', E1158} -> fun (V9746) -> {'Idris.Prelude.Left', V9746} end(E1158);
								  {'Idris.Prelude.Right', E1159} ->
								      fun (V9747) ->
									      begin
										V9752 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9748) -> fun (V9749) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9748, V9749) end end, fun (V9750) -> fun (V9751) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9750, V9751) end end}, V9712, V9716),
										case V9752 of
										  {'Idris.Prelude.Left', E1160} -> fun (V9753) -> {'Idris.Prelude.Left', V9753} end(E1160);
										  {'Idris.Prelude.Right', E1161} ->
										      fun (V9754) ->
											      begin
												V9755 = ('un--getNArgs'(V9747, V9754, V9715))(V9716),
												case V9755 of
												  {'Idris.Prelude.Left', E1162} -> fun (V9756) -> {'Idris.Prelude.Left', V9756} end(E1162);
												  {'Idris.Prelude.Right', E1163} ->
												      fun (V9757) ->
													      case V9757 of
														{'Idris.Compiler.CompileExpr.User', E1164, E1165} ->
														    fun (V9758, V9759) ->
															    begin
															      V9761 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9760) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9747, V9760) end, V9759))(V9716),
															      case V9761 of
																{'Idris.Prelude.Left', E1166} -> fun (V9762) -> {'Idris.Prelude.Left', V9762} end(E1166);
																{'Idris.Prelude.Right', E1167} ->
																    fun (V9763) ->
																	    begin
																	      V9765 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9764) -> 'un--nfToCFType'(V0, V9711, V2, V9764) end, V9763))(V9716),
																	      case V9765 of
																		{'Idris.Prelude.Left', E1168} -> fun (V9766) -> {'Idris.Prelude.Left', V9766} end(E1168);
																		{'Idris.Prelude.Right', E1169} -> fun (V9767) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9754, V9767}} end(E1169);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E1167);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1164, E1165);
														{'Idris.Compiler.CompileExpr.Struct', E1170, E1171} ->
														    fun (V9768, V9769) ->
															    begin
															      V9780 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					fun (V9770) ->
																						case V9770 of
																						  {'Idris.Builtin.MkPair', E1172, E1173} ->
																						      fun (V9771, V9772) ->
																							      fun (V9773) ->
																								      begin
																									V9774 = ('Idris.Core.Normalise':'un--evalClosure'([], V9747, V9772))(V9773),
																									case V9774 of
																									  {'Idris.Prelude.Left', E1174} -> fun (V9775) -> {'Idris.Prelude.Left', V9775} end(E1174);
																									  {'Idris.Prelude.Right', E1175} ->
																									      fun (V9776) ->
																										      begin
																											V9777 = ('un--nfToCFType'(V0, V9711, 0, V9776))(V9773),
																											case V9777 of
																											  {'Idris.Prelude.Left', E1176} -> fun (V9778) -> {'Idris.Prelude.Left', V9778} end(E1176);
																											  {'Idris.Prelude.Right', E1177} -> fun (V9779) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9771, V9779}} end(E1177);
																											  _ -> erlang:throw("Error: Unreachable branch")
																											end
																										      end
																									      end(E1175);
																									  _ -> erlang:throw("Error: Unreachable branch")
																									end
																								      end
																							      end
																						      end(E1172, E1173);
																						  _ -> erlang:throw("Error: Unreachable branch")
																						end
																					end,
																					V9769))(V9716),
															      case V9780 of
																{'Idris.Prelude.Left', E1178} -> fun (V9781) -> {'Idris.Prelude.Left', V9781} end(E1178);
																{'Idris.Prelude.Right', E1179} -> fun (V9782) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9768, V9782}} end(E1179);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1170, E1171);
														{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														{'Idris.Compiler.CompileExpr.NIORes', E1180} ->
														    fun (V9783) ->
															    begin
															      V9784 = ('Idris.Core.Normalise':'un--evalClosure'([], V9747, V9783))(V9716),
															      case V9784 of
																{'Idris.Prelude.Left', E1181} -> fun (V9785) -> {'Idris.Prelude.Left', V9785} end(E1181);
																{'Idris.Prelude.Right', E1182} ->
																    fun (V9786) ->
																	    begin
																	      V9787 = ('un--nfToCFType'(V0, V9711, V2, V9786))(V9716),
																	      case V9787 of
																		{'Idris.Prelude.Left', E1183} -> fun (V9788) -> {'Idris.Prelude.Left', V9788} end(E1183);
																		{'Idris.Prelude.Right', E1184} -> fun (V9789) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9789}} end(E1184);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E1182);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1180);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
												      end(E1163);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1161);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1159);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
					      end(E1153, E1154, E1155, E1156, E1157);
					  {'Idris.Core.Value.NType', E1185} -> fun (V9790) -> fun (V9791) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1185);
					  {'Idris.Core.Value.NErased', E1186, E1187} -> fun (V9792, V9793) -> fun (V9794) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1186, E1187);
					  _ ->
					      fun (V9795) ->
						      begin
							V9824 = begin V9823 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9796) -> fun (V9797) -> fun (V9798) -> fun (V9799) -> fun (V9800) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9798, V9799, V9800) end end end end end, fun (V9801) -> fun (V9802) -> fun (V9803) -> V9802 end end end, fun (V9804) -> fun (V9805) -> fun (V9806) -> fun (V9807) -> fun (V9808) -> begin V9809 = V9806(V9808), begin V9810 = V9807(V9808), V9809(V9810) end end end end end end end}, fun (V9811) -> fun (V9812) -> fun (V9813) -> fun (V9814) -> fun (V9815) -> begin V9816 = V9813(V9815), (V9814(V9816))(V9815) end end end end end end, fun (V9817) -> fun (V9818) -> fun (V9819) -> begin V9820 = V9818(V9819), V9820(V9819) end end end end}, fun (V9821) -> fun (V9822) -> V9822 end end}, V0))(V9795), {'Idris.Prelude.Right', V9823} end,
							case V9824 of
							  {'Idris.Prelude.Left', E1147} -> fun (V9825) -> {'Idris.Prelude.Left', V9825} end(E1147);
							  {'Idris.Prelude.Right', E1148} ->
							      fun (V9826) ->
								      begin
									V9827 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9826, {'Idris.Core.Env.Nil'}, V3, V9795),
									case V9827 of
									  {'Idris.Prelude.Left', E1149} -> fun (V9828) -> {'Idris.Prelude.Left', V9828} end(E1149);
									  {'Idris.Prelude.Right', E1150} ->
									      fun (V9829) ->
										      begin
											V9834 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9830) -> fun (V9831) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9830, V9831) end end, fun (V9832) -> fun (V9833) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9832, V9833) end end}, V9829, V9795),
											case V9834 of
											  {'Idris.Prelude.Left', E1151} -> fun (V9835) -> {'Idris.Prelude.Left', V9835} end(E1151);
											  {'Idris.Prelude.Right', E1152} -> fun (V9836) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9836))}, V9795) end(E1152);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1150);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end(E1148);
							  _ -> erlang:throw("Error: Unreachable branch")
							end
						      end
					      end
					end
				  end;
			      0 ->
				  case V3 of
				    {'Idris.Core.Value.NBind', E1285, E1286, E1287, E1288} -> fun (V9837, V9838, V9839, V9840) -> fun (V9841) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V9837, <<"Function types not allowed in a foreign struct"/utf8>>}, V9841) end end(E1285, E1286, E1287, E1288);
				    _ ->
					case V3 of
					  {'Idris.Core.Value.NTCon', E1250, E1251, E1252, E1253, E1254} ->
					      fun (V9842, V9843, V9844, V9845, V9846) ->
						      fun (V9847) ->
							      begin
								V9876 = begin V9875 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9848) -> fun (V9849) -> fun (V9850) -> fun (V9851) -> fun (V9852) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9850, V9851, V9852) end end end end end, fun (V9853) -> fun (V9854) -> fun (V9855) -> V9854 end end end, fun (V9856) -> fun (V9857) -> fun (V9858) -> fun (V9859) -> fun (V9860) -> begin V9861 = V9858(V9860), begin V9862 = V9859(V9860), V9861(V9862) end end end end end end end}, fun (V9863) -> fun (V9864) -> fun (V9865) -> fun (V9866) -> fun (V9867) -> begin V9868 = V9865(V9867), (V9866(V9868))(V9867) end end end end end end, fun (V9869) -> fun (V9870) -> fun (V9871) -> begin V9872 = V9870(V9871), V9872(V9871) end end end end}, fun (V9873) -> fun (V9874) -> V9874 end end}, V0))(V9847), {'Idris.Prelude.Right', V9875} end,
								case V9876 of
								  {'Idris.Prelude.Left', E1255} -> fun (V9877) -> {'Idris.Prelude.Left', V9877} end(E1255);
								  {'Idris.Prelude.Right', E1256} ->
								      fun (V9878) ->
									      begin
										V9883 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9879) -> fun (V9880) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V9879, V9880) end end, fun (V9881) -> fun (V9882) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V9881, V9882) end end}, V9843, V9847),
										case V9883 of
										  {'Idris.Prelude.Left', E1257} -> fun (V9884) -> {'Idris.Prelude.Left', V9884} end(E1257);
										  {'Idris.Prelude.Right', E1258} ->
										      fun (V9885) ->
											      begin
												V9886 = ('un--getNArgs'(V9878, V9885, V9846))(V9847),
												case V9886 of
												  {'Idris.Prelude.Left', E1259} -> fun (V9887) -> {'Idris.Prelude.Left', V9887} end(E1259);
												  {'Idris.Prelude.Right', E1260} ->
												      fun (V9888) ->
													      case V9888 of
														{'Idris.Compiler.CompileExpr.User', E1261, E1262} ->
														    fun (V9889, V9890) ->
															    begin
															      V9892 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9891) -> 'Idris.Core.Normalise':'un--evalClosure'([], V9878, V9891) end, V9890))(V9847),
															      case V9892 of
																{'Idris.Prelude.Left', E1263} -> fun (V9893) -> {'Idris.Prelude.Left', V9893} end(E1263);
																{'Idris.Prelude.Right', E1264} ->
																    fun (V9894) ->
																	    begin
																	      V9896 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V9895) -> 'un--nfToCFType'(V0, V9842, V2, V9895) end, V9894))(V9847),
																	      case V9896 of
																		{'Idris.Prelude.Left', E1265} -> fun (V9897) -> {'Idris.Prelude.Left', V9897} end(E1265);
																		{'Idris.Prelude.Right', E1266} -> fun (V9898) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V9885, V9898}} end(E1266);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E1264);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1261, E1262);
														{'Idris.Compiler.CompileExpr.Struct', E1267, E1268} ->
														    fun (V9899, V9900) ->
															    begin
															      V9911 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					fun (V9901) ->
																						case V9901 of
																						  {'Idris.Builtin.MkPair', E1269, E1270} ->
																						      fun (V9902, V9903) ->
																							      fun (V9904) ->
																								      begin
																									V9905 = ('Idris.Core.Normalise':'un--evalClosure'([], V9878, V9903))(V9904),
																									case V9905 of
																									  {'Idris.Prelude.Left', E1271} -> fun (V9906) -> {'Idris.Prelude.Left', V9906} end(E1271);
																									  {'Idris.Prelude.Right', E1272} ->
																									      fun (V9907) ->
																										      begin
																											V9908 = ('un--nfToCFType'(V0, V9842, 0, V9907))(V9904),
																											case V9908 of
																											  {'Idris.Prelude.Left', E1273} -> fun (V9909) -> {'Idris.Prelude.Left', V9909} end(E1273);
																											  {'Idris.Prelude.Right', E1274} -> fun (V9910) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V9902, V9910}} end(E1274);
																											  _ -> erlang:throw("Error: Unreachable branch")
																											end
																										      end
																									      end(E1272);
																									  _ -> erlang:throw("Error: Unreachable branch")
																									end
																								      end
																							      end
																						      end(E1269, E1270);
																						  _ -> erlang:throw("Error: Unreachable branch")
																						end
																					end,
																					V9900))(V9847),
															      case V9911 of
																{'Idris.Prelude.Left', E1275} -> fun (V9912) -> {'Idris.Prelude.Left', V9912} end(E1275);
																{'Idris.Prelude.Right', E1276} -> fun (V9913) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V9899, V9913}} end(E1276);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1267, E1268);
														{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														{'Idris.Compiler.CompileExpr.NIORes', E1277} ->
														    fun (V9914) ->
															    begin
															      V9915 = ('Idris.Core.Normalise':'un--evalClosure'([], V9878, V9914))(V9847),
															      case V9915 of
																{'Idris.Prelude.Left', E1278} -> fun (V9916) -> {'Idris.Prelude.Left', V9916} end(E1278);
																{'Idris.Prelude.Right', E1279} ->
																    fun (V9917) ->
																	    begin
																	      V9918 = ('un--nfToCFType'(V0, V9842, V2, V9917))(V9847),
																	      case V9918 of
																		{'Idris.Prelude.Left', E1280} -> fun (V9919) -> {'Idris.Prelude.Left', V9919} end(E1280);
																		{'Idris.Prelude.Right', E1281} -> fun (V9920) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V9920}} end(E1281);
																		_ -> erlang:throw("Error: Unreachable branch")
																	      end
																	    end
																    end(E1279);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E1277);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
												      end(E1260);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E1258);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E1256);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
					      end(E1250, E1251, E1252, E1253, E1254);
					  {'Idris.Core.Value.NType', E1282} -> fun (V9921) -> fun (V9922) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1282);
					  {'Idris.Core.Value.NErased', E1283, E1284} -> fun (V9923, V9924) -> fun (V9925) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1283, E1284);
					  _ ->
					      fun (V9926) ->
						      begin
							V9955 = begin V9954 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9927) -> fun (V9928) -> fun (V9929) -> fun (V9930) -> fun (V9931) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9929, V9930, V9931) end end end end end, fun (V9932) -> fun (V9933) -> fun (V9934) -> V9933 end end end, fun (V9935) -> fun (V9936) -> fun (V9937) -> fun (V9938) -> fun (V9939) -> begin V9940 = V9937(V9939), begin V9941 = V9938(V9939), V9940(V9941) end end end end end end end}, fun (V9942) -> fun (V9943) -> fun (V9944) -> fun (V9945) -> fun (V9946) -> begin V9947 = V9944(V9946), (V9945(V9947))(V9946) end end end end end end, fun (V9948) -> fun (V9949) -> fun (V9950) -> begin V9951 = V9949(V9950), V9951(V9950) end end end end}, fun (V9952) -> fun (V9953) -> V9953 end end}, V0))(V9926), {'Idris.Prelude.Right', V9954} end,
							case V9955 of
							  {'Idris.Prelude.Left', E1244} -> fun (V9956) -> {'Idris.Prelude.Left', V9956} end(E1244);
							  {'Idris.Prelude.Right', E1245} ->
							      fun (V9957) ->
								      begin
									V9958 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V9957, {'Idris.Core.Env.Nil'}, V3, V9926),
									case V9958 of
									  {'Idris.Prelude.Left', E1246} -> fun (V9959) -> {'Idris.Prelude.Left', V9959} end(E1246);
									  {'Idris.Prelude.Right', E1247} ->
									      fun (V9960) ->
										      begin
											V9965 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V9961) -> fun (V9962) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V9961, V9962) end end, fun (V9963) -> fun (V9964) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V9963, V9964) end end}, V9960, V9926),
											case V9965 of
											  {'Idris.Prelude.Left', E1248} -> fun (V9966) -> {'Idris.Prelude.Left', V9966} end(E1248);
											  {'Idris.Prelude.Right', E1249} -> fun (V9967) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V9967))}, V9926) end(E1249);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E1247);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end(E1245);
							  _ -> erlang:throw("Error: Unreachable branch")
							end
						      end
					      end
					end
				  end;
			      _ ->
				  case V3 of
				    {'Idris.Core.Value.NTCon', E1112, E1113, E1114, E1115, E1116} ->
					fun (V9968, V9969, V9970, V9971, V9972) ->
						fun (V9973) ->
							begin
							  V10002 = begin V10001 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V9974) -> fun (V9975) -> fun (V9976) -> fun (V9977) -> fun (V9978) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V9976, V9977, V9978) end end end end end, fun (V9979) -> fun (V9980) -> fun (V9981) -> V9980 end end end, fun (V9982) -> fun (V9983) -> fun (V9984) -> fun (V9985) -> fun (V9986) -> begin V9987 = V9984(V9986), begin V9988 = V9985(V9986), V9987(V9988) end end end end end end end}, fun (V9989) -> fun (V9990) -> fun (V9991) -> fun (V9992) -> fun (V9993) -> begin V9994 = V9991(V9993), (V9992(V9994))(V9993) end end end end end end, fun (V9995) -> fun (V9996) -> fun (V9997) -> begin V9998 = V9996(V9997), V9998(V9997) end end end end}, fun (V9999) -> fun (V10000) -> V10000 end end}, V0))(V9973), {'Idris.Prelude.Right', V10001} end,
							  case V10002 of
							    {'Idris.Prelude.Left', E1117} -> fun (V10003) -> {'Idris.Prelude.Left', V10003} end(E1117);
							    {'Idris.Prelude.Right', E1118} ->
								fun (V10004) ->
									begin
									  V10009 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10005) -> fun (V10006) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10005, V10006) end end, fun (V10007) -> fun (V10008) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10007, V10008) end end}, V9969, V9973),
									  case V10009 of
									    {'Idris.Prelude.Left', E1119} -> fun (V10010) -> {'Idris.Prelude.Left', V10010} end(E1119);
									    {'Idris.Prelude.Right', E1120} ->
										fun (V10011) ->
											begin
											  V10012 = ('un--getNArgs'(V10004, V10011, V9972))(V9973),
											  case V10012 of
											    {'Idris.Prelude.Left', E1121} -> fun (V10013) -> {'Idris.Prelude.Left', V10013} end(E1121);
											    {'Idris.Prelude.Right', E1122} ->
												fun (V10014) ->
													case V10014 of
													  {'Idris.Compiler.CompileExpr.User', E1123, E1124} ->
													      fun (V10015, V10016) ->
														      begin
															V10018 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10017) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10004, V10017) end, V10016))(V9973),
															case V10018 of
															  {'Idris.Prelude.Left', E1125} -> fun (V10019) -> {'Idris.Prelude.Left', V10019} end(E1125);
															  {'Idris.Prelude.Right', E1126} ->
															      fun (V10020) ->
																      begin
																	V10022 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10021) -> 'un--nfToCFType'(V0, V9968, V2, V10021) end, V10020))(V9973),
																	case V10022 of
																	  {'Idris.Prelude.Left', E1127} -> fun (V10023) -> {'Idris.Prelude.Left', V10023} end(E1127);
																	  {'Idris.Prelude.Right', E1128} -> fun (V10024) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10011, V10024}} end(E1128);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E1126);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E1123, E1124);
													  {'Idris.Compiler.CompileExpr.Struct', E1129, E1130} ->
													      fun (V10025, V10026) ->
														      begin
															V10037 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																				   fun (V10027) ->
																					   case V10027 of
																					     {'Idris.Builtin.MkPair', E1131, E1132} ->
																						 fun (V10028, V10029) ->
																							 fun (V10030) ->
																								 begin
																								   V10031 = ('Idris.Core.Normalise':'un--evalClosure'([], V10004, V10029))(V10030),
																								   case V10031 of
																								     {'Idris.Prelude.Left', E1133} -> fun (V10032) -> {'Idris.Prelude.Left', V10032} end(E1133);
																								     {'Idris.Prelude.Right', E1134} ->
																									 fun (V10033) ->
																										 begin
																										   V10034 = ('un--nfToCFType'(V0, V9968, 0, V10033))(V10030),
																										   case V10034 of
																										     {'Idris.Prelude.Left', E1135} -> fun (V10035) -> {'Idris.Prelude.Left', V10035} end(E1135);
																										     {'Idris.Prelude.Right', E1136} -> fun (V10036) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10028, V10036}} end(E1136);
																										     _ -> erlang:throw("Error: Unreachable branch")
																										   end
																										 end
																									 end(E1134);
																								     _ -> erlang:throw("Error: Unreachable branch")
																								   end
																								 end
																							 end
																						 end(E1131, E1132);
																					     _ -> erlang:throw("Error: Unreachable branch")
																					   end
																				   end,
																				   V10026))(V9973),
															case V10037 of
															  {'Idris.Prelude.Left', E1137} -> fun (V10038) -> {'Idris.Prelude.Left', V10038} end(E1137);
															  {'Idris.Prelude.Right', E1138} -> fun (V10039) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10025, V10039}} end(E1138);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E1129, E1130);
													  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
													  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
													  {'Idris.Compiler.CompileExpr.NIORes', E1139} ->
													      fun (V10040) ->
														      begin
															V10041 = ('Idris.Core.Normalise':'un--evalClosure'([], V10004, V10040))(V9973),
															case V10041 of
															  {'Idris.Prelude.Left', E1140} -> fun (V10042) -> {'Idris.Prelude.Left', V10042} end(E1140);
															  {'Idris.Prelude.Right', E1141} ->
															      fun (V10043) ->
																      begin
																	V10044 = ('un--nfToCFType'(V0, V9968, V2, V10043))(V9973),
																	case V10044 of
																	  {'Idris.Prelude.Left', E1142} -> fun (V10045) -> {'Idris.Prelude.Left', V10045} end(E1142);
																	  {'Idris.Prelude.Right', E1143} -> fun (V10046) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10046}} end(E1143);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E1141);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E1139);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												end(E1122);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E1120);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E1118);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					end(E1112, E1113, E1114, E1115, E1116);
				    {'Idris.Core.Value.NType', E1144} -> fun (V10047) -> fun (V10048) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1144);
				    {'Idris.Core.Value.NErased', E1145, E1146} -> fun (V10049, V10050) -> fun (V10051) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1145, E1146);
				    _ ->
					fun (V10052) ->
						begin
						  V10081 = begin V10080 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10053) -> fun (V10054) -> fun (V10055) -> fun (V10056) -> fun (V10057) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10055, V10056, V10057) end end end end end, fun (V10058) -> fun (V10059) -> fun (V10060) -> V10059 end end end, fun (V10061) -> fun (V10062) -> fun (V10063) -> fun (V10064) -> fun (V10065) -> begin V10066 = V10063(V10065), begin V10067 = V10064(V10065), V10066(V10067) end end end end end end end}, fun (V10068) -> fun (V10069) -> fun (V10070) -> fun (V10071) -> fun (V10072) -> begin V10073 = V10070(V10072), (V10071(V10073))(V10072) end end end end end end, fun (V10074) -> fun (V10075) -> fun (V10076) -> begin V10077 = V10075(V10076), V10077(V10076) end end end end}, fun (V10078) -> fun (V10079) -> V10079 end end}, V0))(V10052), {'Idris.Prelude.Right', V10080} end,
						  case V10081 of
						    {'Idris.Prelude.Left', E1106} -> fun (V10082) -> {'Idris.Prelude.Left', V10082} end(E1106);
						    {'Idris.Prelude.Right', E1107} ->
							fun (V10083) ->
								begin
								  V10084 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10083, {'Idris.Core.Env.Nil'}, V3, V10052),
								  case V10084 of
								    {'Idris.Prelude.Left', E1108} -> fun (V10085) -> {'Idris.Prelude.Left', V10085} end(E1108);
								    {'Idris.Prelude.Right', E1109} ->
									fun (V10086) ->
										begin
										  V10091 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10087) -> fun (V10088) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10087, V10088) end end, fun (V10089) -> fun (V10090) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10089, V10090) end end}, V10086, V10052),
										  case V10091 of
										    {'Idris.Prelude.Left', E1110} -> fun (V10092) -> {'Idris.Prelude.Left', V10092} end(E1110);
										    {'Idris.Prelude.Right', E1111} -> fun (V10093) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10093))}, V10052) end(E1111);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E1109);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end(E1107);
						    _ -> erlang:throw("Error: Unreachable branch")
						  end
						end
					end
				  end
			    end
		      end
		end;
	    _ ->
		case V3 of
		  {'Idris.Core.Value.NPrimVal', E183, E184} ->
		      fun (V10094, V10095) ->
			      case V10095 of
				{'Idris.Core.TT.DoubleType'} -> fun () -> fun (V10096) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end();
				{'Idris.Core.TT.CharType'} -> fun () -> fun (V10097) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFChar'}} end end();
				{'Idris.Core.TT.WorldType'} -> fun () -> fun (V10098) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end();
				_ ->
				    case V2 of
				      1 ->
					  case V3 of
					    {'Idris.Core.Value.NBind', E267, E268, E269, E270} ->
						fun (V10099, V10100, V10101, V10102) ->
							case V10101 of
							  {'Idris.Core.TT.Pi', E312, E313, E314} ->
							      fun (V10103, V10104, V10105) ->
								      fun (V10106) ->
									      begin
										V10135 = begin V10134 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10107) -> fun (V10108) -> fun (V10109) -> fun (V10110) -> fun (V10111) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10109, V10110, V10111) end end end end end, fun (V10112) -> fun (V10113) -> fun (V10114) -> V10113 end end end, fun (V10115) -> fun (V10116) -> fun (V10117) -> fun (V10118) -> fun (V10119) -> begin V10120 = V10117(V10119), begin V10121 = V10118(V10119), V10120(V10121) end end end end end end end}, fun (V10122) -> fun (V10123) -> fun (V10124) -> fun (V10125) -> fun (V10126) -> begin V10127 = V10124(V10126), (V10125(V10127))(V10126) end end end end end end, fun (V10128) -> fun (V10129) -> fun (V10130) -> begin V10131 = V10129(V10130), V10131(V10130) end end end end}, fun (V10132) -> fun (V10133) -> V10133 end end}, V0))(V10106), {'Idris.Prelude.Right', V10134} end,
										case V10135 of
										  {'Idris.Prelude.Left', E315} -> fun (V10136) -> {'Idris.Prelude.Left', V10136} end(E315);
										  {'Idris.Prelude.Right', E316} ->
										      fun (V10137) ->
											      begin
												V10138 = ('un--nfToCFType'(V0, V10099, 1, V10105))(V10106),
												case V10138 of
												  {'Idris.Prelude.Left', E317} -> fun (V10139) -> {'Idris.Prelude.Left', V10139} end(E317);
												  {'Idris.Prelude.Right', E318} ->
												      fun (V10140) ->
													      begin
														V10141 = ((V10102(V10137))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V10099, 1})))(V10106),
														case V10141 of
														  {'Idris.Prelude.Left', E319} -> fun (V10142) -> {'Idris.Prelude.Left', V10142} end(E319);
														  {'Idris.Prelude.Right', E320} ->
														      fun (V10143) ->
															      begin
																V10144 = ('un--nfToCFType'(V0, V10099, 1, V10143))(V10106),
																case V10144 of
																  {'Idris.Prelude.Left', E321} -> fun (V10145) -> {'Idris.Prelude.Left', V10145} end(E321);
																  {'Idris.Prelude.Right', E322} -> fun (V10146) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V10140, V10146}} end(E322);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E320);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													      end
												      end(E318);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E316);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end
							      end(E312, E313, E314);
							  _ ->
							      case V3 of
								{'Idris.Core.Value.NTCon', E277, E278, E279, E280, E281} ->
								    fun (V10147, V10148, V10149, V10150, V10151) ->
									    fun (V10152) ->
										    begin
										      V10181 = begin V10180 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10153) -> fun (V10154) -> fun (V10155) -> fun (V10156) -> fun (V10157) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10155, V10156, V10157) end end end end end, fun (V10158) -> fun (V10159) -> fun (V10160) -> V10159 end end end, fun (V10161) -> fun (V10162) -> fun (V10163) -> fun (V10164) -> fun (V10165) -> begin V10166 = V10163(V10165), begin V10167 = V10164(V10165), V10166(V10167) end end end end end end end}, fun (V10168) -> fun (V10169) -> fun (V10170) -> fun (V10171) -> fun (V10172) -> begin V10173 = V10170(V10172), (V10171(V10173))(V10172) end end end end end end, fun (V10174) -> fun (V10175) -> fun (V10176) -> begin V10177 = V10175(V10176), V10177(V10176) end end end end}, fun (V10178) -> fun (V10179) -> V10179 end end}, V0))(V10152), {'Idris.Prelude.Right', V10180} end,
										      case V10181 of
											{'Idris.Prelude.Left', E282} -> fun (V10182) -> {'Idris.Prelude.Left', V10182} end(E282);
											{'Idris.Prelude.Right', E283} ->
											    fun (V10183) ->
												    begin
												      V10188 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10184) -> fun (V10185) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10184, V10185) end end, fun (V10186) -> fun (V10187) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10186, V10187) end end}, V10148, V10152),
												      case V10188 of
													{'Idris.Prelude.Left', E284} -> fun (V10189) -> {'Idris.Prelude.Left', V10189} end(E284);
													{'Idris.Prelude.Right', E285} ->
													    fun (V10190) ->
														    begin
														      V10191 = ('un--getNArgs'(V10183, V10190, V10151))(V10152),
														      case V10191 of
															{'Idris.Prelude.Left', E286} -> fun (V10192) -> {'Idris.Prelude.Left', V10192} end(E286);
															{'Idris.Prelude.Right', E287} ->
															    fun (V10193) ->
																    case V10193 of
																      {'Idris.Compiler.CompileExpr.User', E288, E289} ->
																	  fun (V10194, V10195) ->
																		  begin
																		    V10197 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10196) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10183, V10196) end, V10195))(V10152),
																		    case V10197 of
																		      {'Idris.Prelude.Left', E290} -> fun (V10198) -> {'Idris.Prelude.Left', V10198} end(E290);
																		      {'Idris.Prelude.Right', E291} ->
																			  fun (V10199) ->
																				  begin
																				    V10201 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10200) -> 'un--nfToCFType'(V0, V10147, V2, V10200) end, V10199))(V10152),
																				    case V10201 of
																				      {'Idris.Prelude.Left', E292} -> fun (V10202) -> {'Idris.Prelude.Left', V10202} end(E292);
																				      {'Idris.Prelude.Right', E293} -> fun (V10203) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10190, V10203}} end(E293);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E291);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E288, E289);
																      {'Idris.Compiler.CompileExpr.Struct', E294, E295} ->
																	  fun (V10204, V10205) ->
																		  begin
																		    V10216 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																							       fun (V10206) ->
																								       case V10206 of
																									 {'Idris.Builtin.MkPair', E296, E297} ->
																									     fun (V10207, V10208) ->
																										     fun (V10209) ->
																											     begin
																											       V10210 = ('Idris.Core.Normalise':'un--evalClosure'([], V10183, V10208))(V10209),
																											       case V10210 of
																												 {'Idris.Prelude.Left', E298} -> fun (V10211) -> {'Idris.Prelude.Left', V10211} end(E298);
																												 {'Idris.Prelude.Right', E299} ->
																												     fun (V10212) ->
																													     begin
																													       V10213 = ('un--nfToCFType'(V0, V10147, 0, V10212))(V10209),
																													       case V10213 of
																														 {'Idris.Prelude.Left', E300} -> fun (V10214) -> {'Idris.Prelude.Left', V10214} end(E300);
																														 {'Idris.Prelude.Right', E301} -> fun (V10215) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10207, V10215}} end(E301);
																														 _ -> erlang:throw("Error: Unreachable branch")
																													       end
																													     end
																												     end(E299);
																												 _ -> erlang:throw("Error: Unreachable branch")
																											       end
																											     end
																										     end
																									     end(E296, E297);
																									 _ -> erlang:throw("Error: Unreachable branch")
																								       end
																							       end,
																							       V10205))(V10152),
																		    case V10216 of
																		      {'Idris.Prelude.Left', E302} -> fun (V10217) -> {'Idris.Prelude.Left', V10217} end(E302);
																		      {'Idris.Prelude.Right', E303} -> fun (V10218) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10204, V10218}} end(E303);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E294, E295);
																      {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
																      {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
																      {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
																      {'Idris.Compiler.CompileExpr.NIORes', E304} ->
																	  fun (V10219) ->
																		  begin
																		    V10220 = ('Idris.Core.Normalise':'un--evalClosure'([], V10183, V10219))(V10152),
																		    case V10220 of
																		      {'Idris.Prelude.Left', E305} -> fun (V10221) -> {'Idris.Prelude.Left', V10221} end(E305);
																		      {'Idris.Prelude.Right', E306} ->
																			  fun (V10222) ->
																				  begin
																				    V10223 = ('un--nfToCFType'(V0, V10147, V2, V10222))(V10152),
																				    case V10223 of
																				      {'Idris.Prelude.Left', E307} -> fun (V10224) -> {'Idris.Prelude.Left', V10224} end(E307);
																				      {'Idris.Prelude.Right', E308} -> fun (V10225) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10225}} end(E308);
																				      _ -> erlang:throw("Error: Unreachable branch")
																				    end
																				  end
																			  end(E306);
																		      _ -> erlang:throw("Error: Unreachable branch")
																		    end
																		  end
																	  end(E304);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
															    end(E287);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
														    end
													    end(E285);
													_ -> erlang:throw("Error: Unreachable branch")
												      end
												    end
											    end(E283);
											_ -> erlang:throw("Error: Unreachable branch")
										      end
										    end
									    end
								    end(E277, E278, E279, E280, E281);
								{'Idris.Core.Value.NType', E309} -> fun (V10226) -> fun (V10227) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E309);
								{'Idris.Core.Value.NErased', E310, E311} -> fun (V10228, V10229) -> fun (V10230) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E310, E311);
								_ ->
								    fun (V10231) ->
									    begin
									      V10260 = begin V10259 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10232) -> fun (V10233) -> fun (V10234) -> fun (V10235) -> fun (V10236) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10234, V10235, V10236) end end end end end, fun (V10237) -> fun (V10238) -> fun (V10239) -> V10238 end end end, fun (V10240) -> fun (V10241) -> fun (V10242) -> fun (V10243) -> fun (V10244) -> begin V10245 = V10242(V10244), begin V10246 = V10243(V10244), V10245(V10246) end end end end end end end}, fun (V10247) -> fun (V10248) -> fun (V10249) -> fun (V10250) -> fun (V10251) -> begin V10252 = V10249(V10251), (V10250(V10252))(V10251) end end end end end end, fun (V10253) -> fun (V10254) -> fun (V10255) -> begin V10256 = V10254(V10255), V10256(V10255) end end end end}, fun (V10257) -> fun (V10258) -> V10258 end end}, V0))(V10231), {'Idris.Prelude.Right', V10259} end,
									      case V10260 of
										{'Idris.Prelude.Left', E271} -> fun (V10261) -> {'Idris.Prelude.Left', V10261} end(E271);
										{'Idris.Prelude.Right', E272} ->
										    fun (V10262) ->
											    begin
											      V10263 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10262, {'Idris.Core.Env.Nil'}, V3, V10231),
											      case V10263 of
												{'Idris.Prelude.Left', E273} -> fun (V10264) -> {'Idris.Prelude.Left', V10264} end(E273);
												{'Idris.Prelude.Right', E274} ->
												    fun (V10265) ->
													    begin
													      V10270 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10266) -> fun (V10267) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10266, V10267) end end, fun (V10268) -> fun (V10269) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10268, V10269) end end}, V10265, V10231),
													      case V10270 of
														{'Idris.Prelude.Left', E275} -> fun (V10271) -> {'Idris.Prelude.Left', V10271} end(E275);
														{'Idris.Prelude.Right', E276} -> fun (V10272) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10272))}, V10231) end(E276);
														_ -> erlang:throw("Error: Unreachable branch")
													      end
													    end
												    end(E274);
												_ -> erlang:throw("Error: Unreachable branch")
											      end
											    end
										    end(E272);
										_ -> erlang:throw("Error: Unreachable branch")
									      end
									    end
								    end
							      end
							end
						end(E267, E268, E269, E270);
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E232, E233, E234, E235, E236} ->
						      fun (V10273, V10274, V10275, V10276, V10277) ->
							      fun (V10278) ->
								      begin
									V10307 = begin V10306 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10279) -> fun (V10280) -> fun (V10281) -> fun (V10282) -> fun (V10283) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10281, V10282, V10283) end end end end end, fun (V10284) -> fun (V10285) -> fun (V10286) -> V10285 end end end, fun (V10287) -> fun (V10288) -> fun (V10289) -> fun (V10290) -> fun (V10291) -> begin V10292 = V10289(V10291), begin V10293 = V10290(V10291), V10292(V10293) end end end end end end end}, fun (V10294) -> fun (V10295) -> fun (V10296) -> fun (V10297) -> fun (V10298) -> begin V10299 = V10296(V10298), (V10297(V10299))(V10298) end end end end end end, fun (V10300) -> fun (V10301) -> fun (V10302) -> begin V10303 = V10301(V10302), V10303(V10302) end end end end}, fun (V10304) -> fun (V10305) -> V10305 end end}, V0))(V10278), {'Idris.Prelude.Right', V10306} end,
									case V10307 of
									  {'Idris.Prelude.Left', E237} -> fun (V10308) -> {'Idris.Prelude.Left', V10308} end(E237);
									  {'Idris.Prelude.Right', E238} ->
									      fun (V10309) ->
										      begin
											V10314 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10310) -> fun (V10311) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10310, V10311) end end, fun (V10312) -> fun (V10313) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10312, V10313) end end}, V10274, V10278),
											case V10314 of
											  {'Idris.Prelude.Left', E239} -> fun (V10315) -> {'Idris.Prelude.Left', V10315} end(E239);
											  {'Idris.Prelude.Right', E240} ->
											      fun (V10316) ->
												      begin
													V10317 = ('un--getNArgs'(V10309, V10316, V10277))(V10278),
													case V10317 of
													  {'Idris.Prelude.Left', E241} -> fun (V10318) -> {'Idris.Prelude.Left', V10318} end(E241);
													  {'Idris.Prelude.Right', E242} ->
													      fun (V10319) ->
														      case V10319 of
															{'Idris.Compiler.CompileExpr.User', E243, E244} ->
															    fun (V10320, V10321) ->
																    begin
																      V10323 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10322) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10309, V10322) end, V10321))(V10278),
																      case V10323 of
																	{'Idris.Prelude.Left', E245} -> fun (V10324) -> {'Idris.Prelude.Left', V10324} end(E245);
																	{'Idris.Prelude.Right', E246} ->
																	    fun (V10325) ->
																		    begin
																		      V10327 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10326) -> 'un--nfToCFType'(V0, V10273, V2, V10326) end, V10325))(V10278),
																		      case V10327 of
																			{'Idris.Prelude.Left', E247} -> fun (V10328) -> {'Idris.Prelude.Left', V10328} end(E247);
																			{'Idris.Prelude.Right', E248} -> fun (V10329) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10316, V10329}} end(E248);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E246);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E243, E244);
															{'Idris.Compiler.CompileExpr.Struct', E249, E250} ->
															    fun (V10330, V10331) ->
																    begin
																      V10342 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						 fun (V10332) ->
																							 case V10332 of
																							   {'Idris.Builtin.MkPair', E251, E252} ->
																							       fun (V10333, V10334) ->
																								       fun (V10335) ->
																									       begin
																										 V10336 = ('Idris.Core.Normalise':'un--evalClosure'([], V10309, V10334))(V10335),
																										 case V10336 of
																										   {'Idris.Prelude.Left', E253} -> fun (V10337) -> {'Idris.Prelude.Left', V10337} end(E253);
																										   {'Idris.Prelude.Right', E254} ->
																										       fun (V10338) ->
																											       begin
																												 V10339 = ('un--nfToCFType'(V0, V10273, 0, V10338))(V10335),
																												 case V10339 of
																												   {'Idris.Prelude.Left', E255} -> fun (V10340) -> {'Idris.Prelude.Left', V10340} end(E255);
																												   {'Idris.Prelude.Right', E256} -> fun (V10341) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10333, V10341}} end(E256);
																												   _ -> erlang:throw("Error: Unreachable branch")
																												 end
																											       end
																										       end(E254);
																										   _ -> erlang:throw("Error: Unreachable branch")
																										 end
																									       end
																								       end
																							       end(E251, E252);
																							   _ -> erlang:throw("Error: Unreachable branch")
																							 end
																						 end,
																						 V10331))(V10278),
																      case V10342 of
																	{'Idris.Prelude.Left', E257} -> fun (V10343) -> {'Idris.Prelude.Left', V10343} end(E257);
																	{'Idris.Prelude.Right', E258} -> fun (V10344) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10330, V10344}} end(E258);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E249, E250);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E259} ->
															    fun (V10345) ->
																    begin
																      V10346 = ('Idris.Core.Normalise':'un--evalClosure'([], V10309, V10345))(V10278),
																      case V10346 of
																	{'Idris.Prelude.Left', E260} -> fun (V10347) -> {'Idris.Prelude.Left', V10347} end(E260);
																	{'Idris.Prelude.Right', E261} ->
																	    fun (V10348) ->
																		    begin
																		      V10349 = ('un--nfToCFType'(V0, V10273, V2, V10348))(V10278),
																		      case V10349 of
																			{'Idris.Prelude.Left', E262} -> fun (V10350) -> {'Idris.Prelude.Left', V10350} end(E262);
																			{'Idris.Prelude.Right', E263} -> fun (V10351) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10351}} end(E263);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E261);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E259);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E242);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E240);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E238);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E232, E233, E234, E235, E236);
						  {'Idris.Core.Value.NType', E264} -> fun (V10352) -> fun (V10353) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E264);
						  {'Idris.Core.Value.NErased', E265, E266} -> fun (V10354, V10355) -> fun (V10356) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E265, E266);
						  _ ->
						      fun (V10357) ->
							      begin
								V10386 = begin V10385 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10358) -> fun (V10359) -> fun (V10360) -> fun (V10361) -> fun (V10362) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10360, V10361, V10362) end end end end end, fun (V10363) -> fun (V10364) -> fun (V10365) -> V10364 end end end, fun (V10366) -> fun (V10367) -> fun (V10368) -> fun (V10369) -> fun (V10370) -> begin V10371 = V10368(V10370), begin V10372 = V10369(V10370), V10371(V10372) end end end end end end end}, fun (V10373) -> fun (V10374) -> fun (V10375) -> fun (V10376) -> fun (V10377) -> begin V10378 = V10375(V10377), (V10376(V10378))(V10377) end end end end end end, fun (V10379) -> fun (V10380) -> fun (V10381) -> begin V10382 = V10380(V10381), V10382(V10381) end end end end}, fun (V10383) -> fun (V10384) -> V10384 end end}, V0))(V10357), {'Idris.Prelude.Right', V10385} end,
								case V10386 of
								  {'Idris.Prelude.Left', E226} -> fun (V10387) -> {'Idris.Prelude.Left', V10387} end(E226);
								  {'Idris.Prelude.Right', E227} ->
								      fun (V10388) ->
									      begin
										V10389 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10388, {'Idris.Core.Env.Nil'}, V3, V10357),
										case V10389 of
										  {'Idris.Prelude.Left', E228} -> fun (V10390) -> {'Idris.Prelude.Left', V10390} end(E228);
										  {'Idris.Prelude.Right', E229} ->
										      fun (V10391) ->
											      begin
												V10396 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10392) -> fun (V10393) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10392, V10393) end end, fun (V10394) -> fun (V10395) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10394, V10395) end end}, V10391, V10357),
												case V10396 of
												  {'Idris.Prelude.Left', E230} -> fun (V10397) -> {'Idris.Prelude.Left', V10397} end(E230);
												  {'Idris.Prelude.Right', E231} -> fun (V10398) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10398))}, V10357) end(E231);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E229);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E227);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end;
				      0 ->
					  case V3 of
					    {'Idris.Core.Value.NBind', E364, E365, E366, E367} -> fun (V10399, V10400, V10401, V10402) -> fun (V10403) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V10399, <<"Function types not allowed in a foreign struct"/utf8>>}, V10403) end end(E364, E365, E366, E367);
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E329, E330, E331, E332, E333} ->
						      fun (V10404, V10405, V10406, V10407, V10408) ->
							      fun (V10409) ->
								      begin
									V10438 = begin V10437 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10410) -> fun (V10411) -> fun (V10412) -> fun (V10413) -> fun (V10414) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10412, V10413, V10414) end end end end end, fun (V10415) -> fun (V10416) -> fun (V10417) -> V10416 end end end, fun (V10418) -> fun (V10419) -> fun (V10420) -> fun (V10421) -> fun (V10422) -> begin V10423 = V10420(V10422), begin V10424 = V10421(V10422), V10423(V10424) end end end end end end end}, fun (V10425) -> fun (V10426) -> fun (V10427) -> fun (V10428) -> fun (V10429) -> begin V10430 = V10427(V10429), (V10428(V10430))(V10429) end end end end end end, fun (V10431) -> fun (V10432) -> fun (V10433) -> begin V10434 = V10432(V10433), V10434(V10433) end end end end}, fun (V10435) -> fun (V10436) -> V10436 end end}, V0))(V10409), {'Idris.Prelude.Right', V10437} end,
									case V10438 of
									  {'Idris.Prelude.Left', E334} -> fun (V10439) -> {'Idris.Prelude.Left', V10439} end(E334);
									  {'Idris.Prelude.Right', E335} ->
									      fun (V10440) ->
										      begin
											V10445 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10441) -> fun (V10442) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10441, V10442) end end, fun (V10443) -> fun (V10444) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10443, V10444) end end}, V10405, V10409),
											case V10445 of
											  {'Idris.Prelude.Left', E336} -> fun (V10446) -> {'Idris.Prelude.Left', V10446} end(E336);
											  {'Idris.Prelude.Right', E337} ->
											      fun (V10447) ->
												      begin
													V10448 = ('un--getNArgs'(V10440, V10447, V10408))(V10409),
													case V10448 of
													  {'Idris.Prelude.Left', E338} -> fun (V10449) -> {'Idris.Prelude.Left', V10449} end(E338);
													  {'Idris.Prelude.Right', E339} ->
													      fun (V10450) ->
														      case V10450 of
															{'Idris.Compiler.CompileExpr.User', E340, E341} ->
															    fun (V10451, V10452) ->
																    begin
																      V10454 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10453) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10440, V10453) end, V10452))(V10409),
																      case V10454 of
																	{'Idris.Prelude.Left', E342} -> fun (V10455) -> {'Idris.Prelude.Left', V10455} end(E342);
																	{'Idris.Prelude.Right', E343} ->
																	    fun (V10456) ->
																		    begin
																		      V10458 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10457) -> 'un--nfToCFType'(V0, V10404, V2, V10457) end, V10456))(V10409),
																		      case V10458 of
																			{'Idris.Prelude.Left', E344} -> fun (V10459) -> {'Idris.Prelude.Left', V10459} end(E344);
																			{'Idris.Prelude.Right', E345} -> fun (V10460) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10447, V10460}} end(E345);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E343);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E340, E341);
															{'Idris.Compiler.CompileExpr.Struct', E346, E347} ->
															    fun (V10461, V10462) ->
																    begin
																      V10473 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						 fun (V10463) ->
																							 case V10463 of
																							   {'Idris.Builtin.MkPair', E348, E349} ->
																							       fun (V10464, V10465) ->
																								       fun (V10466) ->
																									       begin
																										 V10467 = ('Idris.Core.Normalise':'un--evalClosure'([], V10440, V10465))(V10466),
																										 case V10467 of
																										   {'Idris.Prelude.Left', E350} -> fun (V10468) -> {'Idris.Prelude.Left', V10468} end(E350);
																										   {'Idris.Prelude.Right', E351} ->
																										       fun (V10469) ->
																											       begin
																												 V10470 = ('un--nfToCFType'(V0, V10404, 0, V10469))(V10466),
																												 case V10470 of
																												   {'Idris.Prelude.Left', E352} -> fun (V10471) -> {'Idris.Prelude.Left', V10471} end(E352);
																												   {'Idris.Prelude.Right', E353} -> fun (V10472) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10464, V10472}} end(E353);
																												   _ -> erlang:throw("Error: Unreachable branch")
																												 end
																											       end
																										       end(E351);
																										   _ -> erlang:throw("Error: Unreachable branch")
																										 end
																									       end
																								       end
																							       end(E348, E349);
																							   _ -> erlang:throw("Error: Unreachable branch")
																							 end
																						 end,
																						 V10462))(V10409),
																      case V10473 of
																	{'Idris.Prelude.Left', E354} -> fun (V10474) -> {'Idris.Prelude.Left', V10474} end(E354);
																	{'Idris.Prelude.Right', E355} -> fun (V10475) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10461, V10475}} end(E355);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E346, E347);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E356} ->
															    fun (V10476) ->
																    begin
																      V10477 = ('Idris.Core.Normalise':'un--evalClosure'([], V10440, V10476))(V10409),
																      case V10477 of
																	{'Idris.Prelude.Left', E357} -> fun (V10478) -> {'Idris.Prelude.Left', V10478} end(E357);
																	{'Idris.Prelude.Right', E358} ->
																	    fun (V10479) ->
																		    begin
																		      V10480 = ('un--nfToCFType'(V0, V10404, V2, V10479))(V10409),
																		      case V10480 of
																			{'Idris.Prelude.Left', E359} -> fun (V10481) -> {'Idris.Prelude.Left', V10481} end(E359);
																			{'Idris.Prelude.Right', E360} -> fun (V10482) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10482}} end(E360);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E358);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E356);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E339);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E337);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E335);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E329, E330, E331, E332, E333);
						  {'Idris.Core.Value.NType', E361} -> fun (V10483) -> fun (V10484) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E361);
						  {'Idris.Core.Value.NErased', E362, E363} -> fun (V10485, V10486) -> fun (V10487) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E362, E363);
						  _ ->
						      fun (V10488) ->
							      begin
								V10517 = begin V10516 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10489) -> fun (V10490) -> fun (V10491) -> fun (V10492) -> fun (V10493) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10491, V10492, V10493) end end end end end, fun (V10494) -> fun (V10495) -> fun (V10496) -> V10495 end end end, fun (V10497) -> fun (V10498) -> fun (V10499) -> fun (V10500) -> fun (V10501) -> begin V10502 = V10499(V10501), begin V10503 = V10500(V10501), V10502(V10503) end end end end end end end}, fun (V10504) -> fun (V10505) -> fun (V10506) -> fun (V10507) -> fun (V10508) -> begin V10509 = V10506(V10508), (V10507(V10509))(V10508) end end end end end end, fun (V10510) -> fun (V10511) -> fun (V10512) -> begin V10513 = V10511(V10512), V10513(V10512) end end end end}, fun (V10514) -> fun (V10515) -> V10515 end end}, V0))(V10488), {'Idris.Prelude.Right', V10516} end,
								case V10517 of
								  {'Idris.Prelude.Left', E323} -> fun (V10518) -> {'Idris.Prelude.Left', V10518} end(E323);
								  {'Idris.Prelude.Right', E324} ->
								      fun (V10519) ->
									      begin
										V10520 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10519, {'Idris.Core.Env.Nil'}, V3, V10488),
										case V10520 of
										  {'Idris.Prelude.Left', E325} -> fun (V10521) -> {'Idris.Prelude.Left', V10521} end(E325);
										  {'Idris.Prelude.Right', E326} ->
										      fun (V10522) ->
											      begin
												V10527 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10523) -> fun (V10524) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10523, V10524) end end, fun (V10525) -> fun (V10526) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10525, V10526) end end}, V10522, V10488),
												case V10527 of
												  {'Idris.Prelude.Left', E327} -> fun (V10528) -> {'Idris.Prelude.Left', V10528} end(E327);
												  {'Idris.Prelude.Right', E328} -> fun (V10529) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10529))}, V10488) end(E328);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E326);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E324);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end;
				      _ ->
					  case V3 of
					    {'Idris.Core.Value.NTCon', E191, E192, E193, E194, E195} ->
						fun (V10530, V10531, V10532, V10533, V10534) ->
							fun (V10535) ->
								begin
								  V10564 = begin V10563 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10536) -> fun (V10537) -> fun (V10538) -> fun (V10539) -> fun (V10540) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10538, V10539, V10540) end end end end end, fun (V10541) -> fun (V10542) -> fun (V10543) -> V10542 end end end, fun (V10544) -> fun (V10545) -> fun (V10546) -> fun (V10547) -> fun (V10548) -> begin V10549 = V10546(V10548), begin V10550 = V10547(V10548), V10549(V10550) end end end end end end end}, fun (V10551) -> fun (V10552) -> fun (V10553) -> fun (V10554) -> fun (V10555) -> begin V10556 = V10553(V10555), (V10554(V10556))(V10555) end end end end end end, fun (V10557) -> fun (V10558) -> fun (V10559) -> begin V10560 = V10558(V10559), V10560(V10559) end end end end}, fun (V10561) -> fun (V10562) -> V10562 end end}, V0))(V10535), {'Idris.Prelude.Right', V10563} end,
								  case V10564 of
								    {'Idris.Prelude.Left', E196} -> fun (V10565) -> {'Idris.Prelude.Left', V10565} end(E196);
								    {'Idris.Prelude.Right', E197} ->
									fun (V10566) ->
										begin
										  V10571 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10567) -> fun (V10568) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10567, V10568) end end, fun (V10569) -> fun (V10570) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10569, V10570) end end}, V10531, V10535),
										  case V10571 of
										    {'Idris.Prelude.Left', E198} -> fun (V10572) -> {'Idris.Prelude.Left', V10572} end(E198);
										    {'Idris.Prelude.Right', E199} ->
											fun (V10573) ->
												begin
												  V10574 = ('un--getNArgs'(V10566, V10573, V10534))(V10535),
												  case V10574 of
												    {'Idris.Prelude.Left', E200} -> fun (V10575) -> {'Idris.Prelude.Left', V10575} end(E200);
												    {'Idris.Prelude.Right', E201} ->
													fun (V10576) ->
														case V10576 of
														  {'Idris.Compiler.CompileExpr.User', E202, E203} ->
														      fun (V10577, V10578) ->
															      begin
																V10580 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10579) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10566, V10579) end, V10578))(V10535),
																case V10580 of
																  {'Idris.Prelude.Left', E204} -> fun (V10581) -> {'Idris.Prelude.Left', V10581} end(E204);
																  {'Idris.Prelude.Right', E205} ->
																      fun (V10582) ->
																	      begin
																		V10584 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10583) -> 'un--nfToCFType'(V0, V10530, V2, V10583) end, V10582))(V10535),
																		case V10584 of
																		  {'Idris.Prelude.Left', E206} -> fun (V10585) -> {'Idris.Prelude.Left', V10585} end(E206);
																		  {'Idris.Prelude.Right', E207} -> fun (V10586) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10573, V10586}} end(E207);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E205);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E202, E203);
														  {'Idris.Compiler.CompileExpr.Struct', E208, E209} ->
														      fun (V10587, V10588) ->
															      begin
																V10599 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																					   fun (V10589) ->
																						   case V10589 of
																						     {'Idris.Builtin.MkPair', E210, E211} ->
																							 fun (V10590, V10591) ->
																								 fun (V10592) ->
																									 begin
																									   V10593 = ('Idris.Core.Normalise':'un--evalClosure'([], V10566, V10591))(V10592),
																									   case V10593 of
																									     {'Idris.Prelude.Left', E212} -> fun (V10594) -> {'Idris.Prelude.Left', V10594} end(E212);
																									     {'Idris.Prelude.Right', E213} ->
																										 fun (V10595) ->
																											 begin
																											   V10596 = ('un--nfToCFType'(V0, V10530, 0, V10595))(V10592),
																											   case V10596 of
																											     {'Idris.Prelude.Left', E214} -> fun (V10597) -> {'Idris.Prelude.Left', V10597} end(E214);
																											     {'Idris.Prelude.Right', E215} -> fun (V10598) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10590, V10598}} end(E215);
																											     _ -> erlang:throw("Error: Unreachable branch")
																											   end
																											 end
																										 end(E213);
																									     _ -> erlang:throw("Error: Unreachable branch")
																									   end
																									 end
																								 end
																							 end(E210, E211);
																						     _ -> erlang:throw("Error: Unreachable branch")
																						   end
																					   end,
																					   V10588))(V10535),
																case V10599 of
																  {'Idris.Prelude.Left', E216} -> fun (V10600) -> {'Idris.Prelude.Left', V10600} end(E216);
																  {'Idris.Prelude.Right', E217} -> fun (V10601) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10587, V10601}} end(E217);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E208, E209);
														  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
														  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
														  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
														  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
														  {'Idris.Compiler.CompileExpr.NIORes', E218} ->
														      fun (V10602) ->
															      begin
																V10603 = ('Idris.Core.Normalise':'un--evalClosure'([], V10566, V10602))(V10535),
																case V10603 of
																  {'Idris.Prelude.Left', E219} -> fun (V10604) -> {'Idris.Prelude.Left', V10604} end(E219);
																  {'Idris.Prelude.Right', E220} ->
																      fun (V10605) ->
																	      begin
																		V10606 = ('un--nfToCFType'(V0, V10530, V2, V10605))(V10535),
																		case V10606 of
																		  {'Idris.Prelude.Left', E221} -> fun (V10607) -> {'Idris.Prelude.Left', V10607} end(E221);
																		  {'Idris.Prelude.Right', E222} -> fun (V10608) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10608}} end(E222);
																		  _ -> erlang:throw("Error: Unreachable branch")
																		end
																	      end
																      end(E220);
																  _ -> erlang:throw("Error: Unreachable branch")
																end
															      end
														      end(E218);
														  _ -> erlang:throw("Error: Unreachable branch")
														end
													end(E201);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end(E199);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E197);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end
						end(E191, E192, E193, E194, E195);
					    {'Idris.Core.Value.NType', E223} -> fun (V10609) -> fun (V10610) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E223);
					    {'Idris.Core.Value.NErased', E224, E225} -> fun (V10611, V10612) -> fun (V10613) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E224, E225);
					    _ ->
						fun (V10614) ->
							begin
							  V10643 = begin V10642 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10615) -> fun (V10616) -> fun (V10617) -> fun (V10618) -> fun (V10619) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10617, V10618, V10619) end end end end end, fun (V10620) -> fun (V10621) -> fun (V10622) -> V10621 end end end, fun (V10623) -> fun (V10624) -> fun (V10625) -> fun (V10626) -> fun (V10627) -> begin V10628 = V10625(V10627), begin V10629 = V10626(V10627), V10628(V10629) end end end end end end end}, fun (V10630) -> fun (V10631) -> fun (V10632) -> fun (V10633) -> fun (V10634) -> begin V10635 = V10632(V10634), (V10633(V10635))(V10634) end end end end end end, fun (V10636) -> fun (V10637) -> fun (V10638) -> begin V10639 = V10637(V10638), V10639(V10638) end end end end}, fun (V10640) -> fun (V10641) -> V10641 end end}, V0))(V10614), {'Idris.Prelude.Right', V10642} end,
							  case V10643 of
							    {'Idris.Prelude.Left', E185} -> fun (V10644) -> {'Idris.Prelude.Left', V10644} end(E185);
							    {'Idris.Prelude.Right', E186} ->
								fun (V10645) ->
									begin
									  V10646 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10645, {'Idris.Core.Env.Nil'}, V3, V10614),
									  case V10646 of
									    {'Idris.Prelude.Left', E187} -> fun (V10647) -> {'Idris.Prelude.Left', V10647} end(E187);
									    {'Idris.Prelude.Right', E188} ->
										fun (V10648) ->
											begin
											  V10653 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10649) -> fun (V10650) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10649, V10650) end end, fun (V10651) -> fun (V10652) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10651, V10652) end end}, V10648, V10614),
											  case V10653 of
											    {'Idris.Prelude.Left', E189} -> fun (V10654) -> {'Idris.Prelude.Left', V10654} end(E189);
											    {'Idris.Prelude.Right', E190} -> fun (V10655) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10655))}, V10614) end(E190);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E188);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E186);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					  end
				    end
			      end
		      end(E183, E184);
		  _ ->
		      case V2 of
			1 ->
			    case V3 of
			      {'Idris.Core.Value.NBind', E82, E83, E84, E85} ->
				  fun (V10656, V10657, V10658, V10659) ->
					  case V10658 of
					    {'Idris.Core.TT.Pi', E127, E128, E129} ->
						fun (V10660, V10661, V10662) ->
							fun (V10663) ->
								begin
								  V10692 = begin V10691 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10664) -> fun (V10665) -> fun (V10666) -> fun (V10667) -> fun (V10668) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10666, V10667, V10668) end end end end end, fun (V10669) -> fun (V10670) -> fun (V10671) -> V10670 end end end, fun (V10672) -> fun (V10673) -> fun (V10674) -> fun (V10675) -> fun (V10676) -> begin V10677 = V10674(V10676), begin V10678 = V10675(V10676), V10677(V10678) end end end end end end end}, fun (V10679) -> fun (V10680) -> fun (V10681) -> fun (V10682) -> fun (V10683) -> begin V10684 = V10681(V10683), (V10682(V10684))(V10683) end end end end end end, fun (V10685) -> fun (V10686) -> fun (V10687) -> begin V10688 = V10686(V10687), V10688(V10687) end end end end}, fun (V10689) -> fun (V10690) -> V10690 end end}, V0))(V10663), {'Idris.Prelude.Right', V10691} end,
								  case V10692 of
								    {'Idris.Prelude.Left', E130} -> fun (V10693) -> {'Idris.Prelude.Left', V10693} end(E130);
								    {'Idris.Prelude.Right', E131} ->
									fun (V10694) ->
										begin
										  V10695 = ('un--nfToCFType'(V0, V10656, 1, V10662))(V10663),
										  case V10695 of
										    {'Idris.Prelude.Left', E132} -> fun (V10696) -> {'Idris.Prelude.Left', V10696} end(E132);
										    {'Idris.Prelude.Right', E133} ->
											fun (V10697) ->
												begin
												  V10698 = ((V10659(V10694))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V10656, 1})))(V10663),
												  case V10698 of
												    {'Idris.Prelude.Left', E134} -> fun (V10699) -> {'Idris.Prelude.Left', V10699} end(E134);
												    {'Idris.Prelude.Right', E135} ->
													fun (V10700) ->
														begin
														  V10701 = ('un--nfToCFType'(V0, V10656, 1, V10700))(V10663),
														  case V10701 of
														    {'Idris.Prelude.Left', E136} -> fun (V10702) -> {'Idris.Prelude.Left', V10702} end(E136);
														    {'Idris.Prelude.Right', E137} -> fun (V10703) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFFun', V10697, V10703}} end(E137);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E135);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
												end
											end(E133);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E131);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end
						end(E127, E128, E129);
					    _ ->
						case V3 of
						  {'Idris.Core.Value.NTCon', E92, E93, E94, E95, E96} ->
						      fun (V10704, V10705, V10706, V10707, V10708) ->
							      fun (V10709) ->
								      begin
									V10738 = begin V10737 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10710) -> fun (V10711) -> fun (V10712) -> fun (V10713) -> fun (V10714) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10712, V10713, V10714) end end end end end, fun (V10715) -> fun (V10716) -> fun (V10717) -> V10716 end end end, fun (V10718) -> fun (V10719) -> fun (V10720) -> fun (V10721) -> fun (V10722) -> begin V10723 = V10720(V10722), begin V10724 = V10721(V10722), V10723(V10724) end end end end end end end}, fun (V10725) -> fun (V10726) -> fun (V10727) -> fun (V10728) -> fun (V10729) -> begin V10730 = V10727(V10729), (V10728(V10730))(V10729) end end end end end end, fun (V10731) -> fun (V10732) -> fun (V10733) -> begin V10734 = V10732(V10733), V10734(V10733) end end end end}, fun (V10735) -> fun (V10736) -> V10736 end end}, V0))(V10709), {'Idris.Prelude.Right', V10737} end,
									case V10738 of
									  {'Idris.Prelude.Left', E97} -> fun (V10739) -> {'Idris.Prelude.Left', V10739} end(E97);
									  {'Idris.Prelude.Right', E98} ->
									      fun (V10740) ->
										      begin
											V10745 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10741) -> fun (V10742) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10741, V10742) end end, fun (V10743) -> fun (V10744) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10743, V10744) end end}, V10705, V10709),
											case V10745 of
											  {'Idris.Prelude.Left', E99} -> fun (V10746) -> {'Idris.Prelude.Left', V10746} end(E99);
											  {'Idris.Prelude.Right', E100} ->
											      fun (V10747) ->
												      begin
													V10748 = ('un--getNArgs'(V10740, V10747, V10708))(V10709),
													case V10748 of
													  {'Idris.Prelude.Left', E101} -> fun (V10749) -> {'Idris.Prelude.Left', V10749} end(E101);
													  {'Idris.Prelude.Right', E102} ->
													      fun (V10750) ->
														      case V10750 of
															{'Idris.Compiler.CompileExpr.User', E103, E104} ->
															    fun (V10751, V10752) ->
																    begin
																      V10754 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10753) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10740, V10753) end, V10752))(V10709),
																      case V10754 of
																	{'Idris.Prelude.Left', E105} -> fun (V10755) -> {'Idris.Prelude.Left', V10755} end(E105);
																	{'Idris.Prelude.Right', E106} ->
																	    fun (V10756) ->
																		    begin
																		      V10758 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10757) -> 'un--nfToCFType'(V0, V10704, V2, V10757) end, V10756))(V10709),
																		      case V10758 of
																			{'Idris.Prelude.Left', E107} -> fun (V10759) -> {'Idris.Prelude.Left', V10759} end(E107);
																			{'Idris.Prelude.Right', E108} -> fun (V10760) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10747, V10760}} end(E108);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E106);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E103, E104);
															{'Idris.Compiler.CompileExpr.Struct', E109, E110} ->
															    fun (V10761, V10762) ->
																    begin
																      V10773 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																						 fun (V10763) ->
																							 case V10763 of
																							   {'Idris.Builtin.MkPair', E111, E112} ->
																							       fun (V10764, V10765) ->
																								       fun (V10766) ->
																									       begin
																										 V10767 = ('Idris.Core.Normalise':'un--evalClosure'([], V10740, V10765))(V10766),
																										 case V10767 of
																										   {'Idris.Prelude.Left', E113} -> fun (V10768) -> {'Idris.Prelude.Left', V10768} end(E113);
																										   {'Idris.Prelude.Right', E114} ->
																										       fun (V10769) ->
																											       begin
																												 V10770 = ('un--nfToCFType'(V0, V10704, 0, V10769))(V10766),
																												 case V10770 of
																												   {'Idris.Prelude.Left', E115} -> fun (V10771) -> {'Idris.Prelude.Left', V10771} end(E115);
																												   {'Idris.Prelude.Right', E116} -> fun (V10772) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10764, V10772}} end(E116);
																												   _ -> erlang:throw("Error: Unreachable branch")
																												 end
																											       end
																										       end(E114);
																										   _ -> erlang:throw("Error: Unreachable branch")
																										 end
																									       end
																								       end
																							       end(E111, E112);
																							   _ -> erlang:throw("Error: Unreachable branch")
																							 end
																						 end,
																						 V10762))(V10709),
																      case V10773 of
																	{'Idris.Prelude.Left', E117} -> fun (V10774) -> {'Idris.Prelude.Left', V10774} end(E117);
																	{'Idris.Prelude.Right', E118} -> fun (V10775) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10761, V10775}} end(E118);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E109, E110);
															{'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
															{'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
															{'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
															{'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
															{'Idris.Compiler.CompileExpr.NIORes', E119} ->
															    fun (V10776) ->
																    begin
																      V10777 = ('Idris.Core.Normalise':'un--evalClosure'([], V10740, V10776))(V10709),
																      case V10777 of
																	{'Idris.Prelude.Left', E120} -> fun (V10778) -> {'Idris.Prelude.Left', V10778} end(E120);
																	{'Idris.Prelude.Right', E121} ->
																	    fun (V10779) ->
																		    begin
																		      V10780 = ('un--nfToCFType'(V0, V10704, V2, V10779))(V10709),
																		      case V10780 of
																			{'Idris.Prelude.Left', E122} -> fun (V10781) -> {'Idris.Prelude.Left', V10781} end(E122);
																			{'Idris.Prelude.Right', E123} -> fun (V10782) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10782}} end(E123);
																			_ -> erlang:throw("Error: Unreachable branch")
																		      end
																		    end
																	    end(E121);
																	_ -> erlang:throw("Error: Unreachable branch")
																      end
																    end
															    end(E119);
															_ -> erlang:throw("Error: Unreachable branch")
														      end
													      end(E102);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E100);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end(E98);
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								      end
							      end
						      end(E92, E93, E94, E95, E96);
						  {'Idris.Core.Value.NType', E124} -> fun (V10783) -> fun (V10784) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E124);
						  {'Idris.Core.Value.NErased', E125, E126} -> fun (V10785, V10786) -> fun (V10787) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E125, E126);
						  _ ->
						      fun (V10788) ->
							      begin
								V10817 = begin V10816 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10789) -> fun (V10790) -> fun (V10791) -> fun (V10792) -> fun (V10793) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10791, V10792, V10793) end end end end end, fun (V10794) -> fun (V10795) -> fun (V10796) -> V10795 end end end, fun (V10797) -> fun (V10798) -> fun (V10799) -> fun (V10800) -> fun (V10801) -> begin V10802 = V10799(V10801), begin V10803 = V10800(V10801), V10802(V10803) end end end end end end end}, fun (V10804) -> fun (V10805) -> fun (V10806) -> fun (V10807) -> fun (V10808) -> begin V10809 = V10806(V10808), (V10807(V10809))(V10808) end end end end end end, fun (V10810) -> fun (V10811) -> fun (V10812) -> begin V10813 = V10811(V10812), V10813(V10812) end end end end}, fun (V10814) -> fun (V10815) -> V10815 end end}, V0))(V10788), {'Idris.Prelude.Right', V10816} end,
								case V10817 of
								  {'Idris.Prelude.Left', E86} -> fun (V10818) -> {'Idris.Prelude.Left', V10818} end(E86);
								  {'Idris.Prelude.Right', E87} ->
								      fun (V10819) ->
									      begin
										V10820 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10819, {'Idris.Core.Env.Nil'}, V3, V10788),
										case V10820 of
										  {'Idris.Prelude.Left', E88} -> fun (V10821) -> {'Idris.Prelude.Left', V10821} end(E88);
										  {'Idris.Prelude.Right', E89} ->
										      fun (V10822) ->
											      begin
												V10827 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10823) -> fun (V10824) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10823, V10824) end end, fun (V10825) -> fun (V10826) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10825, V10826) end end}, V10822, V10788),
												case V10827 of
												  {'Idris.Prelude.Left', E90} -> fun (V10828) -> {'Idris.Prelude.Left', V10828} end(E90);
												  {'Idris.Prelude.Right', E91} -> fun (V10829) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10829))}, V10788) end(E91);
												  _ -> erlang:throw("Error: Unreachable branch")
												end
											      end
										      end(E89);
										  _ -> erlang:throw("Error: Unreachable branch")
										end
									      end
								      end(E87);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end
						end
					  end
				  end(E82, E83, E84, E85);
			      _ ->
				  case V3 of
				    {'Idris.Core.Value.NTCon', E47, E48, E49, E50, E51} ->
					fun (V10830, V10831, V10832, V10833, V10834) ->
						fun (V10835) ->
							begin
							  V10864 = begin V10863 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10836) -> fun (V10837) -> fun (V10838) -> fun (V10839) -> fun (V10840) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10838, V10839, V10840) end end end end end, fun (V10841) -> fun (V10842) -> fun (V10843) -> V10842 end end end, fun (V10844) -> fun (V10845) -> fun (V10846) -> fun (V10847) -> fun (V10848) -> begin V10849 = V10846(V10848), begin V10850 = V10847(V10848), V10849(V10850) end end end end end end end}, fun (V10851) -> fun (V10852) -> fun (V10853) -> fun (V10854) -> fun (V10855) -> begin V10856 = V10853(V10855), (V10854(V10856))(V10855) end end end end end end, fun (V10857) -> fun (V10858) -> fun (V10859) -> begin V10860 = V10858(V10859), V10860(V10859) end end end end}, fun (V10861) -> fun (V10862) -> V10862 end end}, V0))(V10835), {'Idris.Prelude.Right', V10863} end,
							  case V10864 of
							    {'Idris.Prelude.Left', E52} -> fun (V10865) -> {'Idris.Prelude.Left', V10865} end(E52);
							    {'Idris.Prelude.Right', E53} ->
								fun (V10866) ->
									begin
									  V10871 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10867) -> fun (V10868) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10867, V10868) end end, fun (V10869) -> fun (V10870) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V10869, V10870) end end}, V10831, V10835),
									  case V10871 of
									    {'Idris.Prelude.Left', E54} -> fun (V10872) -> {'Idris.Prelude.Left', V10872} end(E54);
									    {'Idris.Prelude.Right', E55} ->
										fun (V10873) ->
											begin
											  V10874 = ('un--getNArgs'(V10866, V10873, V10834))(V10835),
											  case V10874 of
											    {'Idris.Prelude.Left', E56} -> fun (V10875) -> {'Idris.Prelude.Left', V10875} end(E56);
											    {'Idris.Prelude.Right', E57} ->
												fun (V10876) ->
													case V10876 of
													  {'Idris.Compiler.CompileExpr.User', E58, E59} ->
													      fun (V10877, V10878) ->
														      begin
															V10880 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10879) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10866, V10879) end, V10878))(V10835),
															case V10880 of
															  {'Idris.Prelude.Left', E60} -> fun (V10881) -> {'Idris.Prelude.Left', V10881} end(E60);
															  {'Idris.Prelude.Right', E61} ->
															      fun (V10882) ->
																      begin
																	V10884 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V10883) -> 'un--nfToCFType'(V0, V10830, V2, V10883) end, V10882))(V10835),
																	case V10884 of
																	  {'Idris.Prelude.Left', E62} -> fun (V10885) -> {'Idris.Prelude.Left', V10885} end(E62);
																	  {'Idris.Prelude.Right', E63} -> fun (V10886) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V10873, V10886}} end(E63);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E61);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E58, E59);
													  {'Idris.Compiler.CompileExpr.Struct', E64, E65} ->
													      fun (V10887, V10888) ->
														      begin
															V10899 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																				   fun (V10889) ->
																					   case V10889 of
																					     {'Idris.Builtin.MkPair', E66, E67} ->
																						 fun (V10890, V10891) ->
																							 fun (V10892) ->
																								 begin
																								   V10893 = ('Idris.Core.Normalise':'un--evalClosure'([], V10866, V10891))(V10892),
																								   case V10893 of
																								     {'Idris.Prelude.Left', E68} -> fun (V10894) -> {'Idris.Prelude.Left', V10894} end(E68);
																								     {'Idris.Prelude.Right', E69} ->
																									 fun (V10895) ->
																										 begin
																										   V10896 = ('un--nfToCFType'(V0, V10830, 0, V10895))(V10892),
																										   case V10896 of
																										     {'Idris.Prelude.Left', E70} -> fun (V10897) -> {'Idris.Prelude.Left', V10897} end(E70);
																										     {'Idris.Prelude.Right', E71} -> fun (V10898) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V10890, V10898}} end(E71);
																										     _ -> erlang:throw("Error: Unreachable branch")
																										   end
																										 end
																									 end(E69);
																								     _ -> erlang:throw("Error: Unreachable branch")
																								   end
																								 end
																							 end
																						 end(E66, E67);
																					     _ -> erlang:throw("Error: Unreachable branch")
																					   end
																				   end,
																				   V10888))(V10835),
															case V10899 of
															  {'Idris.Prelude.Left', E72} -> fun (V10900) -> {'Idris.Prelude.Left', V10900} end(E72);
															  {'Idris.Prelude.Right', E73} -> fun (V10901) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V10887, V10901}} end(E73);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E64, E65);
													  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
													  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
													  {'Idris.Compiler.CompileExpr.NIORes', E74} ->
													      fun (V10902) ->
														      begin
															V10903 = ('Idris.Core.Normalise':'un--evalClosure'([], V10866, V10902))(V10835),
															case V10903 of
															  {'Idris.Prelude.Left', E75} -> fun (V10904) -> {'Idris.Prelude.Left', V10904} end(E75);
															  {'Idris.Prelude.Right', E76} ->
															      fun (V10905) ->
																      begin
																	V10906 = ('un--nfToCFType'(V0, V10830, V2, V10905))(V10835),
																	case V10906 of
																	  {'Idris.Prelude.Left', E77} -> fun (V10907) -> {'Idris.Prelude.Left', V10907} end(E77);
																	  {'Idris.Prelude.Right', E78} -> fun (V10908) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V10908}} end(E78);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E76);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E74);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												end(E57);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E55);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E53);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					end(E47, E48, E49, E50, E51);
				    {'Idris.Core.Value.NType', E79} -> fun (V10909) -> fun (V10910) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E79);
				    {'Idris.Core.Value.NErased', E80, E81} -> fun (V10911, V10912) -> fun (V10913) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E80, E81);
				    _ ->
					fun (V10914) ->
						begin
						  V10943 = begin V10942 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10915) -> fun (V10916) -> fun (V10917) -> fun (V10918) -> fun (V10919) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10917, V10918, V10919) end end end end end, fun (V10920) -> fun (V10921) -> fun (V10922) -> V10921 end end end, fun (V10923) -> fun (V10924) -> fun (V10925) -> fun (V10926) -> fun (V10927) -> begin V10928 = V10925(V10927), begin V10929 = V10926(V10927), V10928(V10929) end end end end end end end}, fun (V10930) -> fun (V10931) -> fun (V10932) -> fun (V10933) -> fun (V10934) -> begin V10935 = V10932(V10934), (V10933(V10935))(V10934) end end end end end end, fun (V10936) -> fun (V10937) -> fun (V10938) -> begin V10939 = V10937(V10938), V10939(V10938) end end end end}, fun (V10940) -> fun (V10941) -> V10941 end end}, V0))(V10914), {'Idris.Prelude.Right', V10942} end,
						  case V10943 of
						    {'Idris.Prelude.Left', E41} -> fun (V10944) -> {'Idris.Prelude.Left', V10944} end(E41);
						    {'Idris.Prelude.Right', E42} ->
							fun (V10945) ->
								begin
								  V10946 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V10945, {'Idris.Core.Env.Nil'}, V3, V10914),
								  case V10946 of
								    {'Idris.Prelude.Left', E43} -> fun (V10947) -> {'Idris.Prelude.Left', V10947} end(E43);
								    {'Idris.Prelude.Right', E44} ->
									fun (V10948) ->
										begin
										  V10953 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10949) -> fun (V10950) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V10949, V10950) end end, fun (V10951) -> fun (V10952) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V10951, V10952) end end}, V10948, V10914),
										  case V10953 of
										    {'Idris.Prelude.Left', E45} -> fun (V10954) -> {'Idris.Prelude.Left', V10954} end(E45);
										    {'Idris.Prelude.Right', E46} -> fun (V10955) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V10955))}, V10914) end(E46);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E44);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end(E42);
						    _ -> erlang:throw("Error: Unreachable branch")
						  end
						end
					end
				  end
			    end;
			0 ->
			    case V3 of
			      {'Idris.Core.Value.NBind', E179, E180, E181, E182} -> fun (V10956, V10957, V10958, V10959) -> fun (V10960) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', V10956, <<"Function types not allowed in a foreign struct"/utf8>>}, V10960) end end(E179, E180, E181, E182);
			      _ ->
				  case V3 of
				    {'Idris.Core.Value.NTCon', E144, E145, E146, E147, E148} ->
					fun (V10961, V10962, V10963, V10964, V10965) ->
						fun (V10966) ->
							begin
							  V10995 = begin V10994 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V10967) -> fun (V10968) -> fun (V10969) -> fun (V10970) -> fun (V10971) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V10969, V10970, V10971) end end end end end, fun (V10972) -> fun (V10973) -> fun (V10974) -> V10973 end end end, fun (V10975) -> fun (V10976) -> fun (V10977) -> fun (V10978) -> fun (V10979) -> begin V10980 = V10977(V10979), begin V10981 = V10978(V10979), V10980(V10981) end end end end end end end}, fun (V10982) -> fun (V10983) -> fun (V10984) -> fun (V10985) -> fun (V10986) -> begin V10987 = V10984(V10986), (V10985(V10987))(V10986) end end end end end end, fun (V10988) -> fun (V10989) -> fun (V10990) -> begin V10991 = V10989(V10990), V10991(V10990) end end end end}, fun (V10992) -> fun (V10993) -> V10993 end end}, V0))(V10966), {'Idris.Prelude.Right', V10994} end,
							  case V10995 of
							    {'Idris.Prelude.Left', E149} -> fun (V10996) -> {'Idris.Prelude.Left', V10996} end(E149);
							    {'Idris.Prelude.Right', E150} ->
								fun (V10997) ->
									begin
									  V11002 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V10998) -> fun (V10999) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V10998, V10999) end end, fun (V11000) -> fun (V11001) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V11000, V11001) end end}, V10962, V10966),
									  case V11002 of
									    {'Idris.Prelude.Left', E151} -> fun (V11003) -> {'Idris.Prelude.Left', V11003} end(E151);
									    {'Idris.Prelude.Right', E152} ->
										fun (V11004) ->
											begin
											  V11005 = ('un--getNArgs'(V10997, V11004, V10965))(V10966),
											  case V11005 of
											    {'Idris.Prelude.Left', E153} -> fun (V11006) -> {'Idris.Prelude.Left', V11006} end(E153);
											    {'Idris.Prelude.Right', E154} ->
												fun (V11007) ->
													case V11007 of
													  {'Idris.Compiler.CompileExpr.User', E155, E156} ->
													      fun (V11008, V11009) ->
														      begin
															V11011 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V11010) -> 'Idris.Core.Normalise':'un--evalClosure'([], V10997, V11010) end, V11009))(V10966),
															case V11011 of
															  {'Idris.Prelude.Left', E157} -> fun (V11012) -> {'Idris.Prelude.Left', V11012} end(E157);
															  {'Idris.Prelude.Right', E158} ->
															      fun (V11013) ->
																      begin
																	V11015 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V11014) -> 'un--nfToCFType'(V0, V10961, V2, V11014) end, V11013))(V10966),
																	case V11015 of
																	  {'Idris.Prelude.Left', E159} -> fun (V11016) -> {'Idris.Prelude.Left', V11016} end(E159);
																	  {'Idris.Prelude.Right', E160} -> fun (V11017) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V11004, V11017}} end(E160);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E158);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E155, E156);
													  {'Idris.Compiler.CompileExpr.Struct', E161, E162} ->
													      fun (V11018, V11019) ->
														      begin
															V11030 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																				   fun (V11020) ->
																					   case V11020 of
																					     {'Idris.Builtin.MkPair', E163, E164} ->
																						 fun (V11021, V11022) ->
																							 fun (V11023) ->
																								 begin
																								   V11024 = ('Idris.Core.Normalise':'un--evalClosure'([], V10997, V11022))(V11023),
																								   case V11024 of
																								     {'Idris.Prelude.Left', E165} -> fun (V11025) -> {'Idris.Prelude.Left', V11025} end(E165);
																								     {'Idris.Prelude.Right', E166} ->
																									 fun (V11026) ->
																										 begin
																										   V11027 = ('un--nfToCFType'(V0, V10961, 0, V11026))(V11023),
																										   case V11027 of
																										     {'Idris.Prelude.Left', E167} -> fun (V11028) -> {'Idris.Prelude.Left', V11028} end(E167);
																										     {'Idris.Prelude.Right', E168} -> fun (V11029) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V11021, V11029}} end(E168);
																										     _ -> erlang:throw("Error: Unreachable branch")
																										   end
																										 end
																									 end(E166);
																								     _ -> erlang:throw("Error: Unreachable branch")
																								   end
																								 end
																							 end
																						 end(E163, E164);
																					     _ -> erlang:throw("Error: Unreachable branch")
																					   end
																				   end,
																				   V11019))(V10966),
															case V11030 of
															  {'Idris.Prelude.Left', E169} -> fun (V11031) -> {'Idris.Prelude.Left', V11031} end(E169);
															  {'Idris.Prelude.Right', E170} -> fun (V11032) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V11018, V11032}} end(E170);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E161, E162);
													  {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
													  {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
													  {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
													  {'Idris.Compiler.CompileExpr.NIORes', E171} ->
													      fun (V11033) ->
														      begin
															V11034 = ('Idris.Core.Normalise':'un--evalClosure'([], V10997, V11033))(V10966),
															case V11034 of
															  {'Idris.Prelude.Left', E172} -> fun (V11035) -> {'Idris.Prelude.Left', V11035} end(E172);
															  {'Idris.Prelude.Right', E173} ->
															      fun (V11036) ->
																      begin
																	V11037 = ('un--nfToCFType'(V0, V10961, V2, V11036))(V10966),
																	case V11037 of
																	  {'Idris.Prelude.Left', E174} -> fun (V11038) -> {'Idris.Prelude.Left', V11038} end(E174);
																	  {'Idris.Prelude.Right', E175} -> fun (V11039) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V11039}} end(E175);
																	  _ -> erlang:throw("Error: Unreachable branch")
																	end
																      end
															      end(E173);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E171);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												end(E154);
											    _ -> erlang:throw("Error: Unreachable branch")
											  end
											end
										end(E152);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E150);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end
					end(E144, E145, E146, E147, E148);
				    {'Idris.Core.Value.NType', E176} -> fun (V11040) -> fun (V11041) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E176);
				    {'Idris.Core.Value.NErased', E177, E178} -> fun (V11042, V11043) -> fun (V11044) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E177, E178);
				    _ ->
					fun (V11045) ->
						begin
						  V11074 = begin V11073 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V11046) -> fun (V11047) -> fun (V11048) -> fun (V11049) -> fun (V11050) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V11048, V11049, V11050) end end end end end, fun (V11051) -> fun (V11052) -> fun (V11053) -> V11052 end end end, fun (V11054) -> fun (V11055) -> fun (V11056) -> fun (V11057) -> fun (V11058) -> begin V11059 = V11056(V11058), begin V11060 = V11057(V11058), V11059(V11060) end end end end end end end}, fun (V11061) -> fun (V11062) -> fun (V11063) -> fun (V11064) -> fun (V11065) -> begin V11066 = V11063(V11065), (V11064(V11066))(V11065) end end end end end end, fun (V11067) -> fun (V11068) -> fun (V11069) -> begin V11070 = V11068(V11069), V11070(V11069) end end end end}, fun (V11071) -> fun (V11072) -> V11072 end end}, V0))(V11045), {'Idris.Prelude.Right', V11073} end,
						  case V11074 of
						    {'Idris.Prelude.Left', E138} -> fun (V11075) -> {'Idris.Prelude.Left', V11075} end(E138);
						    {'Idris.Prelude.Right', E139} ->
							fun (V11076) ->
								begin
								  V11077 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V11076, {'Idris.Core.Env.Nil'}, V3, V11045),
								  case V11077 of
								    {'Idris.Prelude.Left', E140} -> fun (V11078) -> {'Idris.Prelude.Left', V11078} end(E140);
								    {'Idris.Prelude.Right', E141} ->
									fun (V11079) ->
										begin
										  V11084 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V11080) -> fun (V11081) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V11080, V11081) end end, fun (V11082) -> fun (V11083) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V11082, V11083) end end}, V11079, V11045),
										  case V11084 of
										    {'Idris.Prelude.Left', E142} -> fun (V11085) -> {'Idris.Prelude.Left', V11085} end(E142);
										    {'Idris.Prelude.Right', E143} -> fun (V11086) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V11086))}, V11045) end(E143);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end(E141);
								    _ -> erlang:throw("Error: Unreachable branch")
								  end
								end
							end(E139);
						    _ -> erlang:throw("Error: Unreachable branch")
						  end
						end
					end
				  end
			    end;
			_ ->
			    case V3 of
			      {'Idris.Core.Value.NTCon', E6, E7, E8, E9, E10} ->
				  fun (V11087, V11088, V11089, V11090, V11091) ->
					  fun (V11092) ->
						  begin
						    V11121 = begin V11120 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V11093) -> fun (V11094) -> fun (V11095) -> fun (V11096) -> fun (V11097) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V11095, V11096, V11097) end end end end end, fun (V11098) -> fun (V11099) -> fun (V11100) -> V11099 end end end, fun (V11101) -> fun (V11102) -> fun (V11103) -> fun (V11104) -> fun (V11105) -> begin V11106 = V11103(V11105), begin V11107 = V11104(V11105), V11106(V11107) end end end end end end end}, fun (V11108) -> fun (V11109) -> fun (V11110) -> fun (V11111) -> fun (V11112) -> begin V11113 = V11110(V11112), (V11111(V11113))(V11112) end end end end end end, fun (V11114) -> fun (V11115) -> fun (V11116) -> begin V11117 = V11115(V11116), V11117(V11116) end end end end}, fun (V11118) -> fun (V11119) -> V11119 end end}, V0))(V11092), {'Idris.Prelude.Right', V11120} end,
						    case V11121 of
						      {'Idris.Prelude.Left', E11} -> fun (V11122) -> {'Idris.Prelude.Left', V11122} end(E11);
						      {'Idris.Prelude.Right', E12} ->
							  fun (V11123) ->
								  begin
								    V11128 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V11124) -> fun (V11125) -> 'Idris.Core.Context':'dn--un--full_HasNames__Name'(V11124, V11125) end end, fun (V11126) -> fun (V11127) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Name'(V11126, V11127) end end}, V11088, V11092),
								    case V11128 of
								      {'Idris.Prelude.Left', E13} -> fun (V11129) -> {'Idris.Prelude.Left', V11129} end(E13);
								      {'Idris.Prelude.Right', E14} ->
									  fun (V11130) ->
										  begin
										    V11131 = ('un--getNArgs'(V11123, V11130, V11091))(V11092),
										    case V11131 of
										      {'Idris.Prelude.Left', E15} -> fun (V11132) -> {'Idris.Prelude.Left', V11132} end(E15);
										      {'Idris.Prelude.Right', E16} ->
											  fun (V11133) ->
												  case V11133 of
												    {'Idris.Compiler.CompileExpr.User', E17, E18} ->
													fun (V11134, V11135) ->
														begin
														  V11137 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V11136) -> 'Idris.Core.Normalise':'un--evalClosure'([], V11123, V11136) end, V11135))(V11092),
														  case V11137 of
														    {'Idris.Prelude.Left', E19} -> fun (V11138) -> {'Idris.Prelude.Left', V11138} end(E19);
														    {'Idris.Prelude.Right', E20} ->
															fun (V11139) ->
																begin
																  V11141 = ('Idris.Core.Core':'un--traverse'(erased, erased, fun (V11140) -> 'un--nfToCFType'(V0, V11087, V2, V11140) end, V11139))(V11092),
																  case V11141 of
																    {'Idris.Prelude.Left', E21} -> fun (V11142) -> {'Idris.Prelude.Left', V11142} end(E21);
																    {'Idris.Prelude.Right', E22} -> fun (V11143) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', V11130, V11143}} end(E22);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E20);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E17, E18);
												    {'Idris.Compiler.CompileExpr.Struct', E23, E24} ->
													fun (V11144, V11145) ->
														begin
														  V11156 = ('Idris.Core.Core':'un--traverse'(erased, erased,
																			     fun (V11146) ->
																				     case V11146 of
																				       {'Idris.Builtin.MkPair', E25, E26} ->
																					   fun (V11147, V11148) ->
																						   fun (V11149) ->
																							   begin
																							     V11150 = ('Idris.Core.Normalise':'un--evalClosure'([], V11123, V11148))(V11149),
																							     case V11150 of
																							       {'Idris.Prelude.Left', E27} -> fun (V11151) -> {'Idris.Prelude.Left', V11151} end(E27);
																							       {'Idris.Prelude.Right', E28} ->
																								   fun (V11152) ->
																									   begin
																									     V11153 = ('un--nfToCFType'(V0, V11087, 0, V11152))(V11149),
																									     case V11153 of
																									       {'Idris.Prelude.Left', E29} -> fun (V11154) -> {'Idris.Prelude.Left', V11154} end(E29);
																									       {'Idris.Prelude.Right', E30} -> fun (V11155) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', V11147, V11155}} end(E30);
																									       _ -> erlang:throw("Error: Unreachable branch")
																									     end
																									   end
																								   end(E28);
																							       _ -> erlang:throw("Error: Unreachable branch")
																							     end
																							   end
																						   end
																					   end(E25, E26);
																				       _ -> erlang:throw("Error: Unreachable branch")
																				     end
																			     end,
																			     V11145))(V11092),
														  case V11156 of
														    {'Idris.Prelude.Left', E31} -> fun (V11157) -> {'Idris.Prelude.Left', V11157} end(E31);
														    {'Idris.Prelude.Right', E32} -> fun (V11158) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFStruct', V11144, V11158}} end(E32);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E23, E24);
												    {'Idris.Compiler.CompileExpr.NUnit'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUnit'}} end();
												    {'Idris.Compiler.CompileExpr.NPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFPtr'}} end();
												    {'Idris.Compiler.CompileExpr.NGCPtr'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end();
												    {'Idris.Compiler.CompileExpr.NBuffer'} -> fun () -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end();
												    {'Idris.Compiler.CompileExpr.NIORes', E33} ->
													fun (V11159) ->
														begin
														  V11160 = ('Idris.Core.Normalise':'un--evalClosure'([], V11123, V11159))(V11092),
														  case V11160 of
														    {'Idris.Prelude.Left', E34} -> fun (V11161) -> {'Idris.Prelude.Left', V11161} end(E34);
														    {'Idris.Prelude.Right', E35} ->
															fun (V11162) ->
																begin
																  V11163 = ('un--nfToCFType'(V0, V11087, V2, V11162))(V11092),
																  case V11163 of
																    {'Idris.Prelude.Left', E36} -> fun (V11164) -> {'Idris.Prelude.Left', V11164} end(E36);
																    {'Idris.Prelude.Right', E37} -> fun (V11165) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFIORes', V11165}} end(E37);
																    _ -> erlang:throw("Error: Unreachable branch")
																  end
																end
															end(E35);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
														end
													end(E33);
												    _ -> erlang:throw("Error: Unreachable branch")
												  end
											  end(E16);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end
									  end(E14);
								      _ -> erlang:throw("Error: Unreachable branch")
								    end
								  end
							  end(E12);
						      _ -> erlang:throw("Error: Unreachable branch")
						    end
						  end
					  end
				  end(E6, E7, E8, E9, E10);
			      {'Idris.Core.Value.NType', E38} -> fun (V11166) -> fun (V11167) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E38);
			      {'Idris.Core.Value.NErased', E39, E40} -> fun (V11168, V11169) -> fun (V11170) -> {'Idris.Prelude.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E39, E40);
			      _ ->
				  fun (V11171) ->
					  begin
					    V11200 = begin V11199 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V11172) -> fun (V11173) -> fun (V11174) -> fun (V11175) -> fun (V11176) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V11174, V11175, V11176) end end end end end, fun (V11177) -> fun (V11178) -> fun (V11179) -> V11178 end end end, fun (V11180) -> fun (V11181) -> fun (V11182) -> fun (V11183) -> fun (V11184) -> begin V11185 = V11182(V11184), begin V11186 = V11183(V11184), V11185(V11186) end end end end end end end}, fun (V11187) -> fun (V11188) -> fun (V11189) -> fun (V11190) -> fun (V11191) -> begin V11192 = V11189(V11191), (V11190(V11192))(V11191) end end end end end end, fun (V11193) -> fun (V11194) -> fun (V11195) -> begin V11196 = V11194(V11195), V11196(V11195) end end end end}, fun (V11197) -> fun (V11198) -> V11198 end end}, V0))(V11171), {'Idris.Prelude.Right', V11199} end,
					    case V11200 of
					      {'Idris.Prelude.Left', E0} -> fun (V11201) -> {'Idris.Prelude.Left', V11201} end(E0);
					      {'Idris.Prelude.Right', E1} ->
						  fun (V11202) ->
							  begin
							    V11203 = 'Idris.Core.Normalise':'dn--un--quote_Quote__NF'([], V11202, {'Idris.Core.Env.Nil'}, V3, V11171),
							    case V11203 of
							      {'Idris.Prelude.Left', E2} -> fun (V11204) -> {'Idris.Prelude.Left', V11204} end(E2);
							      {'Idris.Prelude.Right', E3} ->
								  fun (V11205) ->
									  begin
									    V11210 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V11206) -> fun (V11207) -> 'Idris.Core.Context':'dn--un--full_HasNames__(Term $vars)'(erased, V11206, V11207) end end, fun (V11208) -> fun (V11209) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'(erased, V11208, V11209) end end}, V11205, V11171),
									    case V11210 of
									      {'Idris.Prelude.Left', E4} -> fun (V11211) -> {'Idris.Prelude.Left', V11211} end(E4);
									      {'Idris.Prelude.Right', E5} -> fun (V11212) -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V3), 'Idris.Prelude.Strings':'un--++'(<<"Can't marshal type for foreign call "/utf8>>, 'Idris.Core.TT':'dn--un--show_Show__(Term $vars)'([], V11212))}, V11171) end(E5);
									      _ -> erlang:throw("Error: Unreachable branch")
									    end
									  end
								  end(E3);
							      _ -> erlang:throw("Error: Unreachable branch")
							    end
							  end
						  end(E1);
					      _ -> erlang:throw("Error: Unreachable branch")
					    end
					  end
				  end
			    end
		      end
		end
	  end
    end.

'un--natHackTree'(V0, V1) ->
    case V1 of
      {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> fun (V2, V3, V4, V5) -> 'case--natHackTree-5683'(erased, V5, V4, V3, V2, ('Idris.Prelude':'un--any'(erased, erased, {'Idris.Prelude.dn--un--__mkFoldable', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> 'Idris.Prelude':'dn--un--foldr_Foldable__List'(erased, erased, V8, V9, V10) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> 'Idris.Prelude':'dn--un--foldl_Foldable__List'(erased, erased, V13, V14, V15) end end end end end}, fun (V16) -> 'un--natBranch'(erased, V16) end))(V4)) end(E0, E1, E2, E3);
      _ -> V1
    end.

'un--natHack'(V0, V1) ->
    case V1 of
      {'Idris.Core.CompileExpr.CCon', E0, E1, E2, E3} ->
	  fun (V2, V3, V4, V5) ->
		  case V3 of
		    {'Idris.Core.Name.NS', E4, E5} ->
			fun (V6, V7) ->
				case V6 of
				  [E6 | E7] ->
				      fun (V8, V9) ->
					      case unicode:characters_to_binary(V8) of
						<<"Prelude"/utf8>> ->
						    case V9 of
						      [] ->
							  case V7 of
							    {'Idris.Core.Name.UN', E8} ->
								fun (V10) ->
									case unicode:characters_to_binary(V10) of
									  <<"Z"/utf8>> ->
									      case V5 of
										[] -> {'Idris.Core.CompileExpr.CPrimVal', V2, {'Idris.Core.TT.BI', 0}};
										_ -> V1
									      end;
									  <<"S"/utf8>> ->
									      case V5 of
										[E9 | E10] ->
										    fun (V11, V12) ->
											    case V12 of
											      [] -> {'Idris.Core.CompileExpr.CApp', V2, {'Idris.Core.CompileExpr.CRef', V2, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [{'Idris.Core.CompileExpr.CPrimVal', V2, {'Idris.Core.TT.BI', 1}}, V11]};
											      _ -> V1
											    end
										    end(E9, E10);
										_ -> V1
									      end;
									  _ -> V1
									end
								end(E8);
							    _ -> V1
							  end;
						      _ -> V1
						    end;
						_ -> V1
					      end
				      end(E6, E7);
				  _ -> V1
				end
			end(E4, E5);
		    _ -> V1
		  end
	  end(E0, E1, E2, E3);
      {'Idris.Core.CompileExpr.CApp', E11, E12, E13} ->
	  fun (V13, V14, V15) ->
		  case V14 of
		    {'Idris.Core.CompileExpr.CRef', E14, E15} ->
			fun (V16, V17) ->
				case V17 of
				  {'Idris.Core.Name.NS', E16, E17} ->
				      fun (V18, V19) ->
					      case V18 of
						[E18 | E19] ->
						    fun (V20, V21) ->
							    case unicode:characters_to_binary(V20) of
							      <<"Prelude"/utf8>> ->
								  case V21 of
								    [] ->
									case V19 of
									  {'Idris.Core.Name.UN', E20} ->
									      fun (V22) ->
										      case unicode:characters_to_binary(V22) of
											<<"natToInteger"/utf8>> ->
											    case V15 of
											      [E21 | E22] ->
												  fun (V23, V24) ->
													  case V24 of
													    [] -> V23;
													    _ -> V1
													  end
												  end(E21, E22);
											      _ -> V1
											    end;
											<<"integerToNat"/utf8>> ->
											    case V15 of
											      [E23 | E24] ->
												  fun (V25, V26) ->
													  case V26 of
													    [] -> V25;
													    _ -> V1
													  end
												  end(E23, E24);
											      _ -> V1
											    end;
											<<"plus"/utf8>> -> {'Idris.Core.CompileExpr.CApp', V13, {'Idris.Core.CompileExpr.CRef', V16, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, V15};
											<<"mult"/utf8>> -> {'Idris.Core.CompileExpr.CApp', V13, {'Idris.Core.CompileExpr.CRef', V16, {'Idris.Core.Name.UN', <<"prim__mul_Integer"/utf8>>}}, V15};
											_ -> V1
										      end
									      end(E20);
									  _ -> V1
									end;
								    _ -> V1
								  end;
							      <<"Nat"/utf8>> ->
								  case V21 of
								    [E25 | E26] ->
									fun (V27, V28) ->
										case unicode:characters_to_binary(V27) of
										  <<"Data"/utf8>> ->
										      case V28 of
											[] ->
											    case V19 of
											      {'Idris.Core.Name.UN', E27} ->
												  fun (V29) ->
													  case unicode:characters_to_binary(V29) of
													    <<"minus"/utf8>> -> {'Idris.Core.CompileExpr.CApp', V13, {'Idris.Core.CompileExpr.CRef', V16, {'Idris.Core.Name.UN', <<"prim__sub_Integer"/utf8>>}}, V15};
													    _ -> V1
													  end
												  end(E27);
											      _ -> V1
											    end;
											_ -> V1
										      end;
										  _ -> V1
										end
									end(E25, E26);
								    _ -> V1
								  end;
							      _ -> V1
							    end
						    end(E18, E19);
						_ -> V1
					      end
				      end(E16, E17);
				  _ -> V1
				end
			end(E14, E15);
		    _ -> V1
		  end
	  end(E11, E12, E13);
      {'Idris.Core.CompileExpr.CLam', E28, E29, E30} -> fun (V30, V31, V32) -> {'Idris.Core.CompileExpr.CLam', V30, V31, 'un--natHack'(erased, V32)} end(E28, E29, E30);
      _ -> V1
    end.

'un--natBranch'(V0, V1) ->
    case V1 of
      {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> fun (V2, V3, V4, V5) -> 'un--isNatCon'(V2) end(E0, E1, E2, E3);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--mkForgetDef'(V0, V1, V2) ->
    begin
      V31 = begin V30 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5, V6, V7) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin V16 = V13(V15), begin V17 = V14(V15), V16(V17) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin V23 = V20(V22), (V21(V23))(V22) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin V27 = V25(V26), V27(V26) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, V0))(V2), {'Idris.Prelude.Right', V30} end,
      case V31 of
	{'Idris.Prelude.Left', E0} -> fun (V32) -> {'Idris.Prelude.Left', V32} end(E0);
	{'Idris.Prelude.Right', E1} ->
	    fun (V33) ->
		    begin
		      V60 = ('Idris.Core.Context':'un--lookupCtxtExact'(V1,
									case V33 of
									  {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V34 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27);
									  _ -> erlang:throw("Error: Unreachable branch")
									end))(V2),
		      case V60 of
			{'Idris.Prelude.Left', E28} -> fun (V61) -> {'Idris.Prelude.Left', V61} end(E28);
			{'Idris.Prelude.Right', E29} ->
			    fun (V62) ->
				    case V62 of
				      {'Idris.Prelude.Just', E30} ->
					  fun (V63) ->
						  begin
						    V64 = {'Idris.Prelude.Just', V63},
						    ('case--case block in mkForgetDef-9072'(V1, V0, V33, V63, V64,
											    case V63 of
											      {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> fun (V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85) -> V83 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51);
											      _ -> erlang:throw("Error: Unreachable branch")
											    end))(V2)
						  end
					  end(E30);
				      {'Idris.Prelude.Nothing'} -> fun () -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.InternalError', 'Idris.Prelude.Strings':'un--++'(<<"Trying to compile unknown name "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V1))}, V2) end();
				      _ -> erlang:throw("Error: Unreachable branch")
				    end
			    end(E29);
			_ -> erlang:throw("Error: Unreachable branch")
		      end
		    end
	    end(E1);
	_ -> erlang:throw("Error: Unreachable branch")
      end
    end.

'un--mkDropSubst'(V0, V1, V2, V3) ->
    case V3 of
      [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}};
      [E0 | E1] -> fun (V4, V5) -> 'case--mkDropSubst-5310'(V4, V5, V2, V1, V0, 'un--mkDropSubst'('Idris.Prelude':'dn--un--+_Num__Nat'(1 + 0, V0), V1, V2, V5)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--mkArgList'(V0, V1) ->
    case V1 of
      0 -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Compiler.CompileExpr.NoArgs'}};
      _ -> begin V2 = V1 - 1, 'case--mkArgList-7586'(V2, V0, 'un--mkArgList'((V0 + 1) rem 9223372036854775808, V2)) end
    end.

'un--isNatCon'(V0) ->
    case V0 of
      {'Idris.Core.Name.NS', E0, E1} ->
	  fun (V1, V2) ->
		  case V1 of
		    [E2 | E3] ->
			fun (V3, V4) ->
				case unicode:characters_to_binary(V3) of
				  <<"Prelude"/utf8>> ->
				      case V4 of
					[] ->
					    case V2 of
					      {'Idris.Core.Name.UN', E4} ->
						  fun (V5) ->
							  case unicode:characters_to_binary(V5) of
							    <<"Z"/utf8>> -> 0;
							    <<"S"/utf8>> -> 0;
							    _ -> 1
							  end
						  end(E4);
					      _ -> 1
					    end;
					_ -> 1
				      end;
				  _ -> 1
				end
			end(E2, E3);
		    _ -> 1
		  end
	  end(E0, E1);
      _ -> 1
    end.

'un--getZBranch'(V0, V1) ->
    case V1 of
      [] -> {'Idris.Prelude.Nothing'};
      [E0 | E1] -> fun (V2, V3) -> 'Idris.Prelude':'dn--un--<+>_Semigroup__(Maybe $a)'(erased, 'un--tryZBranch'(erased, V2), 'un--getZBranch'(erased, V3)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--getSBranch'(V0, V1, V2) ->
    case V2 of
      [] -> {'Idris.Prelude.Nothing'};
      [E0 | E1] -> fun (V3, V4) -> 'Idris.Prelude':'dn--un--<+>_Semigroup__(Maybe $a)'(erased, 'un--trySBranch'(erased, V1, V3), 'un--getSBranch'(erased, V1, V4)) end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--getPArgs'(V0, V1, V2) ->
    begin
      V3 = ('Idris.Core.Normalise':'un--evalClosure'([], V0, V1))(V2),
      case V3 of
	{'Idris.Prelude.Left', E0} -> fun (V4) -> {'Idris.Prelude.Left', V4} end(E0);
	{'Idris.Prelude.Right', E1} ->
	    fun (V5) ->
		    case V5 of
		      {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> fun (V6, V7, V8, V9, V10) -> begin V11 = {'Idris.Core.Value.NDCon', V6, V7, V8, V9, V10}, ('case--case block in getPArgs-7642'(V1, V0, V7, V8, V9, V10, V6, V11, 'Idris.Data.List':'un--reverse'(erased, V10)))(V2) end end(E2, E3, E4, E5, E6);
		      _ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V5), <<"Badly formed struct type"/utf8>>}, V2)
		    end
	    end(E1);
	_ -> erlang:throw("Error: Unreachable branch")
      end
    end.

'un--getNewType'(V0, V1, V2, V3, V4, V5) ->
    case V5 of
      [] -> fun (V6) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end;
      [E0 | E1] ->
	  fun (V7, V8) ->
		  case V7 of
		    {'Idris.Core.CaseTree.DefaultCase', E2} -> fun (V9) -> fun (V10) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end end(E2);
		    {'Idris.Core.CaseTree.ConCase', E3, E4, E5, E6} ->
			fun (V11, V12, V13, V14) ->
				fun (V15) ->
					begin
					  V44 = begin V43 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V18, V19, V20) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin V29 = V26(V28), begin V30 = V27(V28), V29(V30) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin V36 = V33(V35), (V34(V36))(V35) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin V40 = V38(V39), V40(V39) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, V1))(V15), {'Idris.Prelude.Right', V43} end,
					  case V44 of
					    {'Idris.Prelude.Left', E7} -> fun (V45) -> {'Idris.Prelude.Left', V45} end(E7);
					    {'Idris.Prelude.Right', E8} ->
						fun (V46) ->
							begin
							  V73 = 'Idris.Core.Context':'un--lookupDefExact'(V11,
													  case V46 of
													    {'Idris.Core.Context.MkDefs', E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> fun (V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72) -> V47 end(E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end,
													  V15),
							  case V73 of
							    {'Idris.Prelude.Left', E35} -> fun (V74) -> {'Idris.Prelude.Left', V74} end(E35);
							    {'Idris.Prelude.Right', E36} ->
								fun (V75) ->
									case V75 of
									  {'Idris.Prelude.Just', E37} ->
									      fun (V76) ->
										      case V76 of
											{'Idris.Core.Context.DCon', E38, E39, E40} ->
											    fun (V77, V78, V79) ->
												    case V79 of
												      {'Idris.Prelude.Just', E41} ->
													  fun (V80) ->
														  case V80 of
														    {'Idris.Builtin.MkPair', E42, E43} ->
															fun (V81, V82) ->
																begin
																  V83 = 'nested--9395-6862--in--un--mkSubst'(V13, V0, V14, V12, V11, V8, V4, V3, V2, V1, erased, 0, V3, V82, V13),
																  begin
																    V84 = ('un--toCExpTree'('Idris.Prelude.List':'un--++'(erased, V13, V0), V1, V4, V14))(V15),
																    case V84 of
																      {'Idris.Prelude.Left', E44} -> fun (V85) -> {'Idris.Prelude.Left', V85} end(E44);
																      {'Idris.Prelude.Right', E45} -> fun (V86) -> {'Idris.Prelude.Right', {'Idris.Prelude.Just', 'Idris.Core.CompileExpr':'un--substs'(V13, V0, V83, V86)}} end(E45);
																      _ -> erlang:throw("Error: Unreachable branch")
																    end
																  end
																end
															end(E42, E43);
														    _ -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}}
														  end
													  end(E41);
												      _ -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}}
												    end
											    end(E38, E39, E40);
											_ -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}}
										      end
									      end(E37);
									  _ -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}}
									end
								end(E36);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end(E8);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E3, E4, E5, E6);
		    _ -> 'un--getNewType'(V0, V1, V2, V3, V4, V8)
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--getNArgs'(V0, V1, V2) ->
    case V1 of
      {'Idris.Core.Name.NS', E0, E1} ->
	  fun (V3, V4) ->
		  case V4 of
		    {'Idris.Core.Name.UN', E2} ->
			fun (V5) ->
				case unicode:characters_to_binary(V5) of
				  <<"IORes"/utf8>> ->
				      case V2 of
					[E3 | E4] ->
					    fun (V6, V7) ->
						    case V7 of
						      [] -> fun (V8) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NIORes', V6}} end;
						      _ -> fun (V9) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
						    end
					    end(E3, E4);
					_ -> fun (V10) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"Ptr"/utf8>> ->
				      case V2 of
					[E5 | E6] ->
					    fun (V11, V12) ->
						    case V12 of
						      [] -> fun (V13) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NPtr'}} end;
						      _ -> fun (V14) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
						    end
					    end(E5, E6);
					_ -> fun (V15) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"AnyPtr"/utf8>> ->
				      case V2 of
					[] -> fun (V16) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NPtr'}} end;
					_ -> fun (V17) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"GCPtr"/utf8>> ->
				      case V2 of
					[E7 | E8] ->
					    fun (V18, V19) ->
						    case V19 of
						      [] -> fun (V20) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}} end;
						      _ -> fun (V21) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
						    end
					    end(E7, E8);
					_ -> fun (V22) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"GCAnyPtr"/utf8>> ->
				      case V2 of
					[] -> fun (V23) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}} end;
					_ -> fun (V24) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"Buffer"/utf8>> ->
				      case V2 of
					[] -> fun (V25) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NBuffer'}} end;
					_ -> fun (V26) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"Unit"/utf8>> ->
				      case V2 of
					[] -> fun (V27) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.NUnit'}} end;
					_ -> fun (V28) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  <<"Struct"/utf8>> ->
				      case V2 of
					[E9 | E10] ->
					    fun (V29, V30) ->
						    case V30 of
						      [E11 | E12] ->
							  fun (V31, V32) ->
								  case V32 of
								    [] ->
									fun (V33) ->
										begin
										  V34 = ('Idris.Core.Normalise':'un--evalClosure'([], V0, V29))(V33),
										  case V34 of
										    {'Idris.Prelude.Left', E13} -> fun (V35) -> {'Idris.Prelude.Left', V35} end(E13);
										    {'Idris.Prelude.Right', E14} ->
											fun (V36) ->
												case V36 of
												  {'Idris.Core.Value.NPrimVal', E15, E16} ->
												      fun (V37, V38) ->
													      case V38 of
														{'Idris.Core.TT.Str', E17} ->
														    fun (V39) ->
															    begin
															      V40 = 'un--getFieldArgs'(V0, V31, V33),
															      case V40 of
																{'Idris.Prelude.Left', E18} -> fun (V41) -> {'Idris.Prelude.Left', V41} end(E18);
																{'Idris.Prelude.Right', E19} -> fun (V42) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.Struct', V39, V42}} end(E19);
																_ -> erlang:throw("Error: Unreachable branch")
															      end
															    end
														    end(E17);
														_ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V36), <<"Unknown name for struct"/utf8>>}, V33)
													      end
												      end(E15, E16);
												  _ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V36), <<"Unknown name for struct"/utf8>>}, V33)
												end
											end(E14);
										    _ -> erlang:throw("Error: Unreachable branch")
										  end
										end
									end;
								    _ -> fun (V43) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
								  end
							  end(E11, E12);
						      _ -> fun (V44) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
						    end
					    end(E9, E10);
					_ -> fun (V45) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				      end;
				  _ -> fun (V46) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
				end
			end(E2);
		    _ -> fun (V47) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
		  end
	  end(E0, E1);
      _ -> fun (V48) -> {'Idris.Prelude.Right', {'Idris.Compiler.CompileExpr.User', V1, V2}} end
    end.

'un--getFieldArgs'(V0, V1, V2) ->
    begin
      V3 = ('Idris.Core.Normalise':'un--evalClosure'([], V0, V1))(V2),
      case V3 of
	{'Idris.Prelude.Left', E0} -> fun (V4) -> {'Idris.Prelude.Left', V4} end(E0);
	{'Idris.Prelude.Right', E1} ->
	    fun (V5) ->
		    case V5 of
		      {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} ->
			  fun (V6, V7, V8, V9, V10) ->
				  case V10 of
				    [E7 | E8] ->
					fun (V11, V12) ->
						case V12 of
						  [E9 | E10] ->
						      fun (V13, V14) ->
							      case V14 of
								[E11 | E12] ->
								    fun (V15, V16) ->
									    case V16 of
									      [] ->
										  begin
										    V17 = 'un--getFieldArgs'(V0, V15, V2),
										    case V17 of
										      {'Idris.Prelude.Left', E13} -> fun (V18) -> {'Idris.Prelude.Left', V18} end(E13);
										      {'Idris.Prelude.Right', E14} ->
											  fun (V19) ->
												  begin
												    V20 = 'un--getPArgs'(V0, V13, V2),
												    case V20 of
												      {'Idris.Prelude.Left', E15} -> fun (V21) -> {'Idris.Prelude.Left', V21} end(E15);
												      {'Idris.Prelude.Right', E16} ->
													  fun (V22) ->
														  case V22 of
														    {'Idris.Builtin.MkPair', E17, E18} -> fun (V23, V24) -> {'Idris.Prelude.Right', [{'Idris.Builtin.MkPair', V23, V24} | V19]} end(E17, E18);
														    _ -> erlang:throw("Error: Unreachable branch")
														  end
													  end(E16);
												      _ -> erlang:throw("Error: Unreachable branch")
												    end
												  end
											  end(E14);
										      _ -> erlang:throw("Error: Unreachable branch")
										    end
										  end;
									      _ -> {'Idris.Prelude.Right', []}
									    end
								    end(E11, E12);
								_ -> {'Idris.Prelude.Right', []}
							      end
						      end(E9, E10);
						  _ -> {'Idris.Prelude.Right', []}
						end
					end(E7, E8);
				    _ -> {'Idris.Prelude.Right', []}
				  end
			  end(E2, E3, E4, E5, E6);
		      _ -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.GenericMsg', 'Idris.Core.Value':'un--getLoc'(erased, V5), <<"Badly formed struct type"/utf8>>}, V2)
		    end
	    end(E1);
	_ -> erlang:throw("Error: Unreachable branch")
      end
    end.

'un--getDef'(V0, V1, V2, V3) ->
    case V3 of
      [] -> fun (V4) -> {'Idris.Prelude.Right', {'Idris.Prelude.Nothing'}} end;
      [E0 | E1] ->
	  fun (V5, V6) ->
		  case V5 of
		    {'Idris.Core.CaseTree.DefaultCase', E2} ->
			fun (V7) ->
				fun (V8) ->
					begin
					  V9 = ('un--toCExpTree'(V0, V1, V2, V7))(V8),
					  case V9 of
					    {'Idris.Prelude.Left', E3} -> fun (V10) -> {'Idris.Prelude.Left', V10} end(E3);
					    {'Idris.Prelude.Right', E4} -> fun (V11) -> {'Idris.Prelude.Right', {'Idris.Prelude.Just', V11}} end(E4);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E2);
		    {'Idris.Core.CaseTree.ConstCase', E5, E6} ->
			fun (V12, V13) ->
				case V12 of
				  {'Idris.Core.TT.WorldVal'} ->
				      fun () ->
					      fun (V14) ->
						      begin
							V15 = ('un--toCExpTree'(V0, V1, V2, V13))(V14),
							case V15 of
							  {'Idris.Prelude.Left', E7} -> fun (V16) -> {'Idris.Prelude.Left', V16} end(E7);
							  {'Idris.Prelude.Right', E8} -> fun (V17) -> {'Idris.Prelude.Right', {'Idris.Prelude.Just', V17}} end(E8);
							  _ -> erlang:throw("Error: Unreachable branch")
							end
						      end
					      end
				      end();
				  _ -> 'un--getDef'(V0, V1, V2, V6)
				end
			end(E5, E6);
		    _ -> 'un--getDef'(V0, V1, V2, V6)
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--getCFTypes'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.Value.NBind', E2, E3, E4, E5} ->
	  fun (V3, V4, V5, V6) ->
		  case V5 of
		    {'Idris.Core.TT.Pi', E8, E9, E10} ->
			fun (V7, V8, V9) ->
				fun (V10) ->
					begin
					  V11 = ('un--nfToCFType'(V0, V3, 1, V9))(V10),
					  case V11 of
					    {'Idris.Prelude.Left', E11} -> fun (V12) -> {'Idris.Prelude.Left', V12} end(E11);
					    {'Idris.Prelude.Right', E12} ->
						fun (V13) ->
							begin
							  V42 = begin V41 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V16, V17, V18) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> V20 end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin V27 = V24(V26), begin V28 = V25(V26), V27(V28) end end end end end end end}, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin V34 = V31(V33), (V32(V34))(V33) end end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> begin V38 = V36(V37), V38(V37) end end end end}, fun (V39) -> fun (V40) -> V40 end end}, V0))(V10), {'Idris.Prelude.Right', V41} end,
							  case V42 of
							    {'Idris.Prelude.Left', E13} -> fun (V43) -> {'Idris.Prelude.Left', V43} end(E13);
							    {'Idris.Prelude.Right', E14} ->
								fun (V44) ->
									begin
									  V45 = ((V6(V44))('Idris.Core.Normalise':'un--toClosure'(erased, 'Idris.Core.Value':'un--defaultOpts'(), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3, 1})))(V10),
									  case V45 of
									    {'Idris.Prelude.Left', E15} -> fun (V46) -> {'Idris.Prelude.Left', V46} end(E15);
									    {'Idris.Prelude.Right', E16} -> fun (V47) -> ('un--getCFTypes'(V0, [V13 | V1], V47))(V10) end(E16);
									    _ -> erlang:throw("Error: Unreachable branch")
									  end
									end
								end(E14);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end(E12);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E8, E9, E10);
		    _ ->
			fun (V48) ->
				begin
				  V49 = ('un--nfToCFType'(V0, 'Idris.Core.Value':'un--getLoc'(erased, V2), 1, V2))(V48),
				  case V49 of
				    {'Idris.Prelude.Left', E6} -> fun (V50) -> {'Idris.Prelude.Left', V50} end(E6);
				    {'Idris.Prelude.Right', E7} -> fun (V51) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', 'Idris.Data.List':'un--reverse'(erased, V1), V51}} end(E7);
				    _ -> erlang:throw("Error: Unreachable branch")
				  end
				end
			end
		  end
	  end(E2, E3, E4, E5);
      _ ->
	  fun (V52) ->
		  begin
		    V53 = ('un--nfToCFType'(V0, 'Idris.Core.Value':'un--getLoc'(erased, V2), 1, V2))(V52),
		    case V53 of
		      {'Idris.Prelude.Left', E0} -> fun (V54) -> {'Idris.Prelude.Left', V54} end(E0);
		      {'Idris.Prelude.Right', E1} -> fun (V55) -> {'Idris.Prelude.Right', {'Idris.Builtin.MkPair', 'Idris.Data.List':'un--reverse'(erased, V1), V55}} end(E1);
		      _ -> erlang:throw("Error: Unreachable branch")
		    end
		  end
	  end
    end.

'un--expandToArity'(V0, V1, V2, V3) ->
    case V2 of
      {'Idris.Core.CompileExpr.CErased', E2} -> fun (V4) -> {'Idris.Core.CompileExpr.CErased', V4} end(E2);
      _ ->
	  case V1 of
	    0 -> 'nested--7810-5015--in--un--applyAll'(V0, V3, V2, V2, V3);
	    _ ->
		begin
		  V5 = V1 - 1,
		  case V3 of
		    [E0 | E1] -> fun (V6, V7) -> 'un--expandToArity'(V0, V5, 'nested--7810-5037--in--un--addArg'(V0, V5, V6, V7, V2, V2, V6), V7) end(E0, E1);
		    _ ->
			case V3 of
			  [] -> 'un--etaExpand'(V0, 0, V1, V2, []);
			  _ -> erlang:throw("Error: Unreachable branch")
			end
		  end
		end
	  end
    end.

'un--etaExpand'(V0, V1, V2, V3, V4) ->
    case V2 of
      0 -> 'nested--7714-4918--in--un--mkApp'(V0, V4, V3, V1, V3, 'Idris.Prelude':'dn--un--map_Functor__List'(erased, erased, fun (V5) -> 'nested--7714-4917--in--un--mkLocal'(V0, V4, V3, V1, 'Idris.Core.CompileExpr':'un--getFC'(erased, V3), V5) end, 'Idris.Data.List':'un--reverse'(erased, V4)));
      _ -> begin V6 = V2 - 1, {'Idris.Core.CompileExpr.CLam', 'Idris.Core.CompileExpr':'un--getFC'(erased, V3), {'Idris.Core.Name.MN', <<"eta"/utf8>>, V1}, 'un--etaExpand'([{'Idris.Core.Name.MN', <<"eta"/utf8>>, V1} | V0], (V1 + 1) rem 9223372036854775808, V6, 'Idris.Core.CompileExpr':'dn--un--weaken_Weaken__CExp'({'Idris.Core.Name.MN', <<"eta"/utf8>>, V1}, V0, V3), [0 | 'Idris.Prelude':'dn--un--map_Functor__List'(erased, erased, fun (V7) -> 'un--weakenVar'(erased, erased, V7) end, V4)])} end
    end.

'un--eraseConArgs'(V0, V1, V2, V3, V4) -> begin V5 = 'un--expandToArity'(V0, V1, V3, V4), 'un--dropPos'(erased, V2, V5) end.

'un--dropPos'(V0, V1, V2) ->
    case V2 of
      {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> fun (V3, V4, V5) -> {'Idris.Core.CompileExpr.CLam', V3, V4, 'un--dropPos'(erased, V1, V5)} end(E0, E1, E2);
      {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> fun (V6, V7, V8, V9) -> {'Idris.Core.CompileExpr.CCon', V6, V7, V8, 'nested--8031-5202--in--un--drop'(erased, V9, V8, V7, V6, V1, 0, V9)} end(E3, E4, E5, E6);
      _ -> V2
    end.

'un--constCases'(V0, V1, V2, V3) ->
    case V3 of
      [] -> fun (V4) -> {'Idris.Prelude.Right', []} end;
      [E0 | E1] ->
	  fun (V5, V6) ->
		  case V5 of
		    {'Idris.Core.CaseTree.ConstCase', E2, E3} ->
			fun (V7, V8) ->
				case V7 of
				  {'Idris.Core.TT.WorldVal'} -> fun () -> 'un--constCases'(V0, V1, V2, V6) end();
				  _ ->
				      fun (V9) ->
					      begin
						V10 = ('un--toCExpTree'(V0, V1, V2, V8))(V9),
						case V10 of
						  {'Idris.Prelude.Left', E4} -> fun (V11) -> {'Idris.Prelude.Left', V11} end(E4);
						  {'Idris.Prelude.Right', E5} ->
						      fun (V12) ->
							      begin
								V13 = ('un--constCases'(V0, V1, V2, V6))(V9),
								case V13 of
								  {'Idris.Prelude.Left', E6} -> fun (V14) -> {'Idris.Prelude.Left', V14} end(E6);
								  {'Idris.Prelude.Right', E7} -> fun (V15) -> {'Idris.Prelude.Right', [{'Idris.Core.CompileExpr.MkConstAlt', V7, V12} | V15]} end(E7);
								  _ -> erlang:throw("Error: Unreachable branch")
								end
							      end
						      end(E5);
						  _ -> erlang:throw("Error: Unreachable branch")
						end
					      end
				      end
				end
			end(E2, E3);
		    _ -> 'un--constCases'(V0, V1, V2, V6)
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--conCases'(V0, V1, V2, V3) ->
    case V3 of
      [] -> fun (V4) -> {'Idris.Prelude.Right', []} end;
      [E0 | E1] ->
	  fun (V5, V6) ->
		  case V5 of
		    {'Idris.Core.CaseTree.ConCase', E2, E3, E4, E5} ->
			fun (V7, V8, V9, V10) ->
				fun (V11) ->
					begin
					  V40 = begin V39 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V14, V15, V16) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin V25 = V22(V24), begin V26 = V23(V24), V25(V26) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin V32 = V29(V31), (V30(V32))(V31) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin V36 = V34(V35), V36(V35) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, V1))(V11), {'Idris.Prelude.Right', V39} end,
					  case V40 of
					    {'Idris.Prelude.Left', E6} -> fun (V41) -> {'Idris.Prelude.Left', V41} end(E6);
					    {'Idris.Prelude.Right', E7} ->
						fun (V42) ->
							begin
							  V69 = ('Idris.Core.Context':'un--lookupCtxtExact'(V7,
													    case V42 of
													      {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> fun (V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V43 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33);
													      _ -> erlang:throw("Error: Unreachable branch")
													    end))(V11),
							  case V69 of
							    {'Idris.Prelude.Left', E34} -> fun (V70) -> {'Idris.Prelude.Left', V70} end(E34);
							    {'Idris.Prelude.Right', E35} ->
								fun (V71) ->
									case V71 of
									  {'Idris.Prelude.Just', E36} ->
									      fun (V72) ->
										      begin
											V73 = {'Idris.Prelude.Just', V72},
											('case--case block in conCases-6533'(V9, V0, V10, V8, V7, V6, V2, V1, V42, V72, V73,
															     case V72 of
															       {'Idris.Core.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> fun (V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94) -> V91 end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57);
															       _ -> erlang:throw("Error: Unreachable branch")
															     end))(V11)
										      end
									      end(E36);
									  {'Idris.Prelude.Nothing'} ->
									      fun () ->
										      begin
											V95 = ('Idris.Core.Context':'un--getFullName'(V1, V7))(V11),
											case V95 of
											  {'Idris.Prelude.Left', E58} -> fun (V96) -> {'Idris.Prelude.Left', V96} end(E58);
											  {'Idris.Prelude.Right', E59} ->
											      fun (V97) ->
												      begin
													V98 = ('un--toCExpTree'('Idris.Prelude.List':'un--++'(erased, V9, V0), V1, V2, V10))(V11),
													case V98 of
													  {'Idris.Prelude.Left', E60} -> fun (V99) -> {'Idris.Prelude.Left', V99} end(E60);
													  {'Idris.Prelude.Right', E61} ->
													      fun (V100) ->
														      begin
															V101 = ('un--conCases'(V0, V1, V2, V6))(V11),
															case V101 of
															  {'Idris.Prelude.Left', E62} -> fun (V102) -> {'Idris.Prelude.Left', V102} end(E62);
															  {'Idris.Prelude.Right', E63} -> fun (V103) -> {'Idris.Prelude.Right', [{'Idris.Core.CompileExpr.MkConAlt', V97, {'Idris.Prelude.Nothing'}, V9, V100} | V103]} end(E63);
															  _ -> erlang:throw("Error: Unreachable branch")
															end
														      end
													      end(E61);
													  _ -> erlang:throw("Error: Unreachable branch")
													end
												      end
											      end(E59);
											  _ -> erlang:throw("Error: Unreachable branch")
											end
										      end
									      end();
									  _ -> erlang:throw("Error: Unreachable branch")
									end
								end(E35);
							    _ -> erlang:throw("Error: Unreachable branch")
							  end
							end
						end(E7);
					    _ -> erlang:throw("Error: Unreachable branch")
					  end
					end
				end
			end(E2, E3, E4, E5);
		    _ -> 'un--conCases'(V0, V1, V2, V6)
		  end
	  end(E0, E1);
      _ -> erlang:throw("Error: Unreachable branch")
    end.

'un--compileExp'(V0, V1, V2) ->
    begin
      V3 = ('un--toCExp'([], V0, {'Idris.Core.Name.UN', <<"main"/utf8>>}, V1))(V2),
      case V3 of
	{'Idris.Prelude.Left', E0} -> fun (V4) -> {'Idris.Prelude.Left', V4} end(E0);
	{'Idris.Prelude.Right', E1} -> fun (V5) -> {'Idris.Prelude.Right', V5} end(E1);
	_ -> erlang:throw("Error: Unreachable branch")
      end
    end.

'un--compileDef'(V0, V1, V2) ->
    begin
      V31 = begin V30 = ('Idris.Erlang.Data.IORef':'un--readIORef'(erased, erased, {'Idris.Prelude.dn--un--__mkHasIO', {'Idris.Prelude.dn--un--__mkMonad', {'Idris.Prelude.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> 'Idris.Prelude':'dn--un--map_Functor__IO'(erased, erased, V5, V6, V7) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin V16 = V13(V15), begin V17 = V14(V15), V16(V17) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin V23 = V20(V22), (V21(V23))(V22) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin V27 = V25(V26), V27(V26) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, V0))(V2), {'Idris.Prelude.Right', V30} end,
      case V31 of
	{'Idris.Prelude.Left', E0} -> fun (V32) -> {'Idris.Prelude.Left', V32} end(E0);
	{'Idris.Prelude.Right', E1} ->
	    fun (V33) ->
		    begin
		      V60 = ('Idris.Core.Context':'un--lookupCtxtExact'(V1,
									case V33 of
									  {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V34 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27);
									  _ -> erlang:throw("Error: Unreachable branch")
									end))(V2),
		      case V60 of
			{'Idris.Prelude.Left', E28} -> fun (V61) -> {'Idris.Prelude.Left', V61} end(E28);
			{'Idris.Prelude.Right', E29} ->
			    fun (V62) ->
				    case V62 of
				      {'Idris.Prelude.Just', E30} ->
					  fun (V63) ->
						  begin
						    V113 = begin
							     V89 = 'Idris.Core.Context':'un--toFullNames'(erased, V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V64) -> fun (V65) -> 'Idris.Core.Context':'dn--un--full_HasNames__Def'(V64, V65) end end, fun (V66) -> fun (V67) -> 'Idris.Core.Context':'dn--un--resolved_HasNames__Def'(V66, V67) end end},
													  case V63 of
													    {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> fun (V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> V85 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51);
													    _ -> erlang:throw("Error: Unreachable branch")
													  end,
													  V2),
							     case V89 of
							       {'Idris.Prelude.Left', E52} -> fun (V90) -> {'Idris.Prelude.Left', V90} end(E52);
							       {'Idris.Prelude.Right', E53} ->
								   fun (V91) ->
									   ('un--toCDef'(V0, V1,
											 case V63 of
											   {'Idris.Core.Context.MkGlobalDef', E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> fun (V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112) -> V94 end(E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74);
											   _ -> erlang:throw("Error: Unreachable branch")
											 end,
											 V91))(V2)
								   end(E53);
							       _ -> erlang:throw("Error: Unreachable branch")
							     end
							   end,
						    case V113 of
						      {'Idris.Prelude.Left', E75} -> fun (V114) -> {'Idris.Prelude.Left', V114} end(E75);
						      {'Idris.Prelude.Right', E76} -> fun (V115) -> 'Idris.Core.Context':'un--setCompiled'(V0, V1, V115, V2) end(E76);
						      _ -> erlang:throw("Error: Unreachable branch")
						    end
						  end
					  end(E30);
				      {'Idris.Prelude.Nothing'} -> fun () -> 'Idris.Core.Core':'dn--un--throw_Catchable__Core_Error'(erased, {'Idris.Core.Core.InternalError', 'Idris.Prelude.Strings':'un--++'(<<"Trying to compile unknown name "/utf8>>, 'Idris.Core.Name':'dn--un--show_Show__Name'(V1))}, V2) end();
				      _ -> erlang:throw("Error: Unreachable branch")
				    end
			    end(E29);
			_ -> erlang:throw("Error: Unreachable branch")
		      end
		    end
	    end(E1);
	_ -> erlang:throw("Error: Unreachable branch")
      end
    end.

'un--boolHackTree'(V0, V1) ->
    case V1 of
      {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} ->
	  fun (V2, V3, V4, V5) ->
		  begin
		    V17 = 'Idris.Prelude':'dn--un--traverse_Traversable__List'(erased, erased, erased, {'Idris.Prelude.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> 'Idris.Prelude':'dn--un--map_Functor__Maybe'(erased, erased, V8, V9) end end end end, fun (V10) -> fun (V11) -> 'Idris.Prelude':'dn--un--pure_Applicative__Maybe'(erased, V11) end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> 'Idris.Prelude':'dn--un--<*>_Applicative__Maybe'(erased, erased, V14, V15) end end end end}, fun (V16) -> 'nested--8642-5744--in--un--toBool'(erased, V5, V4, V3, V2, V16) end, V4),
		    case V17 of
		      {'Idris.Prelude.Just', E4} -> fun (V18) -> {'Idris.Core.CompileExpr.CConstCase', V2, V3, V18, V5} end(E4);
		      {'Idris.Prelude.Nothing'} -> fun () -> {'Idris.Core.CompileExpr.CConCase', V2, V3, V4, V5} end();
		      _ -> erlang:throw("Error: Unreachable branch")
		    end
		  end
	  end(E0, E1, E2, E3);
      _ -> V1
    end.

'un--applyNewType'(V0, V1, V2, V3, V4) -> begin V5 = 'un--expandToArity'(V0, V1, V3, V4), 'nested--7913-5097--in--un--keepArg'(V0, V4, V3, V2, V1, erased, V5) end.